<!doctype html>
<html lang="de">
<head>
    <meta charset="utf-8">
    <meta name="language" content="de">
    <title>Website Performance Optimierung ohne Zukunft?</title>
    <meta name="description" content="null">
    <meta name="date" content="2017-07-01">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="/assets/styles.css"/>
    <link href="/" rel="home start" />

    <link href="/feed/atom" type="application/atom+xml" rel="alternate" title="Atom Feed" />
    <link href="/feed/json" type="application/json" rel="alternate" title="JSON Feed" />
    <link href="/feed/rss" type="application/rss+xml" rel="alternate" title="RSS Feed" />

    <meta property="og:title" content="Website Performance Optimierung ohne Zukunft?" />
    <meta property="og:url" content="https://blog.thomaspuppe.de/web-performance" />
    <meta property="og:type" content="article" />
    <meta property="og:article:published_time" content="2017-07-01" />
    <meta property="og:article:author" content="Thomas Puppe" />
    <script type="module" src="https://backspace.eco/b.js"></script>
</head>
<body>
    <header>
        <p><a href="https://blog.thomaspuppe.de/" rel="home start">Blog von Thomas Puppe, Web Developer.</a></p>
    </header>
    <article class="post">

        <div class="post__meta">
            <span class="post__category">#Webentwicklung</span>
            <time datetime="2017-07-01">02. Juli 2017</time>
        </div>

        <h1 class="post__title">Website Performance Optimierung ohne Zukunft?</h1>

        <p>Why is Webperf so hard these days?</p>
<p>Früher: Dateien zusammenfügen, Bilder usw komprimieren, richtige Load Order, Cachine Header -&gt; Das galt universell. Alle Seiten, alle Besuche.</p>
<p>Heute: Critical CSS (unterschiedlich, auch pro Device), Preload (weiß man nicht, welche Datei), Server Push Async (aber nur beim ersten Besuch).</p>
<p>Sind also alle einfachen Sachen (niedrig hängende Früchte) abgearbeitet?</p>
<p>CSS per JavaScript nachladen ist ein NoGo! (Wenn du &quot;Strategien&quot; brauchst, um dein CSS zu laden, ist es vermutlich zu viel - dann liegt dein problem woanders.)
Critical CSS rendern: ok, aber eigentlich nicht richtig.
Per Progressive Web App und Service Worker Inhalte schonmal vorzuhalten ist ok, aber der normale Browsercache soltle das meiste davon schon tun.</p>
<p>Wenn bei uns alles super ist, dann 3rd parties lehren</p>
<p>Manuelle Audits</p>
<p>Wahldaten, Datawrapper (ungecachte 200k für Balkngraphen)</p>
<p>Der britische Guardian stellt für seine Redaktion ein <a href="https://www.theguardian.com/info/developer-blog/2017/mar/06/empowering-our-editorial-teams-to-impact-page-performance">Dashboard mit den langsamsten Artikeln</a> bereit. Häufig reicht das Wissen um eine langsame Seite, und die Anpassung eines Embeds (z.B.), um das Problem zu lösen.</p>
<blockquote>
<p>The tool has had significant impact. In terms of direct performance improvements, sixty percent of the pages alerted since the tool was implemented had performance problems resolved by editorial action.</p>
</blockquote>
<p>Wir bei ZEIT Online haben ein</p>
<p>Screenshot von unserem Sitespeed Dashboard</p>
<p>Werbebranche hoffnungslos?</p>
<ul>
<li>Anfänge</li>
<li>Hype</li>
<li>Ernüchterung</li>
</ul>
<p>Bücher, Konferenzthemen der Velocity, Blogposts.</p>
<p>Diskussion: wo stehen wir? Wie geht es weiter?</p>
<p>AMP: Standards statt Technik.</p>
<p><a href="https://www.cdn77.com/blog/web-performance-expert-insights-2018/">https://www.cdn77.com/blog/web-performance-expert-insights-2018/</a></p>


    </article>
</body>
</html>
