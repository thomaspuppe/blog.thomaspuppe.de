<!doctype html>
<html lang="de">
<head>
    <meta charset="utf-8">
    <meta name="language" content="de">
    <title>Inodes im Linux: Volle Festplatte, obwohl noch Platz ist?</title>
    <meta name="description" content="Kürzlich fiel mein Bundestwitter-Server aus. Bei der Suche nach der Ursache habe ich einige neue Dinge über Linux gelernt, die ich hier dokumentieren möchte.">
    <meta name="date" content="2016-10-18">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="/assets/styles.css"/>
    <link href="/" rel="home start" />

    <link href="/feed/atom" type="application/atom+xml" rel="alternate" title="Atom Feed" />
    <link href="/feed/json" type="application/json" rel="alternate" title="JSON Feed" />
    <link href="/feed/rss" type="application/rss+xml" rel="alternate" title="RSS Feed" />

    <meta property="og:title" content="Inodes im Linux: Volle Festplatte, obwohl noch Platz ist?" />
    <meta property="og:url" content="https://blog.thomaspuppe.de/inodes-linux-festplatte-voll" />
    <meta property="og:type" content="article" />
    <meta property="og:article:published_time" content="2016-10-18" />
    <meta property="og:article:author" content="Thomas Puppe" />

</head>
<body>
    <header>
        <p><a href="https://blog.thomaspuppe.de/" rel="home start">Blog von Thomas Puppe, Web Developer.</a></p>
    </header>
    <article class="post">

        <div class="post__meta">
            <span class="post__category">#Webentwicklung</span>
            <time datetime="2016-10-18">18. Oktober 2016</time>
        </div>

        <h1 class="post__title">Inodes im Linux: Volle Festplatte, obwohl noch Platz ist?</h1>

        <p>Kürzlich fiel mein <a href="http://www.bundestwitter.de">Bundestwitter</a>-Server aus. Bei der Suche nach der Ursache habe ich einige neue Dinge über Linux gelernt, die ich hier dokumentieren möchte.</p>
<p>Die Tweet-Sammel-Cronjobs auf meinem Linux (Ubuntu) Server meldeten sich, dass sie keine Daten mehr schreiben könnten. Ich kenne das Problem schon, wenn zu viele Logs und Backups herumliegen ohne aufgeräumt zu werden.</p>
<p>Diesmal allerdings sagt <code>df -h</code>, es sei noch ordentlich Platz auf der Platte frei:</p>
<pre>
Size    Used    Avail    Use%
 77G     50G      28G    65%</pre>

<p>Nach kurzer Recherche stieß ich darauf, dass nicht nur der Platz auf der Festplatte begrenzt ist, sondern auch die maximale Zahl der Dateien. Wikipedia sagt:</p>
<blockquote>
<p>Die Anzahl der möglichen Inodes und somit der möglichen Dateien ist bei manchen Dateisystemen beschränkt; wird die Maximalanzahl erreicht, lassen sich keine weiteren Dateien anlegen.</p>
<p>&mdash; <a href="https://de.wikipedia.org/wiki/Inode#Praxis">Wikipedia: Inode</a></p>
</blockquote>
<p>Also: <code>df -i</code>.</p>
<pre>
 Inodes      IUsed   IFree    IUse%
1000000    1000000       0     100%</pre>

<p>Eine Lösung könnte darin bestehen, die Festplatte neu zu formatieren und die Zahl der möglichen Inodes höher festzulegen. Ob das bei meinem 1und1 VirtualServer so einfach möglich ist, ist fraglich. Zunächst möchte ich aber wissen, wo diese vielen Dateien liegen und woher sie kommen. Bundestwitter legt zwar viele Logfiles für Tweets an, aber diese werden regelmäßig gepackt, heruntergeladen und vom Server gelöscht. Sie erklären die volle Platte vermutlich nicht.</p>
<p>Ich suche also einen Befehl, der mir zeigt, in welchen Verzeichnissen viele Inodes verbraucht werden. Google ist mein Freund:</p>
<p><code>find /var/www/ -xdev -printf &#39;%h\n&#39; | sort | uniq -c | sort -k 1 -n</code></p>
<p>... listet alle Folder und subfolder mit der Zahl ihrer enthaltenen Inodes auf. Was ggf. sehr lang wird &mdash; in meinem Fall knapp 2000 Einträge:</p>
<pre>
1       /var/www/blog_thomaspuppe_de/assets
[... 2000 weitere Einträge ...]
2563    /var/www/bundestwitter/cache/www_bundestwitter_de/connectionStatistics</pre>

<p>Das hilft also nur bei überschaubarer Ordnertiefe. Besser ist dieser Befehl, der die Anzahl der Inodes in einem Verzeichnis (oder in jedem Unterverzeichnis) zeigt:</p>
<p><code>for i in /var/www/*; do echo $i; find $i | wc -l | sort ; done</code> (ohne &quot;/*&quot; für das einzelne Verzeichnis):</p>
<pre>
104      /var/www/blog_thomaspuppe_de
76266    /var/www/bundestwitter
2        /var/www/html
1371     /var/www/lab_thomaspuppe_de
32748    /var/www/socialmediapolitik
2        /var/www/thomas_works
3        /var/www/www_meetingtimer_biz
101      /var/www/www_thomaspuppe_de
</pre>

<p>Es zeigt sich, dass Bundestwitter nicht der Verursacher ist. Aber mit dem genannten Befehl kann ich nun die Ordner des Root-Verzeichnisses auflisten ...</p>
<pre>sudo su #(um sich eine Menge "Permission denied" Meldungen zu sparen)
for i in /*; do echo $i; find $i | wc -l | sort ; done</pre>

<p>... zeigt, dass die allermeisten Inodes in <code>/var</code> verbraucht werden. (Warum in <code>proc</code> so viel los ist, wird Gegenstand einer anderen Untersuchung sein.)</p>
<pre>
16        /home
22271     /proc
29687     /usr
953965    /var
</pre>

<p>Von hier aus kann ich mich mit dem Befehl <code>for i in /var/*; do echo $i; find $i | wc -l | sort ; done</code> usw. fortbewegen.</p>
<pre>
662       /var/log
836952    /var/spool
112120    /var/www
</pre>

<p>In <code>/var/spool</code> liegt also sehr viel Zeugs. Dies ist das &quot;Verzeichnis für abzuarbeitende Warteschlangen (Druckaufträge, E-Mail-Versandaufträge …)&quot;
(<a href="https://de.wikipedia.org/wiki/Filesystem_Hierarchy_Standard">Wikipedia</a>).</p>
<p>Mit der bekannten Technik taste ich mich weiter voran und stoße auf ein Verzeichnis, in dem fast alle Dateien liegen:</p>
<pre>836836    /var/spool/postfix/maildrop</pre>

<p>Das sind also felgeschlagene Versuche des Systems, E-Mails zu versenden. Stichproben (<code>cat /var/spool/postfix/maildrop/D7E6A90D4CA9</code>) ergeben, dass meine Cronjobs versuchen, Mails zu versenden.</p>
<h3 id="ich-habe-also-meinen-übeltäter-nun-geht-es-ans-aufräumen">Ich habe also meinen Übeltäter. Nun geht es ans Aufräumen.</h3>
<p>Die erste Maßnahme, für den Seelenfrieden, ist natürlich</p>
<pre>sudo rm -rf /var/spool/postfix/maildrop/*
bash: /bin/rm: Argument list too long</pre>

<p>Eine schnelle Suche führt mich auf`<a href="http://www.sysadminslife.com/linux/bash-binrm-die-argumentliste-ist-zu-lang/">sysadminslife.com</a>, wo folgender Befehl vorgeschlagen wird:</p>
<pre>find -type f -print0 | xargs -0 rm</pre>

<p>An der Stelle möchte ich Explainshell erwähnen. Eine Website, die Shell-Befehle aufdröselt und die einzelnen Bestandteile erklärt. <a href="http://explainshell.com/explain?cmd=find+-type+f+-print0+%7C+xargs+-0+rm">http://explainshell.com/explain?cmd=find+-type+f+-print0+%7C+xargs+-0+rm</a></p>
<p>Ta dah:</p>
<pre>$ ls /var/spool/postfix/maildrop | wc -l
14

$ df -i
Inodes      IUsed     IFree    IUse%
1000000    143491    856509      15%
</pre>


<p>Es bleibt die Frage: Wie vermeide ich, dass die Ausführung der Cronjobs Mails erzeugt (die dann in der Spool Queue landen)?</p>
<p><a href="http://www.cyberciti.biz/faq/disable-the-mail-alert-by-crontab-command/">http://www.cyberciti.biz/faq/disable-the-mail-alert-by-crontab-command/</a>:</p>
<blockquote>
<p>The crontab command is used to maintain crontab files for individual users. By default the output of a command or a script (if any produced), will be email to your local email account.</p>
</blockquote>
<p>Die einfachste Methode, dies zu verhindern, ist die Zeile <code>MAILTO=&quot;&quot;</code> an den beginn der Crontab-Datei (<code>crontab -e</code>) zu schreiben. Damit werden alle Cron-Mails aus diesr Datei unterdrückt. Alternativ kann man auch pro Zeile den Versand von Mails verhintern durch den Output nach /dev/null: <code>0 1 5 10 * /path/to/script.sh &gt; /dev/null</code>.</p>
<p>Kleines Extra: In Zukunft möchte ich eine Warnung erhalten, wenn der Plattenplatz (oder die Inodes) zur Neige gehen. Der Test dafür ist leicht geschrieben (siehe oben), und einen Mechanismus zur Benachrichtigung habe ich schon für andere Zwecke. Und zwar benutze ich den Service und die App von <a href="https://www.pushover.net">Pushover: Simple Notifications for Android, iOS, and Desktop</a> und <a href="https://deadmanssnitch.com/">Dead Man&#39;s Snitch — A dead simple cron job monitoring tool</a>.</p>


    </article>
</body>
</html>
