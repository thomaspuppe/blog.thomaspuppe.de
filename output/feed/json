{
    "version": "https://jsonfeed.org/version/1",
    "title": "Blog von Thomas Puppe, Web Developer.",
    "home_page_url": "https://blog.thomaspuppe.de",
    "feed_url": "https://blog.thomaspuppe.de/feed/json",
    "author": {
        "name": "Thomas Puppe",
        "url": "https://www.thomaspuppe.de"
    },
    "items": [
        {
            "id": "https://blog.thomaspuppe.de/fronteers-conference-2019-amsterdam",
            "content_html": "<p>A summary of the conference in one quote per talk</p>\n<p><strong><a href=\"https://www.twitter.com/sonniesedge\">Charlie Owen</a></strong>: All constraints are beautiful</p>\n<blockquote>\n<p>Facebooks technology choices are made for a giant unimportant app.</p>\n</blockquote>\n<hr>\n\n<p><strong><a href=\"https://www.twitter.com/hj_chen\">Chen Hui Jing</a></strong>: A deep dive into images on the web</p>\n<blockquote>\n<p>This is actually fascinating, at least to me. And I am on the stage. So you have to sit through this.</p>\n</blockquote>\n<hr>\n\n<p><strong><a href=\"https://www.twitter.com/porteneuve\">Christophe Porteneuve</a></strong>: Fun &amp; Games with ES Proxies</p>\n<blockquote>\n<p>Make a proxy of its own! The proxy proxy. You have to get paid better if you do this. It&#39;s elite.</p>\n</blockquote>\n<hr>\n\n<p><strong><a href=\"https://www.twitter.com/eva_trostlos\">Eva Lettner</a></strong>: Paint the Web - Drawing with CSS</p>\n<blockquote>\n<p>Doing nonsensical stuff on the web is what we, I think, are supposed to do.</p>\n</blockquote>\n<hr>\n\n<p><strong><a href=\"https://www.twitter.com/JoubranJad\">Jad Joubran</a></strong>: Secrets of Native-like PWAs</p>\n<blockquote>\n<p>Trust me on that one: the web does not need another pop-up.</p>\n</blockquote>\n<hr>\n\n<p><strong><a href=\"https://www.twitter.com/rachelandrew\">Rachel Andrew</a></strong>: Who Designed This? Where Web Platform features come from, and how to get involved</p>\n<blockquote>\n<p>You don&#39;t need any permission or special qualification to get involved.</p>\n</blockquote>\n<hr>\n\n<p><strong><a href=\"https://www.twitter.com/StephenCookDev\">Stephen Cook</a></strong>: 100% CSS Mario Kart</p>\n<blockquote>\n<p>Why are we using CSS to make a game? … Why not?</p>\n</blockquote>\n<hr>\n\n<p><strong><a href=\"https://www.twitter.com/aerotwist\">Paul Lewis</a></strong>: Custom Web Shadow Elements, or whatever...</p>\n<blockquote>\n<p>The user is more important than our convenience, in every case.</p>\n</blockquote>\n<hr>\n\n<p><strong><a href=\"https://www.twitter.com/adactio\">Jeremy Keith</a></strong> und <a href=\"https://www.twitter.com/rem\">Remy Sharp</a>: How We Built the World Wide Web in Five Days</p>\n<blockquote>\n<p>Defend simplicity and resilience! It&#39;s essential to the web.</p>\n</blockquote>\n<hr>\n\n<p><strong><a href=\"https://www.twitter.com/broccolini\">Diana Mounter</a></strong>: Component API design and the developer experience</p>\n<blockquote>\n<p>Duplication is far cheaper than the wrong abstraction.</p>\n</blockquote>\n<hr>\n\n<p><strong><a href=\"https://www.twitter.com/Jack_Franklin\">Jack Franklin</a></strong>: Components on the Web</p>\n<blockquote>\n<p>If you have a tree of components, it is much easier to dive in and find the code you want to change in isolation.</p>\n</blockquote>\n<hr>\n\n<p><strong><a href=\"https://www.twitter.com/rakshesha\">Ashi Krishnan</a></strong>: Learning from Machines</p>\n<blockquote>\n<p>Molecules are tiny but powerful – like you.</p>\n</blockquote>\n<hr>\n\n<p><strong><a href=\"https://www.twitter.com/_munter_\">Peter Müller</a></strong>: High Performance Web Fonts</p>\n<blockquote>\n<p>There is a ton of font loading techniques. You don&#39;t just need a technique. You need a strategy.</p>\n</blockquote>\n<hr>\n\n<p><strong><a href=\"https://www.twitter.com/raymondcamden\">Raymond Camden</a></strong>: It Was the Best of Times, It Was the Worst of Times</p>\n<blockquote>\n<p>If you add things to your website that browser vendors actively try to prevent, you&#39;re doing something wrong.</p>\n</blockquote>\n<hr>\n\n<p><strong><a href=\"https://www.twitter.com/AnjanaVakil\">Anjana Vakil</a></strong>: The universe in a single arrow</p>\n<blockquote>\n<p>That&#39;s why I am really jazzed to bring you along to my adventure in lambda land.</p>\n</blockquote>\n<hr>\n\n<p>Lea Verou (<a href=\"https://www.twitter.com/LeaVerou\">@LeaVerou</a>): The web design cheat code: Using SVG to bridge CSS’ gaps</p>\n<blockquote>\n<p>We can have a style element in our SVG, which is a document inside our CSS.</p>\n</blockquote>\n<hr>\n\n<p>Mandy Michael (<a href=\"https://www.twitter.com/\">@</a>): The Future of Web Typography with Variable Fonts</p>\n<p>Alex Russell (<a href=\"https://www.twitter.com/\">@</a>): The Mobile Web: MIA</p>\n",
            "url": "https://blog.thomaspuppe.de/fronteers-conference-2019-amsterdam",
            "title": "Quotes from Fronteers 2019 in Amsterdam",
            "summary": "A summary of the conference in one quote per talk",
            "date_modified": "2019-10-04T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/templating-mit-js-template-literals",
            "content_html": "<p>Für meinen kleinen <a href=\"https://github.com/thomaspuppe/easto\">Static-Site Generator easto</a> benutze ich keine Templating-Engine, sondern mache nur Suchen-und-Ersetzen in den Templates. Das sah bisher so aus:</p>\n<h2 id=\"gut-genug-string-replacement\">Gut genug: String-Replacement</h2>\n<pre>&lt;div class=\"post__meta\"&gt\n    &lt;span class=\"post__category\"&gt#{{ META_TAGS }}&lt;/span&gt\n    &lt;time datetime=\"{{ META_DATE }}\"&gt{{ META_DATELABEL }}&lt;/time&gt\n&lt;/div&gt\n&lt;h1 class=\"post__title\"&gt{{ META_TITLE }}&lt;/h1&gt\n{{ CONTENT }}\n</pre>\n\n<p>Im JavaScript habe ich dann über eine Liste von Metadaten iteriert und diese im Template ersetzt:</p>\n<pre>\ntemplate.replace('{{ CONTENT }}', fileContentHtml)\n\nfor (var key in metadata) {\n    const re = new RegExp('{{ META_' + key.toUpperCase() + ' }}', 'g')\n\n    if ( key === 'tags') {\n        const tagsString = metadata[key].join(', #')\n        template = template.replace(re, tagsString)\n    } else {\n        template = template.replace(re, metadata[key])\n    }\n}</pre>\n\n<p>... im Prinzip. In echt war dann alles noch etwas umständlicher. Die Regex Nummer ist nötig, weil nur das erste Vorkommen ersetzt wird, wenn man einen String als Parameter verwendet. In Teasern benutze ich etwas andere Ausgaben als im Post oder den Feeds. Usw.</p>\n<h2 id=\"besser-template-literals\">Besser: Template Literals</h2>\n<p>Bei einem <a href=\"https://github.com/thomaspuppe/news-benchmark\">anderen Projekt</a> wurde ich wieder daran erinnert, dass man in modernem JavaScript <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals\">Template Literals</a> zur Verfügung hat. Wenn Strings in Back Ticks (&#715;) gefasst sind, werden enthaltene Ausdrücke ausgeführt.</p>\n<pre>var kitty = \"Cheddar\";\nconsole.log(`Meine Katze heißt ${kitty}.`);\n=> Meine Katze heißt Cheddar.\n</pre>\n\n<p>Meine Template-Dateien sehen nun <a href=\"https://github.com/thomaspuppe/blog.thomaspuppe.de/commit/2223b3c22d4b1cba6c4d87151137a2f886c47f6c\">etwas anders</a> aus. Erstens werden sie komplett mit Back Ticks umschlossen. Und zweitens verwende ich Ausdrücke mit Dollarzeichen und geschweiften Klammern anstelle der selbst ausgedachten Marker fürs Suchen-und-Ersetzen.</p>\n<pre>`&lt;div class=\"post__meta\"&gt;\n    &lt;span class=\"post__category\"&gt;#${ meta.tags.join(', #') }&lt;/span&gt;\n    &lt;time datetime=\"{{ META_DATE }}\"&gt;${ meta.datelabel }&lt;/time&gt;\n&lt;/div&gt;\n&lt;h1 class=\"post__title\"&gt;${ meta.title }&lt;/h1&gt;\n${ content }\n`</pre>\n\n<p>Im JavaScript stecke ich ein Objekt zusammen das alles enthält, was das Template braucht.</p>\n<pre>const output = eval_template(template, {\n    'blogmeta': CONFIG,\n    'meta': metadata,\n    'content': fileContentHtml\n})\n</pre>\n\n<p>Damit das mit mehreren Variablen und Objekten funktioniert, habe ich im Netz eine magische Funktion gefunden (deren Quelle ich leider nicht mehr weiß).</p>\n<pre>const eval_template = (s, params) => {\n    return Function(...Object.keys(params), \"return \" + s)\n    (...Object.values(params))\n}</pre>\n\n\n<h2 id=\"voilá\">Voilá</h2>\n<p>Diese Änderung hat mehrere Vorteile.</p>\n<ul>\n<li>verschlankt den <a href=\"https://github.com/thomaspuppe/easto/commit/491949d33e41bdc4b781083066607e9bfaaa5932\">Code</a></li>\n<li>kleine Operatioenn wie <code>join</code>, <code>toUpper</code> oder <code>if</code> kann ich im Template machen.</li>\n<li>Platzhalter im Template, für die es keine Variablen/Werte gibt, werfen jetzt Fehler (vorher wurden sie einfach nicht ersetzt).</li>\n<li>Fallbacks im Template <code>&lt;html lang=&quot;${ meta.language || &#39;de&#39; }&quot;&gt;</code></li>\n<li>Template-Code-Beispiele aus dem Inhalt wurden vorher behandelt wie Templates selbst – und auch ersetzt. Das passiert jetzt <a href=\"https://github.com/thomaspuppe/blog.thomaspuppe.de/commit/9058e03eeaa00b16aa17826cdda3e57bd51674b1\">nicht mehr</a>.</li>\n</ul>\n<p>Außerdem sieht das professioneller und sexier aus.</p>\n<h2 id=\"geht-da-noch-mehr\">Geht da noch mehr?</h2>\n<p>Auf jeden Fall. Insbesondere <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Nesting_templates\">Nesting Tempaltes</a> und <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Tagged_templates\">Tagged Templates</a> sehen vielversprechend aus, um z.B. verschiedene Block-Typen zu rendern. (Im Content steht ein Objekt wie <code>quote = {text:&quot;Niemand hat das Recht zu gehorchen&quot;, name:&quot;Hannah Arendt&quot;}</code>), und das Blog rendert eine schöne Blockquote.</p>\n",
            "url": "https://blog.thomaspuppe.de/templating-mit-js-template-literals",
            "title": "Templating mit JS Template Literals",
            "summary": "Wie natives JS Templating mein Suchen-und-Ersetzen im Blog-Generator ablöste",
            "date_modified": "2019-07-02T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/easto-static-site-generator",
            "content_html": "<p>Dieses Blog wird über einen <a href=\"\">Static-Site Generator</a> erzeugt. Zuletzt hatte ich die Open Source Software <a href=\"\">Acrylamid</a> im Einsatz, die leider nicht mehr maintained wird.</p>\n<p>Als Acrylamid Probleme hatte, und ich mich nach Alternativen umsah, begann der Aufstieg des JAM-Stacks in Meetups und Blogposts. Der Ansatz wird oft als schlank und schnell beschrieben, aber das sehe ich anders. Der JAM-Stack ist ein Zusammenkleben mehrerer SAAS oder FAAS aus der Cloud. Inhalte werden auf fremdem Speicher abgelegt, eine <em>Serverless</em> Generator-Software wird pro Sekunde fürs Rendern bezahlt, und ein weiterer Service übernimmt das Hosting. Und das alles nur um meine 20 HTML Seiten abzulegen -- sind die verrückt geworden? Und alle machen mit! Der nächste Trend wird garantiert &quot;speed up your JAM Stack with a self-hosted hard disk&quot;.</p>\n<p>Rant 1 Ende.</p>\n<p>Ich möchte mein Blog also lokal auf meinem Rechner schreiben und erzeugen. <a href=\"\">Static-Site Generatoren</a> gibt es wie Sand am Meer. Eigentlich fand ich Gatsby ganz interessant, weil (optional!) Möglichkeiten zur Integration in Richtung Contentful, Netlify, Algolia und co. Aber: das benutzt JS/React nicht nur zum Bauen der Seite, sondern müllt das auch alles in das Ergebnis. Und schon habe ich für ein &quot;Hello World&quot; vier JS-Requests mit 250 KB Download.</p>\n<p>Ich will nicht den JS-ist-böse Meckerkopf spielen. Und für viele Anwendungen ist es eine gute Idee, einmal das Paket zu laden und dann bei jedem Klick Bytes zu sparen die nicht mehr durch die Leitung müssen. Aber für eine statische Seite oder ein Blog mit zwei oder drei Page Views pro Besuch ist das halt keine gute Idee. Und bei Gatsby wird es wohl wieder schwierig, das JS zu rauszufrickeln.</p>\n<p>Rant 2 Ende.</p>\n<h2 id=\"easto-ein-static-site-generator-im-eigenbau\">Easto: ein Static-Site Generator im Eigenbau</h2>\n<p>Langes Meckern, kurzer Sinn: ich hatte mich entschieden, einen eigenen Generator zu schreiben. Den entscheidenden Impuls gab mir <a href=\"https://denis.ws/\">Denis Defreyne</a> beim ersten <a href=\"https://www.meetup.com/JAMStack_berlin/events/244478650/\">Static-Site Meetup in Berlin</a>, bei dem er dafür warb, es einmal selbst zu probieren.</p>\n<p>Erste Gehversuche hatte ich vor <stroke>Monaten</stroke> Jahren mit Ruby gemacht (<a href=\"GitHub/thomaspuppe/easto-ruby\">https://github.com/thomaspuppe/easto-ruby</a>). Da ich mich 2018 aber entschieden hatte, mich auf JavaScript zu konzentrieren, startete ich einen zweiten Anlauf.</p>\n<p>Diesen möchte ich nun beschreiben, und damit einen Fahrplan liefern, wie jeder mit 100 Zeilen Code seinen eigenen Static-Site Generator bauen kann.</p>\n<h2 id=\"schritt-1-markdown-dateien-iterieren-transformieren-und-speichern\">Schritt 1: Markdown-Dateien iterieren, transformieren, und speichern</h2>\n<p>Das Grundprinzip eines Static-Site Generators lässt sich in wenigen Zeilen Code umsetzen. Lies Dateien (z.B. Blogposts) von der Festplatte aus, mach etwas mit ihnen, und speichere das Ergebnis wieder auf die Festplatte.</p>\n<pre>const fs = require('fs')\nfs.readdirSync('content')\n  .forEach(sourceFilename => {\n    const sourcePath = `content/${sourceFilename}`\n    const content = fs.readFileSync(sourcePath, {encoding: 'utf-8'})\n    // TODO: Verarbeiten\n    const targetFilename = sourceFilename.replace('.md', '.html')\n    const targetPath = `output/` + targetFilename\n    fs.writeFileSync(targetPath, content)\n  })</pre>\n\n<p>Nun habe alle Dateien aus einem Quellordner ausgelesen, und unter neuem Namen in einen Zielordner gespeichert. Das könnte ich auch kopieren, ohne auszulesen, aber ich möchte ja noch etwas damit anfangen:</p>\n<pre>const fs = require('fs')\nconst marked = require('marked')\n\nfs.readdirSync('content')\n  .forEach(sourceFilename => {\n    const sourcePath = `content/${sourceFilename}`\n\n    const contentMarkdown = fs.readFileSync(sourcePath, {encoding: 'utf-8'})\n    const contentHtml = marked(contentMarkdown)\n\n    const targetFilename = sourceFilename.replace('.md', '.html')\n    const targetPath = `output/${targetFilename}`\n\n    fs.writeFileSync(targetPath, contentHtml)\n  })</pre>\n\n<p>Im Befehl <code>const contentHtml = marked(contentMarkdown)</code> steckt die Magie. Texte, die in Markdown verfasst wurden, werden in HTML umgewandelt. Natürlich könnte ich auch gleich in HTML schreiben. Schöner ist aber beides! Mit dem npm Modul marked kann ich sowohl schlankes Markdown schreiben (für Blogposts aus Überschriften, Texten, und Links), als auch im selben Text HTML verwenden, wenn Markdown nicht mehr ausreicht (für Figures, Tabellen, JS und CSS). Die <a href=\"https://github.com/thomaspuppe/blog.thomaspuppe.de/blob/master/content/2019-03-11_easto-static-site-generator.md\">Quelldatei dieses Blog-Posts</a> veranschaulicht die Mischung. Ein Artikel über <a href=\"https://raw.githubusercontent.com/thomaspuppe/blog.thomaspuppe.de/master/content/2017-04-06_browser-api-css-mediaqueries.md\">moderne Browser-APIs</a> enthält ausführbare Code-Beispiele aus CSS und JavaScript.</p>\n<p>Aber zurück zum Generator. Obiges Textbeispiel als JavaScript-Datei reicht schon aus, um ein kleines simples Blog zu erzeugen. Der Aufruf der JavaScript-Datei wird alle Markdown-Dateien im Content-Ordner als HTML im Output-Ordner ablegen.</p>\n<pre>$ node index.js\n🚀 Easto: 170.456ms</pre>\n\n<p>Wie in der modernen JavaScript-Welt üblich, musste ich vorher noch das &quot;marked&quot; Modul als Dependency mit dem aktuell coolen Paketmanager installieren.</p>\n<p>Die Laufzeit des Scripts messe ich übrigens mit</p>\n<pre>console.time('🚀 Easto')\n...\nconsole.timeEnd('🚀 Easto')\n</pre>\n\n<p>am Anfang und Ende des Scripts.</p>\n<h2 id=\"2-templating\">2: Templating</h2>\n<p>Nun ist der Output von Inhalt im HTML Format noch keine anständige Website. Alles um den eigentlichen Inhalt herum (Header, Navigation, Footer) möchte ich ja auch nicht auf jeder einzelnen Seite pflegen. Also: Templating to the rescue!</p>\n<p>Aber bevor ich irgendwelche Template-Engines lade, benutze ich simple String-Ersetzung. Das soll ja schließlich ein einfacher Seiten-Editor werden, und kein Dependency-Monster.</p>\n<p>Als erstes Template für mein Blog dient eine HTMl-Datei, deren Inhalt nur aus einem Platzhalter besteht.</p>\n<pre>&lt;!doctype html&gt;\n&lt;html lang=\"de\"&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\"&gt;\n        &lt;title&gt;Mein Blog&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;Willkommen auf Thomas Puppes Blog!&lt;/h1&gt;\n        {{ CONTENT }}\n    &lt;/body&gt;\n&lt;/html&gt;</pre>\n\n<p>In meinem Generator lese ich nun zusätzlich das Template aus (außerhalb der Schleife, denn das bleibt ja gleich) und benutze es zum Zusammenbauen jeder einzelnen Seite.</p>\n<pre>// Module laden\n\nconst template = fs.readFileSync('template.html', {encoding: 'utf-8'})\n\nfs.readdirSync('content')\n  .forEach(sourceFilename => {\n    const sourcePath = `content/${sourceFilename}`\n\n    const contentMarkdown = fs.readFileSync(sourcePath, {encoding: 'utf-8'})\n    const contentHtml = marked(contentMarkdown)\n\n    let contentPage = template.replace('{{ CONTENT }}', contentHtml)\n\n    const targetFilename = sourceFilename.replace('.md', '.html')\n    const targetPath = `output/` + targetFilename\n\n    fs.writeFileSync(targetPath, contentPage)\n  })</pre>\n\n<p>Und schon enthalten die generierten Dateien das HTML des Templates und alle Inhalte.</p>\n<p>Was sofort auffällt: der <code>title</code> ist gar nicht individuell. Den möchte ich aber gern setzen. Woraus eine zweite Frage folgt: woher bekomme ich den Titel, oder andere Metadaten?</p>\n<h2 id=\"3-metadaten-yamlfrontmatter\">3: Metadaten (YAML/Frontmatter)</h2>\n<p>&quot;Frontmatter&quot; ist ein gängiges Format oder Prinzip, um in Dateien mit Inhalten außerdem noch Meta-Informationen zu schreiben.</p>\n<pre>---\ntitle: Perfekte Link-Unterstreichung\nlanguage: de\npermalink: link-unterstreichung\n---\nHier beginnt der Inhalt. Er ist beliebig lang...</pre>\n\n<p>In einen Block am Anfang der Datei werden die Meta-Informationen geschrieben. Nach einem Trenner (<code>---</code>) kommt dann der Inhalt. Weil diese Struktur schön einfach und definiert ist, kommen selbst Computer damit klar &mdash; und deswegen gibt es auch ein npm Modul dafür: <a href=\"https://www.npmjs.com/package/yaml-front-matter\">yaml-front-matter</a>.</p>\n<p>Im Detail unterscheiden sich die Module (zum Beispiel brauchen manche den Trenner auch am Anfang der Datei), und es gibt kleine Fallstricke (wenn der Titel einen Doppelpunkt enthält, muss er in Anführungsstriche gesetzt werden, damit klar wird was Struktur und was Inhalt ist). Aber im Grunde parst das Modul die Datei, und gibt die Werte strukturiert zurück.</p>\n<p>Ich setze weitere Platzhalter in das Template, und ersetze diese beim Zusammenbauen der HTML-Seiten.</p>\n<p>Das Template sieht nun so aus:</p>\n<pre>&lt;!doctype html&gt;\n&lt;html lang=\"{{ META_LANGUAGE }}\"&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\"&gt;\n        &lt;title&gt;{{ META_TITLE }}&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;{{ META_TITLE }}&lt;/h1&gt;\n        {{ CONTENT }}\n    &lt;/body&gt;\n&lt;/html&gt;</pre>\n\n<p>Im JavaScript füge ich hinter das Transformieren von Markdown in HTML die Schleife zur Ersetzung aller Metadaten ein.</p>\n<pre>const content = fs.readFileSync(sourcePath, {encoding: 'utf-8'})\n\n// parse die Datei mit Inhalt und Metadaten\nconst frontmatter = yaml.loadFront(content)\n\n// der Teil unter dem Trenner steht als \"__content\" zur Verfügung\nlet contentHtml = marked(frontmatter.__content)\nlet contentPage = template.replace('{{ CONTENT }}', contentHtml)\n\n// die Yaml-Teile über dem Trenner sind nun Felder im \"frontmatter\" Objekt\ncontentPage = contentPage.replace('{{ META_TITLE }}', frontmatter['title'])\ncontentPage = contentPage.replace('{{ META_LANGUAGE }}', frontmatter['language'])</pre>\n\n<p>Das yaml-Modul habe ich am Anfang des Scripts via <code>const yaml = require(&#39;yaml-front-matter&#39;)</code> geladen, und vorher mit dem Paketmanager installiert.</p>\n<p>Die Werte aus dem Frontmatter kann ich natürlich nicht nur für den Inhalt der Seiten benutzen, sondern auch für den Dateinamen.</p>\n<pre>const targetFilename = frontmatter['permalink'] + '.html`</pre>\n\n<p>Wenn ich die Struktur häufiger erweitere, oder es etwas bequemer haben möchte, kann ich natürlich auch über alle Metadaten iterieren und diese im Template generisch ersetzen. Das ist dann schon etwas fortgeschrittener:</p>\n<pre>for (var key in contentFrontmatter) {\n    const re = new RegExp('{{ META_' + key.toUpperCase() + ' }}', 'g')\n\n    // Frontmatter unterstützt auch Arrays im Format\n    // \"tags: [Webentwicklung, Magic, Internet]\"\n    if ( key === 'tags') {\n        const tagsString = contentFrontmatter[key].join(', #')\n        contentPage = contentPage.replace(re, tagsString)\n    } else {\n        contentPage = contentPage.replace(re, contentFrontmatter[key])\n    }\n}</pre>\n\n<p>Bei der Entwicklung von diesen Algorithmus konnte ich wunderbar in kleinen Schritten vorgehen, weil ich binnen Milliskunden das Ergebnis meiner Bemühung im Browser betrachten konnte. Hoch lebe die handgestrickte Webentwicklung!</p>\n<h2 id=\"4-inhaltsverzeichnis\">4: Inhaltsverzeichnis</h2>\n<p>Mit dem bisherigen Code wurden also allerlei Seiten oder Blog-Artikel generiert. Eine dieser Seiten war die Startseite, die ich anfangs händisch angelegt und die Links zu allen Artkeln eingepflegt habe. Ich möchte aber, dass die Startseite meines Blog austomatisch eine Liste aller Blogposts enthält und darauf verlinkt. Auch das habe ich easto beigebracht.</p>\n<p>Beim Iterieren über alle Inhalte baue ich nicht nur die aktuelle Seite zusammen, sondern jeweils auch einen Link zur Seite. Und die gesammelten Links werden am Ende als Index-Seite gespeichert.</p>\n<pre>\nlet teaserList = [];\n\n.forEach(sourceFilename => {\n    ...\n    teaserList.push(`<li><a href=\"${frontmatter['permalink']}\">${frontmatter['title']}</a></li>`)\n}\n\nconst indexTemplate = fs.readFileSync('template_index.html', {encoding: 'utf-8'})\n\nlet indexContent = indexTemplate.replace(\n  '{{ CONTENT_BODY }}',\n  teaserList.join()\n)\n\nfs.writeFileSync('output/index.html', indexContent)</pre>\n\n<p>Das lässt sich nun mit der bekannten Technik der Templates erweitern, damit aus der simplen Linkliste schöne Teaser-Blöcke werden.</p>\n<pre>\nlet teaserList = [];\nconst teaserTemplate = fs.readFileSync(`templates/teaser.html`, {encoding: 'utf-8'})\n\n.forEach(sourceFilename => {\n    ...\n    // in der Schleife, wo auch Artikel-Metadaten ersetzt werden:\n    teaserContent = teaserTemplate.replace(re, fileContentFrontmatter[key])\n    teaserList.push(teaserContent)\n}</pre>\n\n<p>Beim Ansehen der index-Seite fällt auf, dass die Quelldatien in &quot;zufälliger&quot; Reihenfolge von der Platte gelesen werden. Ich löse das, indem ich als Präfix für meine Dateinamen das Datum jedes Blogposts benutze (<code>/content/2019-03-11_easto-static-site-generator.md</code>), und zwischen Auslesen und Verarbeiten eine Sortierung setze:</p>\n<pre>fs\n  .readdirSync('content')\n  .sort((a, b) => {\n    return b.localeCompare(a)\n  })\n  .forEach(sourceFilename => { ...</pre>\n\n\n<h2 id=\"5-feeds-generieren\">5: Feeds generieren</h2>\n<p>Wenn ich schon das chronologische Inhaltsverzeichnis erzeuge, kann ich im gleichen Zuge auch RSS-Feeds bauen, die im Grunde nichts anderes sind. Auch dafür gibt es ein Node-Package (&quot;feed&quot;), mit dem dies recht einfach gelingt.</p>\n<pre>\n    // Vorbereitung: Metadaten zum Feed\n\n    const Feedbuilder = require('feed')\n    feed_config = {\n        \"title\": \"Blog von Thomas Puppe, Web Developer.\",\n        \"description\": \"This is my personal feed!\"\n    }\n    let feed = new Feedbuilder.Feed(feed_config)\n\n    // ... in der Schleife der Blogposts: \"Teaser\" sammeln\n\n    const feedItem = {\n        title: contentFrontmatter['title'],\n        description: contentFrontmatter['description'],\n        date: contentFrontmatter['date'],\n        link: `https://blog.thomaspuppe.de/${targetFilename}`\n    }\n    feed.addItem(feedItem)\n\n    // ... nach der Schleife: Speichern der Feeds in den Output-Ordner\n\n    fs.mkdirSync(`output/feed`)\n    fs.writeFileSync(`output/feed/rss`, feed.rss2())\n    fs.writeFileSync(`output/feed/atom`, feed.atom1())\n    fs.writeFileSync(`output/feed/json`, feed.json1())\n</pre>\n\n<p>Die Domain des Blogs möchte ich am Ende lieber in einer Konfigurationsdatei haben als im Quellcode, aber das Beispiel zeigt, worauf ich hinaus will: mit wenigen Zeilen Code lassen sich Feeds in den gängigen Formaten RSS, Atom und JSON bauen.</p>\n<p>Eine XML Sitemap <em>sollte</em> ähnlich funktionieren sein, das habe ich aber noch nicht umgesetzt.</p>\n<h2 id=\"6-statische-dateien-kopieren\">6: Statische Dateien kopieren</h2>\n<p>Zuletzt noch alles was den geschriebenen Inhalt anreichert: Assets (CSS, JS), Bilder und andere statische Dateien kopiere ich direkt aus einer Quelle in das Output-Verzeichis. Das Node-Modul <code>ncp</code>ermöglicht das rekursiv.</p>\n<pre>const ncp = require('ncp').ncp\nncp('static', 'output', err => {\n  if (err) return console.error(err)\n})\n</pre>\n\n\n<h2 id=\"deployment\">Deployment</h2>\n<p>Am Ende habe ich einen Output-Ordner, der alle Inhalte als HTML-Dateien enthält, und außerdem ein Inhaltsverzeichnis, Feeds, mein CSS, und Bilder.</p>\n<p>Das lässt sich am einfachsten per <code>scp</code> auf meinen Server kopieren. Optionen wären auch auch FTP, Github Pages, Netlify, whatever. Das ist einer der Vorteile statischer Websites :-)</p>\n<h2 id=\"struktur-und-übersicht\">Struktur und Übersicht</h2>\n<p>Okay, das war ein langer Blogpost. Rekapitulieren wir das Ganze:</p>\n<ul>\n<li>Mit rund 100 Zeilen JavaScript-Code (und 5 Modulen als direkte Dependency) lässt sich ein Static-Site Generatorprogrammieren, der aus markdown-Dateien ein Blog rendert.</li>\n<li>Dieses Blog besteht aus Artikeln, einer Homapeg mit einer Liste aller Artikel, und aus Feeds in den Formaten RSS, Atom und JSON.</li>\n<li>Zwei HTML-Template-Dateien dienen als Rahmen für die Artikel und als Teaser-Ansicht auf der Homepage. Ich brauche dazu keine Template-Engine, sondern Suchen-und-Ersetzen genügt.</li>\n</ul>\n<p>Die Markdown-Dateien bestehen aus zwei Teilen</p>\n<ol>\n<li>Metadaten wie Titel, Permalink, Sprache, Beschreibung oder Datum. Diese werden im Frontmatter-Format hinterlegt, und können unter ihrem Namen in den Templates genutzt werden.</li>\n<li>Inhalte, die in Markdown geschrieben werden. Ich kann auch HTMl-Code verwenden, oder beides vermischen.</li>\n</ol>\n<p>Der Algorithmus besteht aus drei Teilen</p>\n<ol>\n<li>Einsammeln von Templates, Konfiguration und Inhalten</li>\n<li>Iterieren über die Inhalte. Dabei werden Artikel gerendert und gespeichert. Teaser und Feed-Items werden zusammengetragen.</li>\n<li>Abspeichern der Homepage und Feeds, Kopieren von statischen Dateien (Bilder und Assets).</li>\n</ol>\n<h2 id=\"fazit-und-ausblick\">Fazit und Ausblick</h2>\n<p>Mit diesem Setup lassen sich Blogs in weniger als einer Sekunde generieren. Außerdem finde ich als Programmierer so ein Projekt sehr schön, weil ich mir neue Features direkt nach Bedarf selbt hinzufügen kann, und keinen Code habe den ich nicht benötige.</p>\n<p>Die nächsten Featues werden sein</p>\n<ul>\n<li>Code-Highlighting in Artikeln (wovon genau <em>dieser</em> Artikel hier profitieren wird)</li>\n<li>&quot;Komponenten als Inhaltstyp&quot;. Soll heißen: im Inhalt schreibe ich so etwas wie <code>!tweet {id: 1234, author: &#39;thomaspuppe&#39;, content: &#39;hello Twitter&#39;}</code>, und ein Template rendert schönes HTML daraus.</li>\n<li>Keyword/Tag-Seiten: alle Artikel zu einem Tag unter einer URL <code>/thema/webentwicklung</code> oder <code>/language/en</code> versammeln</li>\n<li>Paginierung der Übersichtsseiten</li>\n</ul>\n<p>... und die Abstrahierung von easto in ein Modul, das auch andere benutzen können. <a href=\"https://github.com/thomaspuppe/easto\">Easto ist Open Source</a> und schon jetzt recht gut per Konfiguration steuerbar, aber bevor sie jeder benutzen <em>kann</em> und <em>möchte</em>, muss noch ein wenig Aufräumarbeit und Dokumentation geschehen.</p>\n<p>Ich freue mich über Feedback, am besten via Twitter an <a href=\"https://twitter.com/thomaspuppe\">@thomaspuppe</a> oder <a href=\"https:/www.thomaspuppe.de\">E-Mail</a>.</p>\n",
            "url": "https://blog.thomaspuppe.de/easto-static-site-generator",
            "title": "Easto: ein kleiner schneller Static-Site Generator",
            "summary": "Um mein kleines Blog zu betreiben, brauche ich keine fremde Software. Einfache Prinzipien und ein paar Node-Module genügen, um mir selbst einen Static-Site Generator zu schreiben. Eine Schritt-für-Schritt Anleitung.",
            "date_modified": "2019-03-11T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/dark-mode-css",
            "content_html": "<p>Mit Version 10.14 Mojave von macOS <a href=\"https://developer.apple.com/design/human-interface-guidelines/macos/visual-design/dark-mode/\">hat Apple den &quot;Dark Mode&quot; eingeführt</a>. Über seine Systemeinstellungen kann man das Farbschema des Betriebssystems in einen Modus versetzen, der alle Interfaces abdunkelt.</p>\n<p>Das funktioniert für native Software und die GUI des Browsers, aber schlägt natürlich nicht auf Websites durch. (Außer man benutzt des Reader-Modus im Safari.) Für seine Website kann man aber einen Dark Mode via CSS bauen.</p>\n<figure>\n    <img src=\"/images/2019/01/dark-mode-css/blog-both.jpg\" alt=\"Screenshots von www.thomaspuppe.de im Dark Mode und Light Mode\"/>\n    <figcaption>www.thomaspuppe.de und die MacOS Systemeinstellung im Light Mode (links) und Dark Mode (rechts)</figcaption>\n</figure>\n\n<p>Der aktivierte Dark Mode wird via Media Query an CSS und JS des Browsers exponiert, sodass man als Programmierer einer Website auf diesen bevorzugten Modus seiner Besucher eingehen kann. Menschen, die auf ihrem Computer helle Schrift auf dunklem Hintergrund bevorzugen, bekommen dies auch auf meiner Website. Die Umsetzung ist, wie bei anderen Media Queries auch, sehr einfach:</p>\n<pre>body {\n    background: #fff;\n    color: #333;\n}\n@media (prefers-color-scheme: dark) {\n    body {\n        background: #333;\n        color: #fff;\n    }\n}</pre>\n\n<p>Die Query nimmt drei Werte an: <code>dark</code>, <code>light</code> und <code>no-preference</code>. Eine normalerweise dunkle Website kann also auch ins Helle umschwenken, wenn gewünscht. Wobei in der Praxis ist im Safari ja immer hell, das GUI für Systemeinstellung im MacOS gibt kein &quot;no preference&quot; her.</p>\n<h2 id=\"der-teufel-steckt-im-detail\">Der Teufel steckt im Detail</h2>\n<p>Die obigen Zeilen sind das, was ich immer als &quot;Toy Example&quot; bezeichne. Zunächst sieht es sehr einfach aus. Aber natürlich ist es mit dem Umdrehen von Hintergrund- und Textfarbe in den meisten Fällen nicht getan.</p>\n<p>Je fancier das Design einer Website ist, desto mehr muss man auch für den Dark Mode hinterherräumen. Selbst auf meiner Homepage und in meinem Blog hat es nicht ausgereicht, zwei Farben zu invertieren.</p>\n<p>Meine <a href=\"/link-unterstreichung\">spezielle Unterstreichung von Links</a> erfordert einen Text-Shadow, der im Dark Mode schlecht aussieht:</p>\n<figure>\n    <img src=\"/images/2019/01/dark-mode-css/text-shadow.jpg\" alt=\"Screenshot: Schlecht lesbarer Text, weil weißer Schatten um weiße Schrift herum\"/>\n    <figcaption>Die Umkehrung von Hintergrund- und Schriftfarbe ist nicht genug, wenn man farbige Schlagschatten am Text definiert hat.</figcaption>\n</figure>\n\n<p>Und schon ist man dabei, seinen kleinen Hacks hinterherzuräumen.</p>\n<pre>@media (prefers-color-scheme: dark) {\n    a {\n        color: currentColor;\n        background-image: none;\n        text-shadow: none;\n        text-decoration: underline;\n    }\n}</pre>\n\n<p><strong>Complexity is killing us.</strong></p>\n<p>Auch sonst ist man gut beraten, seine Designs im Dark Mode ausführlich zu testen. Denn der Teufel steckt im Detail. Ein Artikel bei <a href=\"https://css-tricks.com/dark-modes-with-css/#article-header-id-0\">CSS-Tricks</a> empfiehlt, helle Bilder per CSS abzudunkeln, weil sie sonst auf dunklem Hintergrund zu grell sind. Apple hat Beispiele für <a href=\"https://developer.apple.com/design/human-interface-guidelines/macos/visual-design/dark-mode/#images-icons-glyphs\">Schatten und Glow-Effekte an Icons</a>.</p>\n<p>Alle Farben im Dark Mode muss man erneut auf ihren Kontrast überprüfen.</p>\n<p>Bei größeren Projekten helfen Sass-Variablen oder <a href=\"https://css-tricks.com/dark-modes-with-css/#article-header-id-1\">CSS Custom Properties</a> bei der Organisation der Farben.</p>\n<h2 id=\"noch-nicht-in-browsern-verfügbar\">Noch nicht in Browsern verfügbar</h2>\n<p>In der Praxis ist die <code>prefers-color-scheme</code> Media Query noch nicht sinnvoll. Dafür ist die Unterstützung viel zu schlecht. Erstens stellt sich die Frage, wer den Dark Mode in seinem MacOS überhaupt aktiviert. Und dann muss man noch den Safari Browser nutzen ... in dem der Dark Mode bisher auch nur in der Developer Preview verfügbar ist.</p>\n<p>Sobald aber Chrome und Firefox das Feature unterstützen, könnte es sich lohnen in diesen Modus einzusteigen. Bei Firefox sucht das <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1494034\">Feature</a> gerade nach einem Assignee ;-)</p>\n<h2 id=\"ähnliche-queries\">Ähnliche Queries</h2>\n<p>Im W3C Draft für Media Queries Level 5 gibt es weitere Ideen, die <a href=\"https://drafts.csswg.org/mediaqueries-5/#mf-user-preferences\">Präferenzen von Usern zu berücksichtigen</a>:</p>\n<ul>\n<li><code>inverted-colors</code></li>\n<li><code>prefers-reduced-motion</code>, was heute schon im Safari und Firefox <a href=\"https://www.caniuse.com/#feat=prefers-reduced-motion\">unterstützt wird</a>, und ich sehr empfehle.</li>\n<li><code>prefers-reduced-transparency</code></li>\n<li><code>prefers-contrast</code> ... halte ich auch für sehr nützlich aus Accessibility-Gesichtspunten!</li>\n</ul>\n<h2 id=\"weiterführende-artikel\">Weiterführende Artikel:</h2>\n<ul>\n<li><a href=\"https://medium.com/@mwichary/dark-theme-in-a-day-3518dde2955a\">Dark theme in a day</a></li>\n<li><a href=\"https://css-tricks.com/dark-modes-with-css/\">Dark Mode in CSS</a></li>\n<li><a href=\"https://stuffandnonsense.co.uk/blog/redesigning-your-product-and-website-for-dark-mode\">Redesigning your product and website for dark mode</a></li>\n</ul>\n",
            "url": "https://blog.thomaspuppe.de/dark-mode-css",
            "title": "Dark Mode für Websites",
            "summary": "Bisher nur experimentell, aber ein schönes Bastelfeature: den MacOS Dark Mode via CSS unterstützen",
            "date_modified": "2019-01-26T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/notizen-januar-2019",
            "content_html": "<h2 id=\"tim-kadlec-the-ethics-of-web-performance\">Tim Kadlec: The Ethics of Web Performance</h2>\n<p>Tim Kadlec räsoniert in seinem Artikel &quot;<a href=\"https://timkadlec.com/remembers/2019-01-09-the-ethics-of-performance/\">The Ethics of Web Performance</a>&quot; darüber, dass imperformante Websites nicht nur ökonomisch sondern auch moralisch schlecht sind.</p>\n<blockquote>\n<p>Performance as exclusion. Performance as waste.</p>\n</blockquote>\n<p>Zum Thema Waste gibts dann eine schöne Milchmädchenrechnung: in einer Studie wurde errechnet, dass für jedes GB Daten im Internet 5 kWh an Energie benötigt werden (für die Übertragung, nehme ich an). Folglich sind das laut Kadlec 17.6 Millionen kWh pro Tag. Jetzt kann man als Hausaufgabe überschlagen wie viele Kernkraftwerke durch das Abschalten des Google Tag Managers eingespart würden ;-)</p>\n<p>Ein anderes Beispiel: beim <a href=\"http://blog.chriszacharias.com/page-weight-matters\">Youtube Feather</a> Projekt hat <a href=\"https://twitter.com/zacman85\">Chris Zacharias</a> entdeckt, dass Nutzer in nicht-so-reichen Ländern die Videoplattform überhaupt erst nutzen können, wenn man sie radikal beschleunigt. Also ganze Nutzergruppen <em>konnten</em> Youtube vorher gar nicht benutzen, obwohl sie es wollten. Das beweist erneut &quot;Performance is Accessibility&quot;.</p>\n<h3 id=\"-und-die-ökonomie-von-web-performance\">... und die Ökonomie von Web Performance?</h3>\n<p>Ich glaube ja, dass das gleiche für ... sagen wir ... News-Websites zutreffen würde. Die erste Seite die signifikant schneller ist als der Rest wird sicher viel mehr besucht. Erreichen könnte man das z.B. durch weniger nervige Werbung. Die Einkommensverluste pro Besucher/Klick würde man dann durch höhere Reichweite ausgleichen? Kann man nicht wissen, solange man es nicht probiert.</p>\n<p>Zumal: die große Verbreitung von Adblockern kommt ja nicht daher, dass die Menschen Werbung an sich blöd finden. Vielmehr stören sie sich an der schlechten Performance und am unkontrollierten Tracking. Wenn man durch ehrliches Ausliefern eigener guter Inhalte mit ganz normaler Werbung die Leute überzeugen kann, ihre Adblocker auszuschalten, kommen gleich mal 30% zählbare Nutzer hinzu. Damit überholt man locker seine nächsten beiden Mitbewerber.</p>\n<p>Aus den gleichen Motiven, aus denen Leser Adblocker benutzen, benutzen sie den Reader-Mode im Browser, oder auch Pocket. Dass (und wie) wir mit unseren Websites gegen die schöne text-only Darstellung der Browser konkurrieren, legt Eric Bailey dar in <a href=\"https://css-tricks.com/reader-mode-the-button-to-beat/\">Reader Mode: The Button to Beat</a>:</p>\n<blockquote>\n<p>And what if we’re on a slow, intermittent, and/or metered connection? Top-of-the-line MacBooks still have to use hotel wifi, just like everyone else.</p>\n</blockquote>\n<p>Zwei Tage später habe ich im Smashing Magazine den Artikel <a href=\"https://www.smashingmagazine.com/2019/01/save-planet-improving-website-performance/\">How Improving Website Performance Can Help Save The Planet</a> entdeckt. Auch hier ist &quot;save the Planet&quot; aus meiner Sicht ein wenig übertrieben. Aber die Intention ist fein. Mach Sachen schlank und performant, dann hilfst du dem Planeten. Und wenn ein Berliner Webdev-Hipster sich <em>dadurch</em> überzeugen lässt, Preact statt React zu benutzen &mdash; auch gut.</p>\n<p>Weiterführende Links zum Thema:</p>\n<ul>\n<li>Heydon Pickering: <a href=\"https://vimeo.com/190834530\">writing less damn code</a> (Video bei vimeo)</li>\n<li>Brad Frost: <a href=\"http://deathtobullshit.com/\">Death to Bullshit</a></li>\n<li>Adam Silver: <a href=\"https://adamsilver.io/articles/designing-for-actual-performance/\">Designing For Actual Performance</a></li>\n</ul>\n<h2 id=\"usabilityfindability-vergleich-von-flat-design-vs-traditional-design\">Usability/Findability Vergleich von Flat Design vs Traditional Design</h2>\n<p>Ein Paper aus dem Jahr 2015 wurde bei Hacker News hochgespült. Forscher aus Russland haben &quot;<a href=\"https://www.researchgate.net/publication/281628009_Flat_Design_vs_Traditional_Design_Comparative_Experimental_Study\">Flat Design vs Traditional Design</a>&quot; verglichen, in Bezug auf Findbarkeit von User Interface Elementen. Flat Design schneidet schlechter ab.</p>\n<blockquote>\n<p>The results show that a search in ﬂat text mode (compared with the traditional mode) is associated with higher cognitive load. A search for ﬂat icons takes twice as long as for realistic icons and is also characterized by higher cognitive load. Identifying clickable objects on ﬂat web pages requires more time and is characterised by a signiﬁcantly greater number of errors.</p>\n</blockquote>\n<h2 id=\"the-state-of-web-browsers\">The State of Web Browsers</h2>\n<p>Eine schöne Analyse zum aktuellen Stand des Browser Wars. Warum hat Chrome gewonnen, was erwartet die anderen hersteller und den Nutzer in naher Zukunft? <a href=\"https://ferdychristant.com/the-state-of-web-browsers-f5a83a41c1cb\">Ferdy Christant: The State of Web Browsers 2018</a></p>\n<blockquote>\n<p>It’s a better kind of dominance. Like a friendlier dictator. But still a dictator.</p>\n</blockquote>\n<p>Und weil der Artikel so dystopisch ist, gibt es noch ein follow-up zur Aufmunterung: <a href=\"https://ferdychristant.com/the-state-of-web-browsers-88224d55b4e6\">Ferdy Christant: The State of Web Browsers 2019</a></p>\n<p>Mein Lieblingszitat:</p>\n<blockquote>\n<p>Be honest, it’s you that wants Web Components, not your users. I won’t judge, I love web tech too.</p>\n</blockquote>\n<h2 id=\"linkedin-spioniert-die-browser-extensions-seiner-nutzer-aus\">LinkedIn spioniert die Browser-Extensions seiner Nutzer aus</h2>\n<p>Apropos Dystopie und Microsoft und Dominanz: am Beispiel von Linkedin wird hier gezeigt, wie Websites herausfinden können welche Browser-Extensions ein Besucher installiert hat: <a href=\"https://github.com/dandrews/nefarious-linkedin\">Nefarious LinkedIn</a></p>\n<p>tldr: man prüft, welche lokalen Extension-Dateien der Browser von <code>chrome://extensions</code> lädt, oder welche Manipulationen auf berühmten Websites vorgenommen werden. Und gleicht das dann mit seiner Datenbank bekannter Extensions ab.</p>\n<p>Das erinnert mich an die gute alte <a href=\"https://dbaron.org/mozilla/visited-privacy\">Erkennung von visited Links</a> via <code>getComputedStyles()</code>, um herauszufinden welche anderen Seiten deine Besucher noch besucht hat.</p>\n<h2 id=\"hiring-engineers\">Hiring Engineers</h2>\n<p>Wer Software-Entwickler einstellt, ist heutzutage kein &quot;Käufer&quot; der sich den Entwickler aussucht, sondern er ist &quot;Verkäufer&quot; der vor allem die Firma gut darstellen muss. Die Firmen müssen sich bei den Entwicklern bewerben, nicht andersherum. Das ist alles etwas arrogant geschrieben, aber inhaltlich hat der Autor (gegenwärtig) recht. Welche Aspakte es da zu berücksichtigen gilt, und ein paar schöne Analogien, findet man bei <a href=\"https://hiringengineersbook.com/post/trouble-hiring/\">Trouble hiring senior engineers? It&#39;s probably you</a>.</p>\n<h2 id=\"exclusive-design\">Exclusive Design</h2>\n<p><a href=\"https://exclusive-design.vasilis.nl/\">https://exclusive-design.vasilis.nl/</a></p>\n<blockquote>\n<p>Roughly said, in the past 25 years we have been designing websites mostly for people who design websites.\n...\nI have designed and created tailor made websites, exclusively for individual people with disabilities.</p>\n</blockquote>\n<h2 id=\"sonstiges\">Sonstiges</h2>\n<p>Die New York Times hat wegen der DSGVO in Europa auf targeted Ads verzichtet, und ist davon nciht pleite gegangen: <a href=\"https://digiday.com/media/new-york-times-gdpr-cut-off-ad-exchanges-europe-ad-revenue/\">After GDPR, The New York Times cut off ad exchanges in Europe — and kept growing ad revenue</a></p>\n<blockquote>\n<p>The desirability of a brand may be stronger than the targeting capabilities.</p>\n</blockquote>\n<p>Im Guardian erklärt Paul Dolan in einem Exzerpt seines neuen Buches, dass das Erfüllen von gesellschaftlichen Erwartungen nicht automatisch glücklich macht (social narrative vs personal experience): <a href=\"https://www.theguardian.com/books/2019/jan/06/happiness-index-wellbeing-survey-uk-population-paul-dolan-happy-ever-after\">The money, job, marriage myth: are you happy yet?</a>.</p>\n<blockquote>\n<p>To be happier we need to move from a culture of “more please” to one of “just enough”.</p>\n</blockquote>\n",
            "url": "https://blog.thomaspuppe.de/notizen-januar-2019",
            "title": "Notizen Januar 2019",
            "summary": "Notizen und Lesetipps für Januar 2019: Performance, Privacy und das vorläufige Ende des Browser War",
            "date_modified": "2019-01-21T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/high-score-optimierung-w3c-validator",
            "content_html": "<p>Valides HTML – eigentlich selbstverständlich für jeden seriösen Web-Entwickler, aber dennoch habe ich bisher kaum eine Seite gesehen die fehlerfrei validiert wird. Manchmal geht einem einfach etwas durch die Lappen. Manchmal gibt es Bedingungen die man nicht erfüllen will: <code>target=&quot;_blank&quot;</code>, anyone?</p>\n<p>Den Auftakt meiner Blogserie &quot;High Score&quot; bildet also der HTML Validator vom W3C. Ist mein eigenes Blog in validem HTML geschrieben? Wie viele Fehler gibt es in meinen simplen Templates? Und wie gut kann ich die Anforderungen des Validators erfüllen?</p>\n<h2 id=\"der-test\">Der Test</h2>\n<p>Der Validator des W3C ist online verfügbar unter <a href=\"https://validator.w3.org/\">validator.w3.org</a>. Er prüft das Markup einer Website auf Validität. Es gibt vom W3C auch weitere Tools, um CSS zu validieren oder defekte Links zu finden. Ich schaue mir zunächst nur das HTML der Startseite an.</p>\n<p>Das <a href=\"https://validator.w3.org/nu/?doc=https%3A%2F%2Fblog.thomaspuppe.de%2F&amp;showsource=yes&amp;showoutline=yes\">Ergebnis</a> erschrickt mich zunächst: 32 Fehler! Allerdings ist das 32 mal derselbe Fehler.</p>\n<h3 id=\"1-fehlerhaftes-datumsformat\">1) fehlerhaftes Datumsformat</h3>\n<p>In jedem Blogpost-Teaser auf der Indexseite ist das Datum in einem ungültigen Format angegeben. Neben dem lesbaren Datum für Menschen wollte ich es auch maschinenlesbar machen...</p>\n<pre>&lt;time datetime=\"Fri Jul 31 2018 02:00:00 GMT+0200 (CEST)\"&gt;01. Juli 2018 – 31. Juli 2018&lt;/time&gt;</pre>\n\n<p>... und eben jenes <code>Fri Jul 20 2018 02:00:00 GMT+0200 (CEST)</code> ist nicht valide. Der W3C-Validator verlinkt auch gleich auf die <a href=\"https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-time-element\">Spec des time-Elements</a>, die verletzt wird. Dort sind viele Beispiele gültiger Datumsformate aufgelistet.</p>\n<p>Ich <a href=\"https://github.com/thomaspuppe/easto/commit/392dee5b7fb71b562085f7261e8cd8a79ca1a12c\">ändere also das Datumsformat</a> und kürze gleich noch die unnütze Uhrzeit raus.</p>\n<pre>&lt;time datetime=\"2018-07-31\"&gt;01. Juli 2018 – 31. Juli 2018&lt;/time&gt;</pre>\n\n<p>Und schwupps: <strong>No errors or warnings to show</strong>!</p>\n<p>Das war zu einfach. Deshalb schaue ich mir noch die einzelnen Blogposts an.</p>\n<h2 id=\"rekursives-testen-aller-artikel\">rekursives Testen aller Artikel</h2>\n<p>Das habe ich mir einfacher vorgestellt. Leider hat der Validator keine Funktion für rekursives Testen (oder eine Liste von Links), und ein entsprechendes einfaches Tool habe ich auf die Schnelle auch nicht gefunden. Also prüfe ich einige Artikel von Hand.</p>\n<h3 id=\"strike-tag\">strike-Tag</h3>\n<p>Im Artikel <a href=\"https://blog.thomaspuppe.de/mein-smarterphone\">Mein Smarterphone</a> benutze ich das <code>&lt;strike&gt;</code> Tag, um ein paar Worte durchzustreichen. Der Validator moniert, das sei obsolet und man solle lieber CSS benutzen. Die Erklärung ist erst einmal nicht zufriedenstellend, weil das eben <em>kein</em> optischer Effekt ist, sondern ich tatsächlich eine inhaltliche Aussage treffe: dieser Text wurde durchgestrichen.</p>\n<p>Wieder verlinkt der Validator die Specs, diesmal auf <a href=\"https://wiki.whatwg.org/wiki/Presentational_elements_and_attributes\">Whatwg zum Thema &quot;Presentational Links and Attributes&quot;</a>. Hier wird genauer erklärt: <code>s</code> und <code>strike</code> sind zu ersetzen durch <code>del</code>. Das korrigiert den Fehler.</p>\n<p>Durch die Erklärung, ich wolle ja mit der Durchstreichung etwas ausdrücken, ist mir eines aufgefallen: wenn man den <em>entfernten</em> Text semantisch kennzeichnet, was ist dann mit dem <em>hinzugefügten</em> Text? Der besagte Artikel zu Präsentationselementen hat die Antwort: das <code>ins</code> Tag!</p>\n<p>Der default-Stil des <code>ins</code> Tags ist übrigens eine einfache Unterstreichung &mdash; genau wie es auch Links in meinem Blog sind. Da ich meine Links nicht einfärbe und in der Textfarbe unterstreiche, sehen nun die eingefügten Texte aus wie Links. (Nebenbei: das wäre schon ein Grund, nicht an Link-Stilen herumzufummeln: weil man dann genau solche Probleme erzeugt.) Da ich meine Link-Stile aber nicht ändern möchte, style ich also die <code>ins</code> Tags um. Der erste Ansatz war, <code>text-decoration: none</code> zu setzen und dann mit einem <code>border-bottom</code> in der <code>currentColor</code> zu arbeiten. Was aber viel besser ist: es gibt das CSS-Property <code>text-decoration-style</code>, mit dem man eben diese Unterstreichung ändern kann, zum Beispiel auf <code>dotted</code>, <code>dashed</code> oder <code>wavy</code>.</p>\n<p>Bonuswissen: man kann ebenso die <code>text-decoration-color</code> und die <code>text-decoration-line</code> ändern. Damit kann man einen Text z.B. wellig rot über- unter- und durchstreichen &mdash; sogar gleichzeitig.</p>\n<pre>text-decoration-style: wavy;\ntext-decoration-line: overline underline line-through;\ntext-decoration-color: red;</pre>\n\n<p>Das aber nur am Rande. Im Blog-CSS habe ich mich für eine wellige Unterstreichung in etwas hellerem Ton entschieden:</p>\n<p>Hier die Demo mit <del>Text im del-Tag</del> und <ins>Text im ins-Tag</ins>.</p>\n<h3 id=\"spitze-klammern-in-pre\">spitze Klammern in pre</h3>\n<p>Innerhalb von <code>pre</code> Tags, die ich für Code-Beispiele im Blog benutze, sind keine spitzen Klammern erlaubt. Sie werden nämlich interpretiert, was mir an manchen Stellen im Browser nicht auffiel (das &quot;Element&quot; wurde versteckt, und der Teil des Codes nicht gezeigt). Dem Validator fiel es auf.</p>\n<p>Ob es besser wäre, anstelle von <code>pre</code> lieber <code>code</code> zu benutzen, prüfe ich ein andermal.</p>\n<h2 id=\"ergebnis-der-tests-mit-dem-w3c-validator\">Ergebnis der Tests mit dem W3C-validator</h2>\n<p>Ich sage mal: fehlerfrei. Ich habe jetzt nicht jeden einzelnen Artikel getestet, aber auf den getesteten Seiten konnte ich alle Fehler korrigieren. Erwartet hatte ich eigentlich, dass ich mich über manche &quot;zu strenge&quot; Hinweise hinwegsetzen werde.</p>\n<h2 id=\"fazit-zum-w3c-validator\">Fazit zum W3C-Validator</h2>\n<p><strong>pro</strong>:</p>\n<ul>\n<li>sehr gute Aufbereitung: Fehler werden im Quellcode markiert</li>\n<li>Fehler werden zu Specs und Erklärungen verlinkt, zum Teil gibt schon der Validator Lösungsvorschläge</li>\n</ul>\n<p><strong>contra</strong>:</p>\n<ul>\n<li>keine rekursive Validierung (der <a href=\"https://validator.w3.org/checklink\">W3C-Linkchecker</a> kann rekursiv arbeiten)</li>\n<li>wiederholte Fehler auf einer Seite werden nicht zusammengefasst als <em>ein</em> Problem</li>\n</ul>\n<h2 id=\"meta-fazit\">Meta-Fazit</h2>\n<p>Der Auftakt hat mir gut gefallen. Ich habe zwar keine groben Schnitzer gefunden, die man unbedingt korrigieren müsste. Aber die Blog-Serie heißt ja auch &quot;Mikrooptimierung&quot;, und ich möchte jeden kleinen Scheiß fixen.</p>\n<p>Das Schöne: man lernt viele Details hinzu. Wann im Arbeitsalltag stolpert man schon über das <code>&lt;ins&gt;</code> Tag, und wie man die <code>text-decoration-line</code> stylen kann?</p>\n<p>Ich bin heiß auf den nächsten Check!</p>\n",
            "url": "https://blog.thomaspuppe.de/high-score-optimierung-w3c-validator",
            "title": "High Score – Mikrooptimierung mit ... W3C-Validator",
            "summary": "In dieser neuen Serie versuche ich, mit meinem Blog verschiedene Website-Testing-Tools zufriedenzustellen. Den Anfang macht der W3C-Validator.",
            "date_modified": "2018-12-19T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/notizen-juli-2018",
            "content_html": "<h2 id=\"accessibility-for-collapsible-sections\">Accessibility for Collapsible sections</h2>\n<p>Um eine typische <a href=\"https://www.berliner-philharmoniker.de/hilfe/\">Liste von togglebaren Überschriften</a> per Tastatus bedienbar zu machen, konnte ich endlich mal ein <a href=\"https://inclusive-components.design\">Inclusive Components</a> Beispiel von Heydon Pickering benutzen: <a href=\"https://inclusive-components.design/collapsible-sections/\">collapsible sections</a>. Kurz zusammengefasst: man macht die Überschriften zu <code>&lt;button&gt;</code> Elementen, damit die ganze Tabindex/Focus/&quot;click&quot; Sache funktioniert. Und entfernt die Button-Stile via <code>all: inherit;</code> im CSS. Der Artikel von Heydon geht natürlich noch viel mehr in die Tiefe und behandelt JS und Screen Reader.</p>\n<h2 id=\"todonext\">TODONEXT</h2>\n<p>Ein kleiner alter Trick, um am Morgen einen guten Kickstart beim Arbeiten hinzubekommen: zum Feierabend versuche ich, die aktuelle Aufgabe nicht abzuschließen. Sondern als letzte Tat schreibe ich einen failenden Test (wenn man denn welche hat) oder eine Funktion die den Build kaputtmacht oder so. Und daneben einen Kommentar in der Form <code>// TODONEXT: consider negative input</code>. So kommt man schnell wieder in die Arbeit, und muss sich morgens nicht erst orientieren.</p>\n<h2 id=\"leankoala\">Leankoala</h2>\n<p>Etwas Neues aus der Reihe &quot;Tools für Qualitätssicherung&quot;: <a href=\"https://www.leankoala.com/\">Leankoala</a> ist ein sympathisches Hamburger Startup, bei dem man verschiedenste Tests gegen seine Website laufen lässt. Neben Klassikern wie dem Broken-Link-Checker und Ping gibt es auch Bufgets für Dateigrößen und Pagespeed-Score. Außerdem natürlich eigene Tests (prüfen ob ein CSS-Selektor/XPath auf der Seite enthalten ist, z.B.) und einen  Smoke-Test, bei dem Cache-Header, gzip usw geprüft werden. Das ist alles ziemlich smart, und Wizards helfen bei der Einrichtung indem sie Dinge auf der Seite finden (hat man Analytics eingebunden?) und daraus Checks vorschlagen. Kann man 14 Tage kostenlos testen.</p>\n<h2 id=\"web-performance-bei-wikipedia\">Web Performance bei Wikipedia</h2>\n<p>Wikimedia hat ein eigenes Performance Team (natürlich) und sie arbeiten öffentlich (natürlich). Eine super interessante Quelle für alle die sich für Web Performance interessieren. Auf der <a href=\"https://www.mediawiki.org/wiki/Wikimedia_Performance_Team\">Performance Team Page</a> sind viele Ressourcen verlinkt, z.B. <a href=\"https://performance.wikimedia.org/\">Dashboards</a>, das <a href=\"https://phabricator.wikimedia.org/phame/live/7/\">Blog</a> des Teams, und ihr <a href=\"https://phabricator.wikimedia.org/tag/performance-team/\">Ticket-Board</a>.</p>\n<h2 id=\"lesetipps\">Lesetipps</h2>\n<p>Das Buch <a href=\"https://www.safaribooksonline.com/library/view/calm-technology/9781491925874/\">Calm Technology</a> habe ich in einem <a href=\"https://twitter.com/christowski/status/1013453707076423680\">Tweet von Christoph Rauscher</a> entdeckt und sofort bestellt. Leider noch nicht gelesen. Wenns soweit ist, komme ich hier drauf zurück.</p>\n<p>Wieder einmal was Geiles von Heydon Pickering: <a href=\"https://mutable.gallery/\">Generative Art</a>.</p>\n<p>Der Freitag erklärt <a href=\"https://www.freitag.de/autoren/the-guardian/5-mythen-ueber-die-fluechtlingskrise\">5 Mythen über die Flüchtligskrise</a></p>\n<blockquote>\n<p>Menschen ohne Rechte, so warnte Hannah Arendt, sind „erste Anzeichen für eine mögliche Rückentwicklung der Zivilisation“.</p>\n</blockquote>\n",
            "url": "https://blog.thomaspuppe.de/notizen-juli-2018",
            "title": "Notizen Juli 2018",
            "summary": "this-month-I-learned und Lesetipps für Juli 2018: Accessibility für Toggles, Leankoala Testing, und Calm Technology.",
            "date_modified": "2018-07-20T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/notizen-juni-2018",
            "content_html": "<h2 id=\"wm-ticker\">WM Ticker</h2>\n<p>Ich habe mir zwei Tools geschrieben, um mir fix aktuelle WM-Spielstände anzuschauen. Ein winziges Tool für die <a href=\"https://github.com/thomaspuppe/worldcup-cli\">Kommandozeile</a>, und eine kleine <a href=\"https://github.com/thomaspuppe/worldcup\">progressive Web App</a>. Beide greifen eine API ab und zeigen die heutigen Spiele mit Live-Spielstand. Alles kein Hexenwerk, aber eine kleine feine Freude. Bei Twitter gibts nen <a href=\"https://twitter.com/thomaspuppe/status/1009046595915132928\">Screenshot</a>.</p>\n<h2 id=\"a11y-club-conference\">A11y Club Conference</h2>\n<p>Im November wird die <a href=\"https://accessibility-club.org/\">Accessibility Club Conference in Berlin</a> stattfinden. Da freu ich mich drauf, Tickets kosten auch nur 80 Euro. Letztes Jahr gab es den Club schon einmal, und das war eine tolle Veranstaltung. Meine Lieblingszitate vom letzten Jahr:</p>\n<blockquote>\n<p>Your brand is not your color palette.<br>\nYour brand is what people think of you.</p>\n<cite>Heydon Pickering</cite>\n</blockquote>\n\n<p>und</p>\n<blockquote>\n<p>Privacy: you dont send a \"private message\" to your friend. You send it to facebook, and they show it to your friend.</p>\n<cite>Laura Kalbag</cite>\n</blockquote>\n\n\n<h2 id=\"tooltipps\">Tooltipps</h2>\n<p><a href=\"http://gitstats.sourceforge.net/\">GitStats</a> generiert aus einem Git-Repo Statistiken: Commits pro Wochentag oder im Laufe der Zeit, Top-Committer usw. Was man GitHub im Interface eingebaut hat, kann man sich hier für beliebige Git-Repositories generieren lassen. Das Ergebnis sind lokale HTML-Dateien mit einigen Graphen. GitStats muss nicht installiert werden, erwartet aber <em>gnuplot</em> auf dem System.</p>\n<p><a href=\"3rdparty.io\">https://3rdparty.io/</a> zeigt für einzelne 3rd-Party-Scripts, wie sehr sie einer Website schaden. Also man analysiert nicht seine Seite mit allen Scripts (was die klassischen Webperf-Tools tun), sondern schaut sich ein spezifisches Script an und bekommt eine Auswertung, wie gut sich das benimmt. Ist es komprimiert? Blockiert es den Browser? Schreibt es globale JS Variablen oder Cookies? Lädt es ein eigenes jQuery nach? usw. Auf einer Übersichtsseite sind die <a href=\"https://3rdparty.io/products\">Resultate für die üblichen Verdächtigen</a> (Facebook Connect, Google Analytics) aufgelistst.</p>\n<p><a href=\"https://cookiepedia.co.uk/\">Cookiepedia</a> und <a href=\"https://trackography.org/\">Trackography</a> zeigen Auswertungen zu Cookies und Trackern auf Websites, Trackography konzentriert sich dabei auf News.</p>\n<h2 id=\"lesetipps\">Lesetipps</h2>\n<p>Die beiden Cookie-Tools fand ich in <a href=\"https://netzpolitik.org/2018/tracking-um-jeden-preis-das-stockholm-syndrom-der-presseverlage/\">Tracking um jeden Preis: Das Stockholm-Syndrom der Presseverlage</a> auf Netzpolitik. Ein Artikel über DSGVO und ePrivacy, die Haltung deutscher Verlage dazu, und wie ihre Websites tatsächlich tracken. Highlight:</p>\n<blockquote>\n<p>2016 konnte beispielsweise ein Recherche-Team des NDR von einem Databroker einen Datensatz mit angeblich anonymisierten Browserverläufen erwerben. Darin fanden sich hochsensible Informationen unter anderem über einen Polizisten, einen Richter und Bundestagsmitarbeiterinnen.</p>\n</blockquote>\n<p>Sven Wolfermann mit einer schönen umfassenden <a href=\"http://maddesigns.de/wpo2018/\">Website-Performance-Präsentation</a>. Mein Highlight ist die Folie zu <a href=\"http://maddesigns.de/wpo2018/#/61\">serve breakpoint specific JS</a>:</p>\n<pre>&lt;link rel=\"preload\" as=\"script\" href=\"map.js\" media=\"(min-width: 601px)\"&gt;</pre>\n\n<p><a href=\"https://generativeartistry.com/\">Generative Artistry</a>: coole interaktive(!) Tutorials von Tim Holman.</p>\n<p><a href=\"https://onym.co/\">onym.co</a> bietet massenhaft Theorie, Inspiration, und Quellen für <em>Naming Things</em>. gefunden von unserem Designer <a href=\"https://twitter.com/nandorocker\">Nando</a>.</p>\n<p>Die <a href=\"https://directive2102.eu/\">Direktive 2102</a> ist eine EU-Verodnung zu Accessibility im Web. Betrifft nur den öffentlichen Sektor, aber wird ähnlich wie die DSGVO zu Last-Minute-Panik führen, obwohl man alles schon jahrelang wusste. Marcus Herrmann erklärt das Ganze auf einer hübschen Website.</p>\n<p>Sehr schöne Longread von The Intercept zur NSA: <a href=\"https://theintercept.com/2018/06/25/att-internet-nsa-spy-hubs/\">The Wiretap Rooms</a>.</p>\n<p><a href=\"https://dev.tube/\">dev.tube</a> listet Konferenztalks zu Entwicklerthemen, mit einer eigenen Rubrik für Performance. Es gibt keine Deeplinks auf Kategorien, aber der Code ist Open Source bei GitHub, da kann man also helfen ;-)</p>\n",
            "url": "https://blog.thomaspuppe.de/notizen-juni-2018",
            "title": "Notizen Juni 2018",
            "summary": "this-month-I-learned und Lesetipps für Juni 2018: sauschneller WM Ticker, Git Statistiken, und Naming Things.",
            "date_modified": "2018-06-30T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/notizen-mai-2018",
            "content_html": "<h2 id=\"bullshit-jobs-by-david-graeber\">Bullshit Jobs by David Graeber</h2>\n<p>Nachdem ich vor einer Weile das Essay <a href=\"https://strikemag.org/bullshit-jobs/\">On the Phenomenon of Bullshit Jobs: A Work Rant by David Graeber</a> gelesen hatte, hab ich mich sehr auf das dazugehörige Buch gefreut (<a href=\"https://en.wikipedia.org/wiki/Bullshit_Jobs\">Wikipedia-Seite</a>, <a href=\"https://www.theguardian.com/books/2018/may/25/bullshit-jobs-a-theory-by-david-graeber-review\">Rezension im Guardian</a>). Es war meine Urlaubslektüre, und ich kann es sehr empfehlen. Auf jeden Fall aber das Essay!</p>\n<blockquote>\n<p>The paradox of modern work:</p>\n<ol>\n<li>Most people&#39;s sense of dignity and self-worth is caught up in working for a living.</li>\n<li>Most people hate their jobs.</li>\n</ol>\n</blockquote>\n<h2 id=\"handy-sync-via-syncthing\">Handy-Sync via Syncthing</h2>\n<p><a href=\"https://syncthing.net/\">Syncthing</a> ist eine praktische Software, um Inhalte vom Handy auf den Rechner zu backuppen. Funktioniert prima mit Ubuntu und MacOS. Zuvor hatte ich Resilio Sync benutzt, aber das war weniger intuitiv und ich hatte manchmal das Gefühl dass Daten fehlten.</p>\n<p>Gefunden habe ich Syncthing in Martin Pitts Artikel <a href=\"https://piware.de/post/2018-05-01-android-degoogle/\">De-Googling my phone</a>.</p>\n",
            "url": "https://blog.thomaspuppe.de/notizen-mai-2018",
            "title": "Notizen Mai 2018",
            "summary": "this-month-I-learned und Lesetipps für Mai 2018: Bullshit Jobs",
            "date_modified": "2018-05-31T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/static-sites-from-markdown-with-caddy-server",
            "content_html": "<p>Lately, I am experimenting with different forms of static-site generation. While investigating the server <a href=\"https://caddyserver.com\">Caddy</a> for <em>serving</em> pages, I found that it can also <em>generate</em> these pages from markdown.</p>\n<blockquote>\n<p>⚠️ Update 2022: This article is from 2018 and refers to Caddy version 1. User <a href=\"https://news.ycombinator.com/item?id=30145237#30146034\">camkego on HN</a> provides links to the currend documentation of Caddy V2 markdown usage:</p>\n<ul>\n<li><a href=\"https://caddyserver.com/docs/caddyfile/directives/templates\">https://caddyserver.com/docs/caddyfile/directives/templates</a></li>\n<li><a href=\"https://github.com/caddyserver/website/blob/master/src/docs/index.html\">https://github.com/caddyserver/website/blob/master/src/docs/index.html</a></li>\n<li><a href=\"https://caddy.community/t/markdown-support-in-v2/6984\">https://caddy.community/t/markdown-support-in-v2/6984</a></li>\n</ul>\n</blockquote>\n<h2 id=\"render-markdown-as-html\">Render markdown as HTML</h2>\n<p>Basically it is enough to activate markdown in your <a href=\"https://caddyserver.com/docs/caddyfile\">Caddyfile</a>:</p>\n<pre>localhost:8000\nmarkdown /</pre>\n\n<p>Now start your server with <code>caddy -conf ../path/to/Caddyfile</code> and visit pages <code>http://localhost:8000/one.md</code>. You will see that pages written in markdown (which you have to create, of course) ...</p>\n<pre># one.md:\n---\ntitle: My First Post\n---\n\nWhat The Fuck. Cool!\n\n## This is h2\n\nLorem Ipsum youknow.</pre>\n\n<p>... are rendered as HTML:</p>\n<pre># http://localhost:8000/one.md\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;My First Post&lt;/title&gt;\n        &lt;meta charset=\"utf-8\"&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;p&gt;What The Fuck. Cool!&lt;/p&gt;\n        &lt;h2&gt;This is h2&lt;/h2&gt;\n        &lt;p&gt;Lorem Ipsum youknow.&lt;/p&gt;\n    &lt;/body&gt;\n&lt;/html&gt;</pre>\n\n<p>Ta dah! A website with title-tag and content.</p>\n<h2 id=\"add-css-and-js\">Add CSS and JS</h2>\n<p>For some cases like a programming journal this might be enough. But you might want at least some CSS with it. You can do this by simply adding the path to a CSS file into the markdown-block of your caddyfile:</p>\n<pre>localhost:8000\nmarkdown / {\n    css /styles.css\n}</pre>\n\n<p>which results into the line</p>\n<pre>&lt;link rel=\"stylesheet\" href=\"/styles.css\"&gt;</pre>\n\n<p>in the head of your rendered HTML file. This also works for JavaScript (<code>js /script.js</code>), which is also inserted into the head of your HTML file.</p>\n<h2 id=\"templating\">Templating</h2>\n<p>But you want to load JS asyncronously and deferred at the end of the body-tag, don&#39;t you? And you want to add some more HTML, like a custom header or something. You can do that – by creating a template file and using that in the caddyfile:</p>\n<pre>localhost:8000\nmarkdown / {\n    template ../template.html\n}</pre>\n\n<p>Note: the template path is not relative to the caddyfile, but relative to the folder where you run your <code>caddy -conf path/to/Caddyfile</code> command.</p>\n<p>Note 2: You need to restart the caddy server after changing the caddyfile.</p>\n<p>And: we do not need to specify the CSS and JS here, because we can do it directly inside out HTML template file:</p>\n<pre>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;{{.Doc.title}}&lt;/title&gt;\n        &lt;link rel=\"stylesheet\" media=\"screen\" href=\"/styles.css\"&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;head&gt;\n            &lt;h1&gt;{{.Doc.title}}&lt;/h1&gt;\n        &lt;/head&gt;\n        &lt;article&gt;\n            {{.Doc.body}}\n        &lt;/article&gt;\n        &lt;script async defer src=\"/script.js\"&gt;&lt;/script&gt;\n    &lt;/body&gt;\n&lt;/html&gt;</pre>\n\n<p>which renders this:</p>\n<pre>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;My First Post&lt;/title&gt;\n        &lt;link rel=\"stylesheet\" media=\"screen\" href=\"/styles.css\"&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;head&gt;\n            &lt;h1&gt;My First Post&lt;/h1&gt;\n        &lt;/head&gt;\n        &lt;article&gt;\n            &lt;p&gt;What The Fuck. Cool!&lt;/p&gt;\n            &lt;h2&gt;This is h2&lt;/h2&gt;\n            &lt;p&gt;Lorem Ipsum youknow.&lt;/p&gt;\n        &lt;/article&gt;\n        &lt;script async defer src=\"/script.js\"&gt;&lt;/script&gt;\n    &lt;/body&gt;\n&lt;/html&gt;</pre>\n\n\n<h2 id=\"template-variables\">Template variables</h2>\n<p>You can see that the variable <code>{{.Doc.title}}</code> holds the content of the line <code>title: My First Post</code> in your markdown file. That kind of declaration in markdown (an other) files is called &quot;frontmatter&quot; and can be written in YAML or JSON format.</p>\n<p>Even better: it can hold different contents ...</p>\n<pre>---\ntitle: My First Post\nauthor: Thomas Puppe\nauthor_url: https://www.thomaspuppe.de\ndate: April 10th 2018\n---</pre>\n\n<p>... which then can be used inside your template file:</p>\n<pre>&lt;a href=\"{{.Doc.author_url}}\"&gt;{{.Doc.author}}&lt;/a&gt; on {{.Doc.date}}&lt;/footer&gt;</pre>\n\n<p>Caddy even offers some own template variables like <code>{{.Cookie &quot;cookiename&quot;}}</code> or <code>{{.RandomString 100 10000}}</code>, sanitizing functions and control statements. A <a href=\"https://caddyserver.com/docs/template-actions\">complete list of template actions</a> can be found in the Caddy docs.</p>\n<p>This is pretty cool and you can get very far with that.</p>\n<h2 id=\"clean-urls\">Clean URLs</h2>\n<p>But one more thing: The URL <code>http://localhost:8000/one.md</code> is neither pretty nor common. Something like <code>http://localhost:8000/my-first-post</code> would be nicer. The slug &quot;my-first-post&quot; is simply the name of your file, of course. But what about the extension? You can get rid of that by making use of Caddys <a href=\"https://caddyserver.com/docs/ext\">ext</a> directive:</p>\n<pre>localhost:8000\n\nmarkdown / {\n    ext .md .html\n    template ../template.html\n}</pre>\n\n<p>This means that caddy tries to match every request, which is not served by an existing file, is tested against files with these extensions. So if you request <code>http://localhost:8000/my-first-post</code>, Caddy tries to find a <code>my-first-post</code> file, and if that does not exist, it tries to find <code>my-first-port.md</code>, which we just have created. <code>.html</code> would be another fallback, and you can define as many as you like.</p>\n<p>I also tried the other way around: I put markdown files without any extension into the folder, and wanted Caddy to render them as HTML, but that did not work.</p>\n<h2 id=\"special-templates-per-file\">Special templates per file</h2>\n<p>You might want render diffent posts inside different templates. Maybe there are special posts which have a sidebar, or you create some landing pages with a lot of beautiful custom HTML and only some copy text from markdown. You can introduce diffent templates to Caddy be listing them in the caddyfile.</p>\n<pre>markdown / {\n    template ../template.html\n    template special ../special.html\n}</pre>\n\n<p>In the frontmatter part of your your markdown file, you can specify the template just like this: <code>template: index</code>. Then, this page will use the special.html template for rendering. If no template is given in the markdown file, the default <code>template.html</code>, which is defined without a name in the Caddyfile, will be used.</p>\n<p>If your templates share a common set of HTML tags, you should be able to use the import directive:</p>\n<pre>{{.Include \"path/to/file.html\"}}  // no arguments\n{{.Include \"path/to/file.html\" \"arg1\" 2 \"value 3\"}}  // with arguments</pre>\n\n<p>(This is written in the <a href=\"https://caddyserver.com/docs/template-actions\">template action docs</a>, but did not work for me. Maybe because of a strange combination of relative paths?)</p>\n<h2 id=\"file-listings\">File listings</h2>\n<p>On index pages, it would be handy to hava an automatic listing of subpages: the home page of a blog, the members page of your sports club. Caddy can even do that:</p>\n<pre>&lt;ul&gt;\n    {{.Files \"sub/folder\"}}\n        &lt;li&gt;\n            &lt;a href=\"{{$.StripExt .Name}}\"&gt;{{$.StripExt .Name}}&lt;/a&gt;\n        &lt;/li&gt;\n    {{end}}\n&lt;/ul&gt;</pre>\n\n<p>You &quot;just&quot; have to filter files like &quot;.DS_Store&quot;, asset folders, the index file itself and so on. But, for your convenience, Caddy at least provides <a href=\"https://caddyserver.com/docs/template-actions\">control statements</a> like <code>{{if not .IsDir }}</code> and you can strip away extensions (<code>{{$.StripExt .Name}}</code>).</p>\n<p>According to the docs, you can even list a subset of &quot;tagged&quot; files by, but I have not explored that.</p>\n<h2 id=\"external-data-sources\">External data sources</h2>\n<p>It would be cool to store the markdown files externally (think GitHub), and have Caddy fetch them. I think this should be possible, because Caddy can be used as a proxy server.</p>\n<p>I tried the proxy directive (<code>proxy /test https://raw.githubusercontent.com/thomaspuppe/blog.thomaspuppe.de/</code>), but got stuck with SSL handshake errors.</p>\n<h2 id=\"other-shortcomings\">Other shortcomings</h2>\n<p>While Caddy gets you pretty far with its templating and markdown rendering functions, there are a few things which keep me from using it for this blog.</p>\n<ul>\n<li>I have not figured out sorting of the file listing. Caddy does no alphabetic sorting, it looks rather random.</li>\n<li>I want to have more control over content rendering, and</li>\n<li>No feed generation.</li>\n<li>No pagination of listing pages.</li>\n</ul>\n<h2 id=\"wrap-up\">Wrap-up</h2>\n<p>Caddys built-in features for static-site generation do a good job for putting together a simple and fast static site. With templating, logical conditions and string manipulation you get pretty far with few lines of code. If you reach the limits of what Caddy can do, you won&#39;t have wasted much time. So it is worth a try.</p>\n",
            "url": "https://blog.thomaspuppe.de/static-sites-from-markdown-with-caddy-server",
            "title": "Generate static sites from markdown files with the Caddy server",
            "summary": "Caddy can not only serve files fast and safely. It can also generate static files from markdown, so you dont need a generator.",
            "date_modified": "2018-04-10T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/notizen-april-2018",
            "content_html": "<h2 id=\"magical-auto-jump-statt-cd\">Magical Auto-Jump statt CD</h2>\n<p>Autojump ist ein schönes kleines Tool für die Kommandozeile. Es merkt sich häufig benutzte Verzeichnisse, und weiß dann wo ich hinwill wenn ich irgendwo <code>j a11</code> eingebe.</p>\n<pre>brew install autojump\n\npuppe:~ $ j blog\n/Users/puppe/code/private/blog/blog.thomaspuppe.de\n\npuppe:~ $ j a11\n/Users/puppe/code/zon/a11y-dashboard</pre>\n\n\n<h2 id=\"a11y-zwei-tools-um-einschränkungen-zu-simulieren\">A11y: Zwei Tools um Einschränkungen zu simulieren</h2>\n<p><a href=\"https://www.colorblindsim.com/\">colorblindsim.com</a>ist eine offlinefähige Web-App fürs Spartphone, die auf dem Display anzeigt wie das Drumherum denn aussehen würde wenn man farbenblind wäre.</p>\n<p><a href=\"https://chrome.google.com/webstore/detail/funkify-disability-simula/ojcijjdchelkddboickefhnbdpeajdjg\">Funkify</a> ist eine Chrome-Extension, die beim Surfen Dinge wie Farbenblindheit, verschwommenes Sehen, oder Zittern simuliert.</p>\n<h2 id=\"request-map\">Request Map</h2>\n<p>Die <a href=\"http://requestmap.webperf.tools/\">Request Map</a> ist ein wunderbares Tool von <a href=\"https://twitter.com/simonhearne\">Simon Hearne</a>, das alle Requests die eine Seite auslöst, schön übersichtlich als Graph darstellt. Schön zum Gruseln und Argumentieren.</p></p>\n<figure>\n    <img src=\"/images/2018/04/notizen-april-2018/requestmap.png\" alt=\"Graphen-Darstellung von Requests auf ZEIT Online\" />\n    <figcaption>Requests auf ZEIT Online</figcaption>\n</figure>\n\n\n<h2 id=\"wordpress-plugin-primer\">Wordpress-Plugin Primer</h2>\n<p>Ich habe mein erstes Wordpress-Plugin geschrieben ... und hoffentlich mein letztes. Die Erfahrung in ein paar Sätze gefasst:</p>\n<ul>\n<li>Plugins anzulegen ist sehr einfach. Folder und Datei erstellen, im Admin aktivieren, fertig.</li>\n<li>Mit einem simplen Vierzeiler kann man Inhalte in die Seite injizieren, zum Beispiel im Head:</li>\n</ul>\n<pre>add_action( 'wp_head', 'my_meta_tags' );\nfunction my_meta_tags() {\n  echo '&lt;meta name=\"generator\" content=\"Thomas\" /&gt;';\n}</pre>\n\n<ul>\n<li>Selbst Admin-Funktionen, wie eine Setting-Page für das Plugin, werden auf diese Art gebaut.</li>\n</ul>\n<p>Gute Quellen, die mir geholfen haben:</p>\n<ul>\n<li><a href=\"https://premium.wpmudev.org/blog/wordpress-plugin-development-guide/\">https://premium.wpmudev.org/blog/wordpress-plugin-development-guide/</a></li>\n<li><a href=\"https://premium.wpmudev.org/blog/wordpress-hooks/\">https://premium.wpmudev.org/blog/wordpress-hooks/</a></li>\n<li><a href=\"https://codex.wordpress.org/Template_Tags#Post_tags\">https://codex.wordpress.org/Template_Tags#Post_tags</a></li>\n<li><a href=\"http://codex.wordpress.org/Creating_Options_Pages\">http://codex.wordpress.org/Creating_Options_Pages</a></li>\n</ul>\n<h2 id=\"buchtipp-white-hat-ux\">Buchtipp: White Hat UX</h2>\n<blockquote>\n<p>Marketing, IT and sales people all over the world work hard every\nday to make deceptive user experiences. You are better than that.</p>\n</blockquote>\n\n<p><a href=\"https://shop.smashingmagazine.com/products/white-hat-ux-the-next-generation-in-user-experience-ebook\">White Hat UX</a> kostet als eBook 7,50 $.</p>\n<h2 id=\"webperf-erkenntnisse-aus-einem-webinar-zur-deltav-conference\">Webperf-Erkenntnisse aus einem Webinar zur DeltaV Conference</h2>\n<p>Aus einem kurzen Werbe-Webinar zur DeltaV Konferenz habe ich zwei interessante Sachen mitgenommen:</p>\n<p>(1) Die BBC konzentriert sich bei ihrem Performance-Monitoring auf zwei wichtige Werte: <em>time to Headline</em> (also ab wann kann der Leser Infos erfassen) und <em>time to Scroll</em> (wann beginnt er, den Artikel zu lesen). Ob drumherum Sachen geladen werden oder so ist ja eigentlich auch egal, aus UX-Perspektive. Die sollen schnell ihre Infos kriegen, und darauf hin wird optimiert. (Ganz so plump wird es nicht sein in der Praxis, aber das ist ein interessanter Ansatz.)</p>\n<p>(2) Trivago nutzt die NetworkInformation API, um an Leute mit verschiedenen Netzwerkbedingungen verschiedene Sachen zu senden. Dabei haben sie die Erfahrung gemacht:</p>\n<ul>\n<li>Reine Performance-Sachen wie &quot;Retina-Bilder nur wenn die Verbindung gut ist&quot; sind total gut.</li>\n<li>Verschiedene Features (Einzelbild statt Galerie oder Video) sind schlecht. Vor Allem wenn Leute mit verschiedenen Geräten oder anverschiedenen Orten denselben Inhalt aufrufen und dann plötzlich andere Features oder andere UX haben als erwartet.</li>\n<li>Okay sind Opt-In/ProgressiveEnhancement Sachen. Beispiel: Ein Einzelbild statt Galerie zeigen, und darunter ein Button mit dem Hinweis, dass man wegen seines Netzwerks verschont wurde, aber per Klick die Galerie laden kann.</li>\n</ul>\n<p>Eine Aufzeichnung des Webinars gibt es bei Youtube: <a href=\"https://www.youtube.com/watch?v=VamKs0HKvQA\">youtube.com/watch?v=VamKs0HKvQA</a>.</p>\n<p>Die DeltaV Konferenz selbst hat ein <a href=\"https://2018.deltavconf.com/talks\">mega geiles Lineup</a>. Hoffentlich veröffentlichen sie im Nachgang die Videos.</p>\n<h2 id=\"stress-testing-third-party-scripts\">Stress-Testing third party scripts</h2>\n<p><a href=\"https://csswizardry.com/2017/07/performance-and-resilience-stress-testing-third-parties\">Harry Roberts</a> schreibt über Möglichkeiten, Third-Party-Scripts (oder andere Inhalte) auf der eigenen Website stress-zu-testen.</p>\n<p>Mein Lieblingstrick, aber nicht der einzige im Artikel, ist das Blackhole von Webpagetest. Via <code>/etc/hosts</code> Datei lässt man Requests an bestimmte Domains in einen Timeout laufen.</p>\n<p>Mit der Browser-Extension &quot;<a href=\"https://chrome.google.com/webstore/detail/spof-o-matic/plikhggfbplemddobondkeogomgoodeg\">SPOF-o-Matic</a>&quot; lässt sich das auch machen.</p>\n<p>Mit beiden Tricks hatte ich mal <a href=\"https://blog.thomaspuppe.de/spof-auf-news-websites\">deutsche News-Websites auf Single-Points-of-Failures getestet</a>.</p>\n<h2 id=\"paste-clipboard-into-file-on-macos\">Paste Clipboard into file on MacOS</h2>\n<pre>pbpaste > file.js</pre>\n\n\n<h2 id=\"webfont-preloading\">Webfont Preloading</h2>\n<p>Zwei interessante Sachen gelernt. Erstens: ich dachte immer, das Preloading kann man doch gar nicht realistisch machen, weil man im HTML ja gar nicht weiß ob der Browser woff2, woff, oder ein älteres Format anfordern wird. Auf der JSUnconf Konferenz habe ich dann gelernt: Alle Browser, die <a href=\"https://www.caniuse.com/#search=preload\">Preload</a> können, unterstützen auch <a href=\"https://www.caniuse.com/#search=woff2\">woff2</a>. Womit es sich wunderbar einsetzen lässt, auch wenn man im CSS ältere Browser mit älteren Schriftformaten versorgt.</p>\n<p>Zweite Sache, die ich beim Benutzen schmerzhaft gelernt habe: Preload von Schriften braucht dringend das <code>crossorigin</code> Attribut, auch wenn die Schriften vom gleichen Host kommen! (Quellen: <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Preloading_content#Cross-origin_fetches\">MDN</a>, <a href=\"https://www.smashingmagazine.com/2016/02/preload-what-is-it-good-for/#early-loading-of-fonts\">Smashing</a>).</p>\n<h2 id=\"rendern-von-unicode-zeichen-als-emoji-unterdrücken\">Rendern von Unicode-Zeichen als Emoji unterdrücken</h2>\n<p>Das mobile iOS (und vermutlich auch andere) stellen Unicode-Zeichen auf Websites als Emoji dar. Das kann ganz witzig sein – aber als Zeitung willst du das nicht in deinen Artikeln haben.</p>\n<p>Lösung: Das Anhängen von <code>\\00FE0E</code> unterdrückt das <a href=\"http://mts.io/2015/04/21/unicode-symbol-render-text-emoji/\">Rendern als Emoji</a>.</p>\n<p>Reines Zeichen: &amp;#x1F435 (<code>&amp;amp;#x1F435</code>); . Explizit kein Emoji: &#x1F435;&#xFE0E; (<code>&amp;amp;#x1F435;&amp;amp;#xFE0E;</code>)</p>\n<p>Das blöde ist nur: es funktioniert nicht (mehr) im Chrome auf Android :-(.</p>\n<h2 id=\"lesetipps\">Lesetipps</h2>\n<p>Rolf Dobelli über den Verzicht auf News: <a href=\"https://www.theguardian.com/media/2013/apr/12/news-is-bad-rolf-dobelli\">News is bad for you – and giving up reading it will make you happier</a>.</p>\n<p><a href=\"https://baekdal.com/strategy/publishers-havent-realized-just-how-big-a-deal-gdpr-is/\">Sehr gute Analyse zur DSGVO</a>: &quot;What I&#39;m not seeing, however, is any real change to the way publishers use data&quot;. Die Frage ist nicht &quot;<em>Wie</em> kann ich meine unbedachte Datensammelwut legal rechtfertigen?&quot; Sondern &quot;<em>Wozu</em> brauche ich denn überhaupt <em>welche</em> Daten?&quot;</p>\n<p>Sam Altman on <a href=\"https://blog.samaltman.com/productivity\">Productivity</a>. Yet another one. Bei diesen Posts lernt man ja nichts, was man nicht schon wüsste. Dennoch steh ich da drauf. Und auch bei diesem Artikel lautet einer der Tipps &quot;don’t fall into the trap of productivity porn&quot;. Naja.</p>\n<p>Frank Chimero: <a href=\"https://frankchimero.com/writing/the-good-room/\">The Good Room</a> über den Umgang mit moderner Technologie: was ist daran gut, was nicht? Und wie kann man die Balance verbessern? Außerdem ein sehr schön gestalteter &quot;Longread&quot;.</p>\n<p><a href=\"https://sonniesedge.co.uk/talks/dear-developer\">Dear Developer, The Web Isn&#39;t About You</a>.</p>\n<p>Aufholen beim Thema JavaScript: <a href=\"https://hackernoon.com/how-i-stopped-worrying-and-learned-to-love-the-javascript-ecosystem-692c51030342\">How I stopped worrying and learned to love the JavaScript ecosystem</a>.</p>\n<blockquote>\n<p>JavaScript was changing but I was resistant.</p>\n<cite><a href=\"https://medium.com/the-node-js-collection/modern-javascript-explained-for-dinosaurs-f695e9747b70\">Modern JavaScript for dinosaurs</a></cite>\n</blockquote>\n\n<p>Randnotiz: Ich finde es fürchterlich, dass heute alle (auch Hackernoon) mit Medium bloggen. Und wehre mich dagegen. Mal sehen, ob sich das obige in ein paar Jahren auch für die Blogging-Plattform wiederholt.</p>\n",
            "url": "https://blog.thomaspuppe.de/notizen-april-2018",
            "title": "Notizen April 2018",
            "summary": "this-month-I-learned und Lesetipps für April 2018",
            "date_modified": "2018-04-03T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/mein-smarterphone",
            "content_html": "<p>Mein Kollege und Chef <a href=\"https://twitter.com/nicobruenjes/\">Nico Brünjes</a> warf mir folgendes Interview als <a href=\"https://couchblog.de/blog/2018/03/13/mein-smarterphone/\">Blogstöckchen</a> zu.</p>\n<h2 id=\"und-ich-name\">…und ich, Name:</h2>\n<p>Thomas Puppe</p>\n<h2 id=\"verbringt-seinen-tag\">verbringt seinen Tag…</h2>\n<p>mit Frontend-Webentwicklung bei ZEIT Online</p>\n<h2 id=\"nutzt-ein\">nutzt ein:</h2>\n<p>Samsung Galaxy S7, das mir die Firma zur Verfügung stellt. Eigentlich wollte ich mal ein iPhone ausprobieren, aber zugunsten der Vielfalt im Frontend-Team wurde es doch wieder ein Android.</p>\n<h2 id=\"wie-würdest-du-dein-verhältnis-zu-deinem-smartphone-bezeichnen\">Wie würdest Du dein Verhältnis zu Deinem Smartphone bezeichnen?</h2>\n<p>Eng, aber unemotional. Wie zu meiner Hose. Ich habe das Smartphone ständig dabei und nutze es viel, aber es ist austauschbar – und am Wochenende geht es auch mal ohne.</p>\n<h2 id=\"welche-appfunktion-nutzt-du-am-häufigsten-gerne-in-den-statistiken-nachschauen-oder-aus-dem-bauch-schätzen\">Welche App/Funktion nutzt du am häufigsten (gerne in den Statistiken nachschauen oder aus dem Bauch schätzen)</h2>\n<p>Twitter, Whatsapp, Browser, Evernote, den Wecker.</p>\n<h2 id=\"welche-appfunktion-nutzt-du-gar-nicht\">Welche App/Funktion nutzt du gar nicht?</h2>\n<p>Ich spiele nicht auf dem Handy. Ich mache kein Mobile Banking.</p>\n<h2 id=\"arbeit-und-handy--wie-regelst-du-das\">Arbeit und Handy — wie regelst Du das?</h2>\n<p>Rufbereitschaft braucht es im hochqualitativen Zero-Bug-Frontend von ZEIT Online nicht ;-). Und wenn, wäre ich auch nicht der Ansprechpartner. Daher ist alle arbeitsbezogene Handynutzung in der Freizeit freiwillig. Und beschränkt sich auf Sachen wie mal-Slack-checken.</p>\n<p>Andersherum nutze ich das &quot;Diensthandy&quot; auch privat. Auch im Büro. Während technische Recherche und Weiterbildung viel in der Freizeit passiert -- ich denke das gleicht sich aus.</p>\n<h2 id=\"welche-notification-hast-du-eingeschaltet\">Welche Notification hast Du eingeschaltet?</h2>\n<p>So wenig wie möglich. Ich schalte prinzipiell alles aus, und gewählte Apps wieder ein. Dazu gehören Twitter, Whatsapp, E-Mails, Pushover und die DHL. (Und ein paar kürzlich installierte, die ich noch nicht abgeklemmt habe ... gleich mal machen!)</p>\n<h2 id=\"warum\">Warum?</h2>\n<p>Weil die Scheiße nervt. Die meisten Apps richten die Dringlichkeit für Pushes nicht nach mir (etwas Schlimmes ist passiert, oder mein Bus verspätet sich), sondern nach sich (Generalsekretär wie geplant gewählt, Busticket-Sonderangebot).</p>\n<h2 id=\"hälst-du-dich-an-soziale-regeln-bei-der-smartphone-nutzung-wenn-ja-welche\">Hälst du dich an soziale Regeln bei der Smartphone-Nutzung? Wenn ja: Welche?</h2>\n<p>Ich hab mein Handy niemals laut. Und versuche seit neuestem sogar, die Vibration aus zu lassen. In der Regel will ich den Griff zum Handy aus eigener Motivation tun, und nicht weil es sich meldet.</p>\n<h2 id=\"gibt-es-regeln-die-du-wieder-verworfen-hast\">Gibt es Regeln, die du wieder verworfen hast?</h2>\n<p>Ich nehme mir immer wieder mal vor, das Handy vor dem Frühstück nicht zu benutzen, oder nicht im Schlafzimmer. Aber das klappt bisher nicht.</p>\n<h2 id=\"zum-abschluss-was-sollten-mehr-menschen-im-umgang-mit-smartphones-wissen\">Zum Abschluss: Was sollten mehr Menschen im Umgang mit Smartphones wissen?</h2>\n<p>Wenn du nicht gerade Kinder hast, oder kranke Eltern, gibt es keinen vernünftigen Grund jederzeit erreichbar zu sein.</p>\n<p>Ich <del>sende den Kettenbrief</del> <ins>werfe das Stöckchen</ins> weiter zu <a href=\"https://arnalyse.de/\">Arne Seemann</a>.</p>\n",
            "url": "https://blog.thomaspuppe.de/mein-smarterphone",
            "title": "Mein Smarterphone",
            "summary": "Man nennt es Blogstöckchen: ein Interview zu meiner Smartphone-Nutzung",
            "date_modified": "2018-03-14T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/notizen-maerz-2018",
            "content_html": "<p>Ich versuche mich mal am beliebten &quot;this month I learned&quot; Format. Weil ich in den letzten Monaten aber immer gesammelt und nie gepublished habe, versuche ich es so: zu Monatsbeginn schreibe ich einen Anfang, und dann ergänze ich im Laufe des Monats. Das gibt auch Raum für kleine Sachen, die es nie zu eigenen Blogposts schaffen. Mal schauen wie das wird.</p>\n<h2 id=\"default-parameters-in-javascript--nicht-im-ie-11\">Default Parameters in Javascript ... nicht im IE 11</h2>\n<p>Fangen wir gleich mal an mit dem Fail der Woche. Einmal ZEIT Online Production kaputtmachen für alte Browser. Wie? Durch den Gebrauch von default Parametern in JavaScript:</p>\n<pre>function(myParam, optionalParam = true) { ... }</pre>\n\n<p>Das ist ein Feature aus ES2015 funktioniert deshalb leider nicht für den Internet Explorer 11 abwärts. Also, wenn man nicht babelt, muss man das wieder einkassieren und in der Funktion selbst den Default-Wert definieren:</p>\n<pre>function(myParam, optionalParam) {\n    optionalParam = (typeof optionalParam !== 'undefined') ?  optionalParam : true;\n}</pre>\n\n\n<h2 id=\"documentcurrentscript\">document.currentScript</h2>\n<p>Das zweite JS Learning des Tages: man kann im JS Code dasjenige <code>script</code>-DOM-Element selektieren, in dem der Code läuft. Einfach via <code>document.currentScript</code>.</p>\n<p><a href=\"http://2ality.com/2014/05/current-script.html\">Detaillierter Artikel zu currentScript von Dr. Axel Rauschmayer</a> mit veralteten Angaben zur Browser-Unterstützung. Caniuse bestätigt eine gute Unterstützung: [<a href=\"https://www.caniuse.com/#search=currentScript%5D\">https://www.caniuse.com/#search=currentScript]</a>(Browser-Unterstützung von <code>document.currentScript</code> bei caniuse.com).</p>\n<p>Allerdings wieder ohne den IE11. Und weil wir da ja keinen Bug haben wollen (siehe oben), gibt es einen schönen Polyfill:</p>\n<pre>var currentScript = document.currentScript || (function() {\n    var scripts = document.getElementsByTagName('script');\n    return scripts[scripts.length - 1];\n})();</pre>\n\n<p>Wozu braucht man das? Um z.B. ein Script-Tag wegzuräumen, nachdem es seine Arbeit getan hat.</p>\n<pre>&lt;script&gt;\n    var currentScript = document.currentScript;\n    var parent = currentScript.parentNode;\n    var newDiv = document.createElement('div');\n    newDiv.setAttribute('class', 'wurstbrot');\n    parent.replaceChild(newDiv, currentScript);\n&lt;/script&gt;</pre>\n\n<p>Im Übrigen, unintuitiverweise:</p>\n<pre>// String.replace Parameter Reihenfolge: search, replace\nstr.replace(regexp|substr, newSubStr|function);\n\n// Node.replaceChild Parameter Reihenfolge: replace, search\nparentNode.replaceChild(newChild, oldChild);\n</pre>\n\n<p>Ich dachte das sei eine Spezialität von PHP.</p>\n<h2 id=\"newsletter\">Newsletter</h2>\n<p>Ich lese begeistert den <strong><a href=\"http://softwareleadweekly.com/\">Software Lead Weekly Newsletter</a></strong> von <a href=\"https://twitter.com/orenellenbogen\">Oren Ellenbogen</a>, der auch das lesenswerte Buch <a href=\"http://leadingsnowflakes.com/\">Leading Snowflakes</a> geschrieben hat.</p>\n<p>Früher interessierte mich der <strong><a href=\"https://martingiesler.de/social-media-watchblog/\">Social Media Watchblog</a></strong> von Martin Giesler nicht so sehr. Für meinen Geschmack ging es zu sehr um &quot;Plattform X hat jetzt Funktion Y&quot; und &quot;die 10 besten Tipps für Whatever&quot;. Ich habe ihn aber erneut abonniert, und freue mich dass es um mehr Meta-Theman geht. Mobile Payment via Wechat und Whatsapp, wie gehts bei der Google News Initiative weiter, Facebooks Rolle bei der Verfolgung der Rohinja oder eine Zusammenfassung zum Cambridge Analytics &quot;Skandal&quot;. Themen wie Entlassungen von Mitarbeitern bei Snapchat überlese ich weiterhin.</p>\n<p><a href=\"http://a11yweekly.com/\">Accessibility Weekly</a> von David A. Kennedy: schöner wöchentlicher Digest zu Accessibility.</p>\n<h2 id=\"accessibility-dashboard\">Accessibility Dashboard</h2>\n<p>Bin letztens über das &quot;<a href=\"https://github.com/pa11y/pa11y-dashboard\">pa11y Dashboard</a>&quot; gestolpert, was Acessibility-Test-Scores für verschiedene Seiten auf einem Dashboard aufmalt. Das ist aber gerade im Umbruch. Ein Rewrite namens &quot;<a href=\"https://github.com/pa11y/sidekick\">Sidekick</a>&quot; ist WIP und funktioniert noch nicht. Da sind mein Kollege Valentin und ich auf die Idee gekommen, dass wir ja schon ein Dashboard haben, in das man pa11y-Testergebnisse reinmalen kann. Und zwar ein Graphite/Grafana, das wir für <a href=\"https://www.sitespeed.io/\">Sitespeed</a> Performance Monitoring benutzen.</p>\n<p>Also haben wir ein kleines CSript geschrieben, das pa11y-tests parallel laufen lässt und die Ergebnisse an eine Graphite Instanz sendet.  Ergebnis ist ein kleines Repo: <a href=\"https://github.com/ZeitOnline/a11y-dashboard-connector\">a11y-dashboard-connector</a>: Es ist ein zaghafter Anfang, und noch hardcoded für unsere Zwecke, aber immerhin.</p>\n<h2 id=\"css-keylogger-und-andere-schweinereien\">CSS Keylogger und andere Schweinereien</h2>\n<p><strong>Keylogging via CSS</strong>: vor einigen Tagen ging ein GitHub Repo um, das zeigte, wie man CSS als Keylogger missbrauchen kann: <a href=\"https://github.com/maxchehab/CSS-Keylogging\">CSS Keylogger</a>.</p>\n<pre>input[type=\"password\"][value$=\"p\"] {\n  background: url('/password?p');\n}</pre>\n\n<p>In seinem Blogpost <a href=\"https://jakearchibald.com/2018/third-party-css-is-not-safe/\">Third party CSS is not safe</a> erfindet Jake Archibald weitere Möglichkeiten, wie 3rd Party CSS eine Seite manipulieren kann. Sehr spannend, aber nur nebenbei im Artikel erwähnt: wenn ein Angreifer die Cache Storage vollschreibt, kann er Clients dauerhaft kompromittieren, auch wenn das schadhafte Script längst von der Seite entfernt wurde. Fazit:</p>\n<blockquote>\n<p>Third party content is not safe\n– Jake Archibald</p>\n</blockquote>\n<h2 id=\"performance-bei-wikimedia\">Performance bei Wikimedia</h2>\n<p>Wikimedia hat ein eigenes <a href=\"https://www.mediawiki.org/wiki/Wikimedia_Performance_Team\">Performance Team</a> (Traumjob!), und wie es sicht gehört arbeiten die transparent. Also kann man in deren <a href=\"https://phabricator.wikimedia.org/tag/performance-team/\">Backlog</a> verfolgen, alle <a href=\"https://grafana.wikimedia.org/dashboard/db/webpagetest?orgId=1\">Dashboards</a> ansehen, und sie veröffentlichen auch <a href=\"https://phabricator.wikimedia.org/phame/blog/view/7/\">Blog-Posts</a>.</p>\n<h2 id=\"ethical-design-and-development\">Ethical Design and Development</h2>\n<p>Zwei schöne Artikel dazu: <a href=\"https://www.smashingmagazine.com/2018/03/ethical-design-practical-getting-started-guide/\">Ethical Design: The Practical Getting-Started Guide</a> im Smashing Magazine und <a href=\"https://medium.com/doteveryone/oaths-pledges-and-manifestos-a-master-list-of-ethical-tech-values-26e2672e161c\">Oaths, pledges and manifestos: a master list of ethical tech values</a> auf Medium.</p>\n<p>Zu dem Thema ist mir das Buch &quot;<a href=\"https://shop.smashingmagazine.com/products/white-hat-ux-the-next-generation-in-user-experience\">White hat UX</a>&quot; untergekommen, was ich mit gleich mal gekauft habe. Ich werde in diesem Blog berichten. Das eBook kostet nur $7.50, das kann man auch mal anonym an seine Produktentwicklung spenden.</p>\n<h2 id=\"next-gerenartion-clearfix\">Next Gerenartion Clearfix</h2>\n<p>Es gibt ein natives Clearfix in CSS. <a href=\"https://css-tricks.com/display-flow-root/\">Chris Coyier</a> schrieb schon 2016 darüber, <a href=\"https://rachelandrew.co.uk/archives/2017/01/24/the-end-of-the-clearfix-hack/\">Rachel Andrew</a> Anfang 2017. Allerdings ist die <a href=\"https://www.caniuse.com/#search=flow-root\">Browser-Unterstützung</a> recht mager: nur Firefox und Chrome unterstützen <code>display: flow-root</code>. Wenn ich jetzt den Draft-Revision-usw. Lebenszyklus der <a href=\"https://drafts.csswg.org/css-display-3/#valdef-display-flow-root\">CSSWG</a> verstehen würde...</p>\n<h2 id=\"hinter-docker-herräumen\">Hinter Docker herräumen</h2>\n<p>Mein Kollege Wolfgang hat was schönes entdeckt: Docker-Container werden nicht automatisch gelöscht nachdem ein Job mit ihnen lief. Wir benutzen Docker für Sitespeed-Tests, die alle paar Minuten laufen. Das nimmt nicht viel Platz weg, aber summiert sich und verlangsamt auch einige Befehle. Man findet die Dinger via <code>docker container ls --all</code>, kann einmal durchwischen mit <code>docker container prune</code> und verhindert das Ansammeln, indem man den Job mit <code>docker run --rm</code> startet.</p>\n<h2 id=\"resilient-css\">Resilient CSS</h2>\n<p>Jen Simmons <a href=\"https://hacks.mozilla.org/2018/03/how-to-write-css-that-works-in-every-browser-even-the-old-ones/\">https://hacks.mozilla.org/2018/03/how-to-write-css-that-works-in-every-browser-even-the-old-ones/</a></p>\n<p>The idea of the web is, to work for everyone, independent of the device. A good reminder by Jen Simmons what the idea of the web is <a href=\"https://www.youtube.com/watch?v=u00FY9vADfQ\">https://www.youtube.com/watch?v=u00FY9vADfQ</a></p>\n<h2 id=\"lesetipps\">Lesetipps</h2>\n<p><strong>Lasagne Code</strong> ist eine schöne neue Metapher, die ich im Artikel <a href=\"https://matthiasnoback.nl/2018/02/lasagna-code-too-many-layers/\">Lasagna code - too many layers?</a> gelernt habe. Der Autor plädiert nicht gegen Layer im Code, sondern für die richtige Dosis und Art. Ich finde das Gleichnis auch noch auf einer anderen Ebene (no pun intended) spannend: bei der Infrastruktur. Einmal Proxy-Cache ist cool. Mehrere Ebenen mit eigenen Regeln und Verzweigungen führt zu einer Situation wie bei Spaghetti Code, nur als Lasagne.</p>\n<p>&quot;Die Sicherheitstechnik funktionierte wie vorgesehen - auf dem Niveau der 1960er Jahre, dem Tiefpunkt der Gesetzgebung in der Kerntechnik.&quot; – <a href=\"https://www.golem.de/news/fukushima-die-technik-tat-genau-was-sie-sollte-1803-133234.html\">Sehr spannender postmortem Artikel zur Fukushima-Kernschmelze bei Golem.de</a>.</p>\n<p>China setzt eine neue Marke im Bereich Geo-Engineering: <a href=\"https://www.scmp.com/news/china/society/article/2138866/china-needs-more-water-so-its-building-rain-making-network-three\">China needs more water. So it&#39;s building a rain-making network three times the size of Spain</a></p>\n",
            "url": "https://blog.thomaspuppe.de/notizen-maerz-2018",
            "title": "Notizen März 2018",
            "summary": "Eine Art this-month-I-learned meets Lesetipps meets Notizblock",
            "date_modified": "2018-03-23T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/front-trends-2017-warsaw",
            "content_html": "<p>A list of talks from the Front Trends 2017 conference in Warsaw, and some remarks.</p>\n<p>There are other summaries available. First of all, the <a href=\"https://2017.front-trends.com/schedule/\">official schedule</a>, which also contains descriptions of each talk. <a href=\"https://github.com/nienkedekker/Front-Trends-2017\">Nienke Dekker</a> put her detailed notes on GitHub. Syb Wartna has a <a href=\"http://waarissyb.nl/articles/fronttrends-2017-highlights.html\">blog post about his highlights</a>. These sources provide more detail. My list is more of a link collection.</p>\n<figure>\n    <img src=\"/images/2017/05/front-trends.jpg\" alt=\"Venue of the Front Trends 2017 conference in Warsaw\" />\n    <figcaption>Venue of the Front Trends 2017 conference in Warsaw</figcaption>\n</figure>\n\n<h2 id=\"the-talks-in-order-of-my-personal-preference\">The talks, in order of my personal preference</h2>\n<p><strong>The How, What and Why of migrating to ReactJS</strong> by <a href=\"https://twitter.com/Jack_Franklin/\">Jack Franklin</a> was not about React, but all about migrating complex software. His company Songkick switched from Angular (yesterdays hot code was &quot;unmaintainable, feature-bloated, tricky, old developers gone&quot;) to ReactJS.</p>\n<p>They did it by incremental migration, instead of a big bang. That way, you can learn as you migrate, often release to the public, and prioritize based on pain-points in the old app. At first, they migrated unit tests and introduced acceptance tests.</p>\n<p>A mix of big and small tasks helped to keep momentum. People could choose freely from a big backlog in Trello. They aroused interest and morale  with a variety of available tasks.</p>\n<p>Code-Reviews were split into feature branches with feature-part-branches and incremental pull requests. The knowlede base was inside the code repository, and maintained by the same pull requests that added/changed code.</p>\n<p>Metrics (e.g. the number of Angular and React files) were prominently communicated, so the team could see if it was heading in the right direction. And this is a good thing to show to the business department.</p>\n<p><strong>The Power of CSS</strong> by <a href=\"https://twitter.com/Una\">Una Kravets</a> was a great <a href=\"https://codepen.io/una/full/3c45ff838c002255c1b04d63d422466e\">code-in-slides</a> performance (in Codepen!!!) about CSS effects like filters and blend-modes. Special takeaway for me: <a href=\"http://youmightnotneedjs.com/\">youmightnotneedjs.com</a>.</p>\n<p><strong>I didn&#39;t know the browser could do that!</strong> by <a href=\"https://twitter.com/sambego/\">Sam Bellen</a> gave a cool introduction into new Browser APIs like <code>window.speechSynthesis</code>, Speech Recognition in Chrome, Geolocation, Notification, Push, MediaRecorder, BatteryManager. The examples were embedded in Sams cool and cute <a href=\"https://meow.sambego.be/poes\">cat assistant Poes</a> which is available for everyone online.</p>\n<p><strong>Field-tested interfaces for the next billion</strong> by <a href=\"https://twitter.com/allyelle\">Ally Long</a> (<a href=\"https://speakerdeck.com/allyelle/field-tested-interfaces-for-the-next-billion\">slides</a>) was about regions which are not as good connected as western countries, but will come online during the next years. Ally Long has worked for health projects in south-sahara Africa and shared valuable tips with us:</p>\n<p>The typical device is Android on cheap hardware. Opera Mini is really big in Africa. Connectivity is bad, data is expensive, latency is high. Electrical power is badly available. As a consequence, you should follow some rules: UI should not be blocked by network loading (eg fullscreen spinners). No gestures. No off-canvas navigation. Forms should be no longer than a screen &mdash; rather use multi-screen forms. Don&#39;t use selectboxes &mdash; rather use a list of radio buttons. Skeuomorphism is better than flat design. Be robust for people to click everywhere and often. Use consistent UI. Strip everything back to the essentials!</p>\n<p><strong>Watch your back, Browser! You&#39;re being observed.</strong> by <a href=\"https://twitter.com/stefanjudis\">Stefan Judis</a> showed APIs and Obervers which are available to use in modern browsers: IntersectionObserver (check if an element is inside the visible viewport), MutationObserver (changes in DOM, save to use today), Timing API (navigation, user, resource), PerformanceObserver, ResizeObserver, Observables in general, ... check the <a href=\"https://speakerdeck.com/stefanjudis/watch-your-back-browser-youre-being-observed\">slides</a>!</p>\n<p><strong>Easy and affordable user-testing</strong> by <a href=\"https://twitter.com/idaaa\">Ida Aalen</a> was a funny talk about how everyone can conduct cheap user tests. Colleagues, designers, developers, or user testing experts are not your users! You find real users among your friends and on the streets. And since only 5 real users will catch most of the problems in any thing, it is worth trying some low-cost low-effort methods. Watch the <a href=\"https://www.slideshare.net/IdaAalen/easy-and-affordable-user-testing-front-trends-2017\">slides</a> and an article about the <a href=\"https://medium.com/@idaaa/low-budget-low-effort-tools-for-user-testing-b49912d32bc3\">tools mentioned in her talk</a> to get some great ideas!</p>\n<p><strong>Rendering performance inside out</strong> by <a href=\"https://twitter.com/g33konaut\">Martin Splitt</a> was about the insides of rendering inside the browser. The rendered page is composed of layers, and from a computational perspective, composing them is faster than repainting, because it can be done in parallel (pixels are independent from another). That&#39;s why videos or canvas, which are always inside their own layer, do not slow down the whole page. What I took away from this talk: do animations via transformation, and use the <code>will-change</code> property with absolute positioning. The <a href=\"https://docs.google.com/presentation/d/1AEsn5aR3orFuQuIRV70WylQN9OR4_AFBSX7jy13ITqc/edit\">slides</a> are available online.</p>\n<p><strong>Legends of the Ancient Web</strong> by <a href=\"https://twitter.com/baconmeteor/\">Maciej Cegłowski</a> talks about the fact that &quot;there&#39;s nothing new under the sun&quot; and that we have seen developments, which seem new in the web business, long before: in the radio broadcasting business. (Amateurs -&gt; professionals -&gt; business -&gt; advertising -&gt; copyright -&gt; content created only to increase audience -&gt; propaganda and hate speech.) This is an interesting analogy.</p>\n<blockquote>\n<p>You have a choice what you work for. If you work for mass surveillance. If you base your business model on evil. <strong>You are not only technicians. You are also citicens and human beings.</strong></p>\n<p>&mdash; Maciej Cegłowski</p>\n</blockquote>\n<p><strong>The First Meaningful Paint</strong> by <a href=\"https://twitter.com/patrickhamann\">Patrick Hamann</a> (<a href=\"https://www.youtube.com/watch?v=4pQ2byAoIX0\">video</a> on CSSConf) talks about ways to speed up the first meaningful paint on a website. Nice example: Google renders the header of its result page, even before the search request is sent to the server. Measures you can take are: inlining critital CSS. <code>&lt;link rel=preload&gt;</code> (which also works via HTTP header). And HTTP/2 server push, which could even be done by your proxy cache, before the actual backend server renders a response.</p>\n<p><strong>Motion In Design Systems: Animation, Style Guides, and the Design Process</strong> by <a href=\"https://twitter.com/vlh\">Val Head</a>: Very cool presentation about designer-developer-collaboration with sketches, storyboards (anyone can do. quick tests with little commitment. trigger, what happens, how does it happen?), motion comps (HTML5 tool: Tumult Hype) and interactive prototypes (tool: atomic, codepen). <a href=\"https://www.slideshare.net/valhead/animation-in-design-systems-and-process-val-head\">Slides</a>, <a href=\"https://codepen.io/valhead\">Codepen</a>.</p>\n<p><strong>Experimenting your way to a better product</strong> by <a href=\"https://twitter.com/zomigi/\">Zoe Mickley Gillenwater</a> was about A/B-Tests. It&#39;s clear that experiments help to avoid biases and opinions. The goal is that users drive the product direction. Zoe shared her process (observe, hypotesis, test, measure, avaluate, repeat) and experience (create smallest change possible, iterate quickly, most tests fail, one out of ten tiny changes has a huge impact). Cool talk, spiced up with some cognitive biases (Texas sharpshooter fallacy, HARPing). <a href=\"https://www.slideshare.net/zomigi/experimenting-your-way-to-a-better-product-fronttrends-2017\">Slides</a></p>\n<blockquote>\n<p>Avoid HIPPOs. <em>(Highest Paid Persons Opinions)</em></p>\n<p>&mdash; Zoe Mickley Gillenwater</p>\n</blockquote>\n<p><strong>Changing the layout game</strong> by <a href=\"https://twitter.com/cwrightdesign/\">Chris Wright</a> presented some examples on how people hack CSS to get near the features they actually would like to have. Fox example we have hacked layouts with tables, floats, flexbox ... and now CSS grids are available. The talk contains a lot of nice examples on how to solve common problems in CSS. You should check the <a href=\"https://speakerdeck.com/cwrightdesign/changing-the-layout-game\">slides</a>.</p>\n<p><strong>Alternative Reality DevTools</strong> by <a href=\"https://twitter.com/kdzwinel/\">Konrad Dzwinel</a> started with the history of browser dev tools, which have all been similar, and even today have seen not much improvement. So, Konrad tries new concepts, inspired by AutoCAD, video editing, processor design, game design, graphic design, and so on. Highlights: Context aware inspectors (for meta tags: docs and specs, for SVG: SVG editor). Concentrate on a certain element (hide all the others). Timeline (go back while using your app, e.g. un-click a radio button). Inionite canvas (multiple devices on one big screen). Good news: everyone can contribute! Firefox devtools are open source and written in React.</p>\n<p><strong>Components, patterns and sh*t it’s hard to deal with</strong> by <a href=\"https://twitter.com/cedmax\">Marco Cedaro</a>: how do we manage and reuse patterns, without making them too rigid for day-to-day activities? Problems arise if you use BEM too dogmatic. Solutions: enable unbemmy/atomic CSS in some cases. Use open mixins where the author decides what to enforce, and what to expose to the user of the mixin. If you have a BEM-problem, step back and ask yourself: what problem are we actually trying to solve? <a href=\"https://speakerdeck.com/cedmax/components-patterns-and-sh-star-t-its-hard-to-deal-with-at-front-trends-2017\">Slides</a></p>\n<p><strong>Monsters, mailboxes and other nonsense</strong> by <a href=\"https://twitter.com/rakaz\">Niels Leenheer</a> was about fun wit IoT in his smart house <a href=\"https://speakerdeck.com/nielsleenheer/monsters-mailboxes-and-other-nonsense-at-front-trends\">Slides</a>.</p>\n<p><strong>On How Your Brain is Conspiring Against You Making Good Software</strong> by <a href=\"https://twitter.com/zeigenvector\">Jenna Zeigen</a> (<a href=\"http://jenna.is/slides/at-front-trends.pdf\">slides</a>) applies cognitive biases to software development. The effects everyone knows (pair programming and breaks are good, debugging your own code is hard, people are bad at estimating the time to program something) are explained by the cognitive biases humans have.</p>\n<p><strong>Let&#39;s save the internet: How to make browsers compatible with the web</strong> by <a href=\"https://twitter.com/misprintedtype\">Ola Gasidlo</a> introduced us to the history of browser wars and led to the W3C and WHATWG specs. <a href=\"https://slidr.io/zoepage/let-s-save-the-internet-how-to-make-browsers-compatible-with-the-web#1\">Slides</a>. Takeaway: WHATWG specs are available on GitHub, you can contribute to prevent single companies from deciding on the webs future.</p>\n<p><strong>Microservices - The FAAS and the Furious</strong> by <a href=\"https://twitter.com/philhawksworth\">Phil Hawksworth</a> gave examples on how static sites can be enhanced with microservices (comments and search, for example). In the end, the setup was rather complex ;-) ... but the basic message is: start by outsourcing simple things.</p>\n<p><strong>Demystifying Deep Neural Networks</strong> by <a href=\"https://twitter.com/RosieCampbell\">Rosie Campbell</a>  gave an introduction to machine leaning. Conventional programs have explicit algorithms, deep learning is trained with data. The talk was based on an <a href=\"https://medium.com/manchester-futurists/demystifying-deep-neural-nets-efb726eae941\">article</a> which explains the principles behind neural networks.</p>\n<p><strong>I&#39;m in IoT</strong>: <a href=\"https://twitter.com/pepelsbey_/\">Vadim Makeev</a> controlled lamps and drones on stage with his browser. His drone was highjacked by someone in the audience :-). <a href=\"https://pepelsbey.net/pres/im-in-iot/\">Slides</a>.</p>\n<p><strong>Big Bang Redesign: Smashing Magazine’s 2017 Relaunch</strong>: <a href=\"https://twitter.com/smashingmag/\">Vitaly Friedman</a> gave insights on why and how Smashing Magazine was rebuilt. Because of the rise of ad blockers, they shifted focus on membership and selling products. They used atomic design and a living styleguide (which is already outdated).</p>\n<p><strong>A Cartoon Intro to React Fiber</strong> by <a href=\"https://twitter.com/linclark/\">Lin Clark</a> was a deep dive into how React Fiber improves the perceived performance of react apps. I only understood that it prioritizes updates during rendering. You can watch the talk on <a href=\"https://www.youtube.com/watch?v=qAs1bHnSn7I\">youtube</a>.</p>\n<p><strong>The past and future of designing interfaces</strong> by <a href=\"https://www.twitter.com/mrmrs_\">Adam Morse</a> was a bit abstract and about design systems (which are like Gutenbergs moveable type), spreadsheets (a study shows: almost all have errors) teams (if you have less or more than 3 people, you won&#39;t make any substantial progress). My highlight was the idea of a random content generator for design systems, which puts a stress test on styleguides by automatic permutation of content.</p>\n<p><strong>Prevent Default — The future of authoring tools</strong> by <a href=\"https://twitter.com/mcernusca/\">Mihai Cernusca</a> showed a lot of examples and principles of authoring tools from the past, present and future. Even complex 3D software uses a heap of generic UI elements (sliders, input, radio buttons). How can we enhance this? The tool &quot;<a href=\"http://www.hemingwayapp.com/\">Hemingway</a>&quot; lints your text while writing. But apart from that, most text editors look like Word 1.0. And it gets harder if you want to edit layout instead of vertical one-column text flow, have history, drag&amp;drop, selection, cursor navigation. Mihais Solutions: ContentEditable, Outliner, Workflowy, Notion.io.</p>\n<p><strong>Building a Progressive Web App</strong> by <a href=\"https://twitter.com/kirupa/\">Kirupa Chinnathambi</a> was an intoductionto PWAs (<a href=\"https://onedrive.live.com/view.aspx?resid=1D3A48480C64E70E!163164&amp;ithint=file%2cpptx&amp;app=PowerPoint&amp;authkey=!ACeg0TvJaXr-rJk\">Slides</a>). It was new to me that PWAs are available and installable from the Windows 10 app store.</p>\n<h2 id=\"random-facts-that-i-learned\">Random facts that I learned:</h2>\n<ul>\n<li>There is a <a href=\"https://github.com/sgentle/caniuse-cmd\">CLI for caniuse.com</a></li>\n<li>You can style the <code>caret-color</code> in CSS.</li>\n<li>You can throttle animations in Chrome DevTools to have a slow-motion (<a href=\"https://twitter.com/teddyrised/status/867689292281335809\">Screenshot</a>)</li>\n<li>The CSS property <code>will-change: height</code>.</li>\n<li>Media queries are becoming increasingly complex. Solution is a more fluid design. But except from percentages and fluid font sizing, there are no good solutions.</li>\n<li><code>&lt;input type=&quot;text&quot; pattern=&quot;...&quot; /&gt;</code> is a thing</li>\n</ul>\n<h2 id=\"my-catch-up-list\">My catch-up list:</h2>\n<ul>\n<li>Play with new browser APIs</li>\n<li>Use CSS grids</li>\n<li>Finally, use HTTP/2</li>\n</ul>\n",
            "url": "https://blog.thomaspuppe.de/front-trends-2017-warsaw",
            "title": "Front Trends 2017 in Warsaw",
            "summary": "A list of talks from the Front Trends 2017 conference in Warsaw, and some remarks.",
            "date_modified": "2017-07-08T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/browser-api-css-mediaqueries",
            "content_html": "<p>In der Regel denkt man bei Media Queries an nicht viel mehr als <code>min-width</code> oder <code>device-pixel-ratio</code> und bei Browser APIs an <code>navigator.userAgent</code>. Moderne Browser können natürlich viel mehr.</p>\n<p>Kürzlich sah ich in einer interessanten <a href=\"https://speakerdeck.com/grigs/why-you-should-build-a-progressive-web-app-now-1\">Präsentation über Progressive Web Apps</a> dies:</p>\n<pre>@media (display-mode: standalone), (display-mode: fullscreen) {\n    .backButton {\n        display: block;\n    }\n}</pre>\n\n<p>Mit dieser Media Query stellt man fest, ob die Website (bzw Web App) das Browser-GUI (und damit den Back-Button des Browsers ) zur Verfügung hat, oder nicht. Und kann dann einen eigenen Button einblenden.</p>\n<p>Das war für mich ein Anlass, mal zu schauen, welche Media/Feature Queries und Browser APIs heutzutage zur Verfügung stehen.</p>\n<h1 id=\"1-browser-apis\">(1) Browser APIs</h1>\n<h2 id=\"navigatorcookieenabled\">navigator.cookieEnabled</h2>\n<p>Eigentlich ganz simpel, kannte ich aber bis heute noch nicht. Diese Abfrage ist natürlich der  Methode, ein Cookie zu setzen und dann auszulesen, zu bevorzugen. Sehr gute Browser-Unterstützung.</p>\n<blockquote>\n<p>In diesem Browser: <script>document.write(navigator.cookieEnabled || '<em>undefined</em>')</script></p>\n</blockquote>\n<h2 id=\"navigatordonottrack\">navigator.doNotTrack</h2>\n<p>Zeigt an, ob im Browser &quot;Do not track&quot; gesetzt wurde -- und auf welchen Wert. Ist in vielen Browsern implementiert, aber der <a href=\"https://blog.thomaspuppe.de/do-not-track-header-crossbrowser\">Rückgabewert ist unterschiedlich</a> und muss geparsed werden.</p>\n<blockquote>\n<p>In diesem Browser: <script>document.write(navigator.doNotTrack || '<em>undefined</em>')</script></p>\n</blockquote>\n<h2 id=\"navigatorhardwareconcurrency\">navigator.hardwareConcurrency</h2>\n<p>Gibt die Zahl der verfügbaren Prozessoren zurück. Das ist ein grober Indikator dafür, ob der Browser auf einem ein starken neuen Gerät läuft, oder einer alten Möhre. (Vielleicht kann man auch auf die sinnvolle Anzahl an Service Workern oder Web Workern schließen? Gibt ein Browser-Tab, das in einem Prozess läuft, solche Möglichkeiten her?)</p>\n<blockquote>\n<p>In diesem Browser: <script>document.write(navigator.hardwareConcurrency || '<em>undefined</em>')</script></p>\n</blockquote>\n<h2 id=\"navigatorgeolocation\">navigator.geolocation</h2>\n<p>Selbsterklärend. Neben der aktuellen Position kann man auch Positions (oder Genauigkeits-) Änderungen als Event-Handler empfangen. Was macht man mit der Position des Users? Man füttert sie in eine Routenplanung, oder nutzt sie, um Ort und Land des Besuchers herauszufinden.</p>\n<pre>navigator.geolocation.getCurrentPosition(function(position) {\n  console.log(position.coords.latitude, position.coords.longitude);\n});</pre>\n\n<blockquote>\n<p>In diesem Browser: <span id=\"geolocationInfo\"><button id=\"geolocationInfoTrigger\">Testen</button></span></p>\n</blockquote>\n<script>\ndocument.getElementById('geolocationInfoTrigger').addEventListener('click', function(){\n    var $geolocationInfo = document.getElementById('geolocationInfo');\n    if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(function(position) {\n            var coords = position.coords;\n            var positionString = coords.latitude + ', ' +  coords.longitude;\n            $geolocationInfo.innerHTML = positionString;\n        });\n    } else {\n        $geolocationInfo.innerHTML = '<em>navigator.geolocation ist nicht verfügbar</em>';\n    }\n});\n</script>\n\n<p>Geolocation hat eine sehr gute <a href=\"http://caniuse.com/#search=geolocation\">Browser-Unterstützung</a>, erfordert aber die Berechtigung durch den User und ist im Chrome Browser nur unter SSL verfügbar.</p>\n<h2 id=\"navigatoronline\">navigator.onLine</h2>\n<blockquote>\n<p>In diesem Browser: <script>document.write(navigator.onLine || '<em>undefined</em>')</script></p>\n</blockquote>\n<p>Selbsterklärend. Die Änderung des online-Status lässt sich über ein Event abfangen:</p>\n<pre>window.addEventListener('online', function(e) {\n    console.log(\"You are online\");\n}, false);\n\nwindow.addEventListener('offline', function(e) {\n    console.log(\"You are offline\");\n}, false);</pre>\n\n\n<h2 id=\"navigatorconnection\">navigator.connection</h2>\n<p>Mehr Details zur Internetverbindung des Users (cellular, wifi).</p>\n<blockquote>\n<p>In diesem Browser: <span id=\"connectionInfo\"></span></p>\n</blockquote>\n<script>\nvar $connectionInfo = document.getElementById('connectionInfo');\nvar connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection;\nif (connection && connection.type) {\n    $connectionInfo.innerHTML = connection.type;\n} else {\n    $connectionInfo.innerHTML = '<em>navigator.connection ist nicht verfügbar</em>';\n}\n</script>\n\n<p><code>navigator.connection</code> ist nur im Firefox Mobile und auf Android verfügbar.</p>\n<h2 id=\"navigatorgetbattery\">navigator.getBattery()</h2>\n<p>Der Batteriestand des Devices kann abgefragt werden! Traurige Berühmtheit erlangte das Feature, als Uber denjenigen Kunden, deren Smartphone nur noch wenig Saft hatte, die Preise erhöht hat -- weil sie schnell das erstbeste Fahrzeug buchen würden.</p>\n<blockquote>\n<p>In diesem Browser: <span id=\"batteryInfo\">waiting...</span></p>\n</blockquote>\n<script>\nvar $batteryInfo = document.getElementById('batteryInfo');\nif (navigator.getBattery) {\n    navigator.getBattery().then(function(battery) {\n        var batteryLevel = battery.level * 100;\n        $batteryInfo.innerHTML = batteryLevel + '%';\n    }, function() {\n        $batteryInfo.innerHTML = '<em>navigator.getBattery() ist verfügbar, aber die Abfrage funktioniert nicht</em>';\n    });\n} else {\n    $batteryInfo.innerHTML = '<em>navigator.getBattery() ist nicht verfügbar</em>';\n}\n</script>\n\n<p>Gute Menschen setzen das ein, um bei Telefonen mit schwachem Akku auf aufwändige Animationen und allen überflüssigen Quatsch zu verzichten, der die CPU belastet.</p>\n<pre>navigator.getBattery().then(function(battery) {\n   console.log(battery.level*100 + '%');\n   console.log(battery.chargingTime);\n   console.log(battery.dischargingTime);\n});</pre>\n\n<p>Für die Änderung der Werte kann man auch wieder Event Handler registrieren, damit die Website/App informiert wird.</p>\n<p>Eine schöne Einführung findet man bei <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/BatteryManager\">MDN</a>. Das Feature wird <a href=\"http://caniuse.com/#search=battery\">unterstützt</a> im Firefox (nur in &quot;privilegiertem Code&quot; -- diesen Term recherchiere ich jetzt nicht), Chrome und Opera.</p>\n<h2 id=\"navigatorshare\">navigator.share()</h2>\n<p>Mit dieser Funktion kann man per JS die Sharing-Funktion auslösen, die sonst aus dem Menü des Browsers getriggert wird. Der Vorteil gegenüber individuellen Sharing-Buttons: die Leute bekommen genau die Dienste angeboten, die sie zur Verfügung haben -- und nicht die der Seitenbetreiber für wichtig hielt.</p>\n<pre>navigator.share({\n    title: document.title,\n    url: window.location.href\n})</pre>\n\n<p>Alle Parameter müssen Strings sein. Ob diese aus JavaScript kommen oder hardcoded sind, ist egal. Test oder URL können weggelasssen werden, eines von beiden muss vorhanden sein.</p>\n<p>Zurückgegeben wird eine Promise. Man kann den User also fürs Sharen belohnen oder Abbruchraten tracken.</p>\n<p>Ein paar Einschränkungen hat die Technik: Sie ist nur auf HTTPS-Seiten verfügbar, und kann nur durch User-Interaktion getriggert werden (nicht etwa onLoad oder onScroll -- Sorry liebe &quot;User Engager&quot;). Navigator.share() ist derzeit nur im Chrome (ab Version 55) verfügbar. Wie bei allen aktuellen Features wird der Entwickler also progressively enhancen.</p>\n<script>\nfunction sharePage() {\n    if (navigator.share) {\n        navigator.share({\n            title: document.title,\n            url: window.location.href\n        });\n    } else {\n        document.getElementById('shareWrapper').innerHTML = '<em>navigator.share ist nicht verfügbar.</em>';\n    }\n}\n</script>\n\n<blockquote>\n<p>In diesem Browser: <span id=\"shareWrapper\"><button id=\"shareButton\" onClick=\"sharePage();\">Share</button></span></p>\n</blockquote>\n<h2 id=\"navigatorsendbeacon\">navigator.sendBeacon</h2>\n<p>Kann genutzt werden, um kleine Datenmengen asynchron an einen Server zu senden. Das Verfahren ist für Event Tracking und Monitoring gedacht. Vor allem das Rumeiern mit Requests bei window.unload soll erleichtert werden.</p>\n<pre>navigator.sendBeacon(\"/log\", data);</pre>\n\n<p>Das <code>data</code> können Form Objekte, Arrays oder normale JS Objekte sein.</p>\n<p>Der Browser-Support ist <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Navigator/sendBeacon#Browser_compatibility\">durchwachsen</a> und das Verfahren ist als experimentell eingestuft. Auf GitHub liegt eine <a href=\"https://googlechrome.github.io/samples/beacon/\">clevere kleine Testseite</a> bereit.</p>\n<h2 id=\"navigatorvibrate500\">navigator.vibrate(500)</h2>\n<p>Lässt das Gerät vibrieren, wenn das verfügbar ist. Als Parameter nimmt die Funktion einen Integer (einmalige Vibration für x Millisekunden) oder ein Array (Pattern von Vibration und Pause) entgegen. <code>navigator.vibrate([100,200,300])</code> vibriert also 100 ms, pausiert 200 ms, vibriert 300 ms. <a href=\"http://caniuse.com/#search=vibration\">Verfügbar</a> in modernen mobilen Browsern.</p>\n<blockquote>\n<p>In diesem Browser: <button id=\"vibrateButton\" onClick=\"if (navigator.vibrate) { navigator.vibrate([200,100,200]); }\">Vibrieren</button></p>\n</blockquote>\n<p>Die Funktion steht auch in nicht-vibrierfähigen Geräten zur Verfügung und man kann nicht prüfen, ob sie tatsächlich etwas tun wird. Zur Erkennung müsste man also über die Device-Detection gehen.</p>\n<h1 id=\"2-media-queries\">(2) Media Queries</h1>\n<p>Die am häufigsten eingesetzten Media Queries dürften <code>(min/max-)(device-)width</code> sein, die für responsive Layouts genutzt werden. Das <code>device</code> macht den wichtigen Unterschied zwischen der Größe des Gerätes und des eigentlichen Viewports (also Fensters oder Split Screens).</p>\n<p>Besonders auf großen Bildschirmen, wo man im Split Screen arbeitet (was mittlerweile auch auf Tablets kein Problem mehr ist), kann das Fenster komplett anders als das Gerät sein.</p>\n<p>Doch Media Queries können viel mehr:</p>\n<h2 id=\"device-aspect-ratio\">(device-)aspect-ratio</h2>\n<p>... ist das Seitenverhältnis des geräts (bzw Viewports). Damit kann man im simpelsten Fall quer- von Hochformat unterscheiden, oder beispielsweise Panorama-Bildschirmen spezielel Stile oder Inhalte ausliefern.</p>\n<pre>@media screen and (device-aspect-ratio: 16/9), screen and (device-aspect-ratio: 16/10) { ... }</pre>\n\n\n<h2 id=\"orientation\">orientation</h2>\n<p>Eine noch simplere Variante der aspect-ratio. Nimmt die Werte <code>landscape</code> oder <code>portrait</code> an.</p>\n<pre>@media all and (orientation: portrait) { ... }</pre>\n\n<style type=\"text/css\" scoped>\n.orientationContainer > strong { display: none; }\n@media all and (orientation: portrait) {\n     .orientationContainer > * { display: none; }\n     .orientationContainer > .portrait { display: inline; }\n}\n@media all and (orientation: landscape) {\n     .orientationContainer > * { display: none; }\n     .orientationContainer > .landscape { display: inline; }\n}\n</style>\n\n<blockquote>\n<p>In diesem Browser: <span class=\"orientationContainer\">\n    <em class=\"undefined\">undefined</em>\n    <strong class=\"portrait\">portrait</strong>\n    <strong class=\"landscape\">landscape</strong>\n    </span></p>\n</blockquote>\n<h2 id=\"resolution\">resolution</h2>\n<p>Erkennt die Pixeldichte auf einem Gerät, und wird vor Allem genutzt, um Retina-optimierte Bilder auszuliefern (<code>min-resolution: 300dpi</code>).</p>\n<h2 id=\"display-mode\">display-mode</h2>\n<p>Mit dieser Media Query stellt man fest, ob die Website (bzw Web App) das Browser-GUI (und damit den Back-Button des Browsers ) zur Verfügung hat. Mögliche Werte: <code>fullscreen</code>, <code>standalone</code>, <code>minimal-ui</code> und <code>browser</code>.</p>\n<h2 id=\"light-level\">light-level</h2>\n<p>Beschreibt die Lichtverhältnisse in der Umgebung, und nimmt die Werte <code>dim</code> (gedämpft), <code>normal</code> und <code>washed</code> (sehr hell) an. Eigentlich praktisch für so etwas wie den Nacht-Lese-Modus. Andererseits sehe ich hier die Gefahr, dass man mit seinen Queries die Nutzereinstellungen oder automatische Helligkeitsanpassung des Smartphones überschreibt -- &quot;das Gegenteil von gut ist gut gemeint&quot;. Unterstützt wird <code>light-level</code> nur im Edge und im Firefox für OS X.</p>\n<h2 id=\"supports\">supports</h2>\n<p>Erst diese Woche in einem <a href=\"https://github.com/codecandies/grid-talk\">Vortrag meines Kollegen Nico Brünjes</a> gesehen. Außerhalb leider selten. Mit dieser Feature Query prüft man, ob der Browser bestimmte CSS-Eigenschaften unterstützt. Zum Beispiel <code>@supports(blink)</code> oder <code>@supports (display: grid)</code>.</p>\n<p>In den meisten Fällen lässt sich die Abfrage bzw. das progressive Enhancement direkt in die CSS-Regeln einbauen. Zum Beispiel bei Schriftgrößen via <code>font-size:16px; font-size: 1rem;</code> für den IE8. Der ignoriert die zweite Angabe, mit der er nicht klarkommt, und nutzt die erste. Moderne Browser überschreiben die erste mit der zweiten.</p>\n<p>Die Query <code>@supports</code> sorgt aber für Klarheit, wenn man größere Blöcke umstylen will, sobald eine Technik verfügbar ist. Oder aber, um eine ganz andere CSS-Datei zu laden.</p>\n<pre>&lt;link rel=\"stylesheet\" media=\"all\" href=\"basic.css\" /&gt;\n&lt;link rel=\"stylesheet\" media=\"screen and (min-width: 5in) and (display: flex)\" href=\"shiny.css\" /&gt;</pre>\n\n<p>Der IE bis inklusive Version 11 unterstützt <code>@supports</code> nicht.</p>\n<p>Der Support von Features lässt sich übrigens auch via JavaScript über die CSS-API des Browsers abfragen:</p>\n<pre>var canuiseCSSGrid = CSS.supports(\"(display: grid)\");</pre>\n\n\n<h2 id=\"exotische-queries\">Exotische Queries</h2>\n<p>Der Vollständigkeit halber noch ein paar Media Features, die eher selten genutzt werden.</p>\n<p><code>scan</code> unterscheidet in der Art des Bildaufbaus am Bildschirm (interlace vs progressive), und ist relevant bei schnellen Bewegungen.</p>\n<p><code>color</code> und <code>color-index</code> geben an, wie viele Farben verfügbar sind und wie sie gespeichert werden, <code>monochrome</code> erkennt Geräte die nur mit Graustufen arbeiten (und mit wie vielen). <code>grid</code> spricht auf Monospace-Font Displays an, also alle die feste Plätze und Breiten für jedes Zeichen haben. Theoretisch ist das cool, um reduzierte Bilder (oder auf Kontrast optimiertes CSS) an Geräte wie den Kindle auszuliefern. Weil diese Mikrooptimierung aber kaum jemand betreibt, machen die Geräte selbst was Gutes aus dem CSS -- weshalb wiederum niemand diese Mikrooptimierung betreibt.</p>\n<p>Im Firefox kann man Windows-Versionen und Betriebssystem-Stile erkennen und mit seienm Styling darauf reagieren. Feature-Queries wie <code> </code>-moz-os-version:windows-win10<code>, </code>-moz-mac-graphite-theme<code>und</code>-moz-windows-theme:aero` regeln das.</p>\n<h2 id=\"media-queries-level-4\">Media Queries Level 4</h2>\n<p>Noch im <a href=\"https://drafts.csswg.org/mediaqueries-4/#media\">Draft-Status</a> sind Media Queries Level 4. Sie versprechen Features wie <code>hover</code> (kann ich über Elemente hovern?), <code>pointer</code> (wie genau kann ich Elemente treffen -- Mauszeiger vs Wurstfinger), <code>update</code> (Schnelligkeit beim Bildaufbau, quasi frames-per-second) und mehr.</p>\n<p><code>device-width</code>, <code>device-height</code>, und damit auch device-aspect-ratio` sind deprecated.</p>\n<h1 id=\"3-was-mir-fehlt\">(3) Was mir fehlt</h1>\n<ul>\n<li>Bessere Erkennung von Bandbreite/Netzwerkgeschwindigkeit. Zum Beispiel kann Wifi langsamer sein als Cellular via LTE. Da hilft <code>navigator.connection.type</code> nicht unbedingt weiter.</li>\n<li>Statt Wifi/Cellular will man eigentlich wissen: Hat der User eine Flatrate, oder zählt jedes MB? Andererseits will ich beim Surfen diese Info auch nicht unbedingt preisgeben.</li>\n<li><a href=\"https://alistapart.com/article/container-queries-once-more-unto-the-breach\">Container Queries</a></li>\n<li>Geräte-Geschwindigkeit oder RAM. Ich möchte wissen, ob das Gerät schwach ist. Die CPU-Zahl via <code>navigator.hardwareConcurrency</code> hilft schon.</li>\n<li>Queries an Script-Tags:</li>\n</ul>\n<pre>&lt;script media=\"screen and not (doNotTrack)\" src=\"https://google.com/analytics.js\" defer integrity=\"abc\"&gt;\n&lt;script media=\"screen and (bandwidth:high)\" src=\"/immersiveEffects.js\" defer integrity=\"xyz\"&gt;\n</script></pre>\n\n",
            "url": "https://blog.thomaspuppe.de/browser-api-css-mediaqueries",
            "title": "Browser APIs und CSS Media Queries",
            "summary": "Der Einsatz von Media Queries und Browser APIs beschränkt sich häufig auf min-width und navigator.userAgent. Aber in modernen Browsern gibt es cooles Zeug.",
            "date_modified": "2017-04-08T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/open-source-in-deutschen-newsrooms",
            "content_html": "<p><strong>Vorab: bei Recherchen weiß man ja nie, was man übersehen hat. Daher bin ich dankbar für jeden Hinweis, Ergänzung oder Korrektur. Am besten per Twitter: <a href=\"https://twitter.com/thomaspuppe\">@thomaspuppe</a>.</strong></p>\n<p>Ich folge seit einiger Zeit dem Twitter-Account <a href=\"https://twitter.com/newsnerdrepos\">@NewsNerdRepos</a>. Er versendet jedes mal einen Tweet, wenn eine große Onlinezeitung ein GitHub-Repository veröffentlicht. Mir fiel auf, dass dort keine deutschen Medien vertreten sind -- obwohl diese laut <a href=\"https://ifttt.com/p/newsnerdrepos/shared\">Liste</a> durchaus zum Teil beobachtet werden. Also habe ich selbst mal recherchiert, und einen Überblick über offenen Code und offene Blogs in deutschen Newsrooms erstellt.</p>\n<h1 id=\"große-zeitungen-große-vorbilder\">Große Zeitungen: große Vorbilder</h1>\n<p>Die großen englischen Zeitungen erzeugen viel Open Source Code. Die <a href=\"https://github.com/washingtonpost\">Washington Post</a> hostet bei GitHub Daten zu Police-Shootings und Cloud-Tools, und pflegt ein <a href=\"https://developer.washingtonpost.com/pb/blog/\">Developer-Blog</a>. Die Financial Times hat einen <a href=\"https://github.com/Financial-Times\">Account mit Frontend-Repositories</a> von der productiv-seite, sowie ein <a href=\"https://github.com/ftlabs\">FT Labs Konto</a> mit Experimenten und Tools. Auch New York Times hat verschiedene Accounts: einen für die <a href=\"https://github.com/NYTimes\">Website</a>, ein <a href=\"https://github.com/nytlabs\">NYT Labs</a> und eins für den <a href=\"https://github.com/newsdev\">NYT Newsroom</a>. Außerdem gibt es ein <a href=\"https://open.blogs.nytimes.com/\">Development-Blog</a> und eine <a href=\"https://developers.nytimes.com/\">Artikel-Such-API</a>. In Europa tut sich bekanntlich der Guardian hervor mit <a href=\"https://github.com/guardian\">GitHub-Repositories</a> -- unter anderem eines mit dem <a href=\"https://github.com/guardian/frontend\">Frontend-Code von www.theguardian.com</a> -- und einem empfehlenswerten <a href=\"https://www.theguardian.com/info/developer-blog\">Developer-Blog</a>. Zudem gibt es eine Art <a href=\"https://developers.theguardian.com/\">Entwickler-Recruiting-Seite</a>.</p>\n<p>Natürlich sind auch anderssprache Zeitungen vertreten, wie z.B. <a href=\"https://github.com/lemonde\">Le Monde</a> oder <a href=\"https://github.com/hurriyet\">Hürriyet</a>. Aber es soll hier um deutsche Medien gehen. Also?</p>\n<h1 id=\"und-in-deutschland\">Und in Deutschland?</h1>\n<p>Ich habe mich auf die Suche gemacht nach offenen Repositories, Entwicklungs-Blogs, oder zumindest Twitter-Accounts, mit denen Newsrooms und Entwicklungsabteilungen Teile ihrer Arbeit veröffentlichen.</p>\n<h2 id=\"die-großen-15\">Die großen 15:</h2>\n<p>Zunächst zu den reichweitenstärksten Nachrichtenportalen in Deutschland laut <a href=\"https://de.statista.com/statistik/daten/studie/154154/umfrage/anzahl-der-visits-von-nachrichtenportalen/\">Statista/IWV</a>.</p>\n<p><strong>Bild.de:</strong> unter der Marke Bild habe ich nichts gefunden. Der Axel Springer Verlag hat einen aktiven <a href=\"https://github.com/axelspringer\">GitHub-Account</a> samt vielversprechender <a href=\"https://axelspringer.github.io/\">github.io</a>-Seite. Es gibt außerdem eine Ideen-und-Strategie-Abteilung mit eigenen <a href=\"https://github.com/as-ideas\">Repositories</a> sowie eine (offenbar eingestellte?) Abteilung namens &quot;<a href=\"https://github.com/ipool\">iPool</a>&quot;.</p>\n<p><strong>Spiegel Online:</strong> zweieinhalb ältere Projekte bei <a href=\"https://github.com/spiegelonline\">GitHub</a> -- da gab es wohl mal einen Versuch.</p>\n<p>Zu Focus Online und n-tv.de habe ich nichts gefunden.</p>\n<p><strong>upday</strong> pflegt einen <a href=\"https://github.com/upday\">GitHub-Account</a> sowie ein <a href=\"http://upday.github.io/\">Tech Blog</a>.</p>\n<p><strong>Die Welt</strong> hat einen sehr aktiven <a href=\"https://github.com/WeltN24\">GitHub</a> Account, der von AWS über Swift bis Frontend und Kantinen-Slackbot einige Projekte umfasst.</p>\n<p>Von <strong>ZEIT Online:</strong> gibt es einen <a href=\"https://github.com/ZeitOnline\">GitHub-Account</a>, in dem vor allem Module des selbst geschriebenen ZOPE-CMS veröffentlicht sind. Außerdem sind die <a href=\"https://github.com/ZeitOnline/coding-guidelines\">Coding-Guidelines</a> und der Sourcecode des anonymen <a href=\"https://github.com/ZeitOnline/briefkasten\">Whistleblower-Briefkastens</a> öffentlich. Ein <a href=\"http://blog.zeit.de/dev/\">Dev-Blog</a> berichtet über technische Entwicklungen -- leider viel zu selten. Oh, und es gibt einen scheintoten <a href=\"https://twitter.com/zeitonline_dev\">Twitter-Account</a>. (<em>Disclaimer: ZEIT Online ist mein Arbeitgeber.</em>)</p>\n<p><strong>Sueddeutsche.de:</strong> Im <a href=\"https://github.com/sueddeutsche\">GitHub-Account</a> liegen Frontend-Experimente und Daten-Tools.</p>\n<p>Zu FAZ.net, Stern.de, Gruner + Jahr, Huffington Post, Funke Medien Gruppe, RP Online, Express Online und Handelsblatt.com habe ich keine Repositories oder Blogs gefunden.</p>\n<h2 id=\"kleinere-medien\">Kleinere Medien</h2>\n<p>Das preisgekrönte <a href=\"http://www.morgenpost.de/interaktiv/\">Interaktiv</a>-Team der Berliner Morgenpost stellt bei <a href=\"https://github.com/berlinermorgenpost\">GitHub</a> Rohdaten seiner Anwendungen zur Verfügung. Tools und Quellcode der Anwendungen sind zahlreich bei <a href=\"https://github.com/wbkd\">Webkid</a>, den Codern hinter den Projekten, zu finden. Die <a href=\"https://blog.webkid.io/\">bloggen</a> auch.</p>\n<p>Beim Tagesspiegel gibt es einen fast leeren <a href=\"https://github.com/tagesspiegel\">GitHub</a> Account. Deren Data Scientist <a href=\"https://github.com/yetzt\">Sebastian Vollnhals</a> ist aber sehr aktiv im eigenen Account und im ausgegründeten &quot;<a href=\"https://github.com/dsstio\">Data Department</a>&quot; des Tagespiegel.</p>\n<p>Ähnlich verhält es sich mit <a href=\"https://github.com/stekhn\">Steffen Kühne</a> vom BR Data Team. Apropos:</p>\n<h2 id=\"öffentlich-rechtliche\">Öffentlich-Rechtliche</h2>\n<p>Der Norddeutsche Rundfunk veröffentlicht Tools auf <a href=\"https://github.com/NorddeutscherRundfunk\">GitHub</a>. Vom ZDF ist das Projekt <a href=\"https://github.com/lobbyradar\">Lobbyradar</a> (mittlerweile unter der Obhut von Netzpolitik.org) auf GitHub zu finden. Das &quot;junge Angebot von ARD und ZDF&quot; betreibt einen <a href=\"https://github.com/JungesAngebot\">GitHub-Account</a> mit aktuellen Repos.</p>\n<h2 id=\"it-medien\">IT-Medien</h2>\n<p>Der Heise-Verlag hat einen kaum noch aktiven <a href=\"https://github.com/heise\">GitHub</a>-Account, Golem ein einziges, aber schönes <a href=\"https://github.com/GolemMediaGmbH/OfficeTemperature\">Nerd-Repo</a>. Von <a href=\"https://github.com/t3n\">t3n</a> gibt es ein verwaistes Repository, von Netzpolitik gar nichts.</p>\n<h1 id=\"fazit\">Fazit</h1>\n<p>... ist ernüchternd. Die großen internationalen Medien zeigen, wie es gehen kann. Natürlich haben die ein vielfaches der deutschen Budgets. Dennoch könnten hiesige Newsrooms und Entwicklungsabteilungen offener sein. Axel Springer ist vorn dabei, die Welt hat mit dem ansprechenden Relaunch auch viel Open Source veröffentlicht.</p>\n<p>Mit etwas Stolz sehe ich uns bei ZEIT Online mit vorn dabei, auch wenn die aktive Veröffentlichung von Inhalten oder das Neuveröfentlichen von Code-Repositories eingerostet ist.</p>\n<p>Die Berliner Morgenpost zeigt, dass man zumindest Datensätze veröffentlichen kann, um Recherchen transparenter zu machen und vielleicht neue Projekte zu inspirieren (was z.B. <a href=\"http://srfdata.github.io/\">SRF Data</a> sehr gut macht).</p>\n<p>Nicht zuletzt ist Open Source und öffentliches Tech-Bloggen ein wirkungsvolles Recruiting-Instrument -- hier könnte sich jeder hervorheben, der nur <em>irgendwas</em> tut. Der Guardian zeigt wie das im Idelfall aussehen könnte.</p>\n",
            "url": "https://blog.thomaspuppe.de/open-source-in-deutschen-newsrooms",
            "title": "Open Source in deutschen Newsrooms",
            "summary": "Ein Überblick über Open Source, offene Daten und Development-Blogs aus deutschen Nachrichtenportalen.",
            "date_modified": "2017-03-14T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/twitter-bots-anne-will",
            "content_html": "<p>Social Bots sind aktuell ein großes Thema. Die Medien berichten darüber, wie die <a href=\"http://www.zeit.de/digital/internet/2017-01/social-bots-bundestagswahl-twitter-studie\">bösen Roboter</a> unsere <a href=\"http://www.zeit.de/2017/09/bundestagswahl-fake-news-manipulation-russland-hacker-cyberkrieg\">Demokratie hacken</a> werden. Sogar Verbote werden gefordert -- ich nehme an, der Quatsch soll Schlagzeilen bringen und ist nicht ernst gemeint. &quot;Forscher&quot; und &quot;Experten&quot; versuchen, die vom Untergang bedrohten Parteien zu beraten. Besonders aufgefallen ist mir kürzlich das Projekt <a href=\"http://botswatch.de/projects/anne-will-am-04-12-2016/\">Botswatch</a>, das Bot-Reaktionen auf Talkshows beleuchtet -- mit der simplen Heuristik, dass User mit 50 oder mehr Tweets pro Tag Bots seien.</p>\n<p>Ich halte das alles für sinnlose Panikmache. War aber neugierig, wie denn die Zahlen zustande kommen, was sie bedeuten, und welche Techniken heute zum Einsatz kommen, um Social Bots zu identifizieren.</p>\n<p>Dazu habe ich am vergangenen Sonntag Tweets zur Sendung Anne Will im Ersten gespeichert, und diese etwas genauer angeschaut.</p>\n<h2 id=\"datensammlung\">Datensammlung</h2>\n<ul>\n<li>Sendung: So, 05.03.17 | 21:45 - 22:45 Uhr Das Erste</li>\n<li>Tweet-Aufzeichnung: 21:00 bis 23:30 Uhr, Tweets mit dem Hashtag #annewill.</li>\n<li>Insgesamt wurden 5705 Tweets erfasst, davon sind 2842 &quot;originale&quot; Tweets und 2863 Retweets.</li>\n</ul>\n<p>Die Rohdaten habe ich bei <a href=\"https://github.com/thomaspuppe/watch-the-bots/tree/master/data/annewill/original\">GitHub</a> veröffentlicht, einige Explorations-Grafiken sind in meinem <a href=\"https://public.tableau.com/profile/thomas.puppe#!/vizhome/BlogBotswatch/TweetsUhrzeit\">Tableau</a> Account zugänglich.</p>\n<figure>\n    <img src=\"/images/2017/03/botswatch/graph_tweets-per-minute.png\" alt=\"Graph: Tweets pro Minute währen der Anne Will Sendung\"/>\n    <figcaption>Tweets mit #annewill pro Minute während der Sendung am 05.03.2017 <a href=\"https://public.tableau.com/profile/thomas.puppe#!/vizhome/BlogBotswatch/TweetsUhrzeit\">Daten bei Tableau</a></figcaption>\n</figure>\n\n\n<p>Insgesamt haben 1794 User (Re)Tweets gesendet. Die meisten wenige, manche viele. Die fleißigsten Kommentatoren waren @rot_pe (64 Tweets), @HorstNRW (53 Tweets), @darksideoftheeg (37 Tweets).</p>\n<p>888 User haben nur einen Tweet gesendet, 491 User zwei oder drei Tweets. Immerhin 115 User schrieben jeweils mehr als 10 Tweets.</p>\n<p>Die erfolgreichsten (im Sinne von Retweets während der Sendung) stammen von @krk979 (98 RT), @AliCologne (58 RT und 42 RT) und @Heinrich_Krug (42 RT).</p>\n<p>Man kann da jetzt alle möglichen Analysen drauf fahren (Hashtags, Dialoge, wer wird erwähnt), oder die erfolgreichsten Tweets zitieren ... aber hier soll es um Bots gehen. Also los: finden wir die Bots!</p>\n<h2 id=\"verfahren-1-accounts-mit-mehr-als-50-tweets-pro-tag-sind-bots\">Verfahren 1: Accounts mit mehr als 50 Tweets pro Tag sind Bots</h2>\n<p>Das erste Verfahren, das mich auch auf das Thema gebracht hat, ist das von Botswatch. Alle Accounts, die mindestens 50 Tweets pro Tag senden oder mindestens 50 Favoriten markieren, sind Bots.</p>\n<p>Im Sample von #annewill wären das</p>\n<ul>\n<li>mit 50+Tweets: 151 User mit 838 Tweets.</li>\n<li>mit 50+ Favoriten: 130 User mit 615 Tweets.</li>\n<li>Kombiniert (50 Tweets oder Favoriten): <em>217 User mit 1080 Tweets</em>.</li>\n</ul>\n<p>12 Prozent aller User sollen also Bots sein, die für ein Fünftel der Tweets verantwortlich sind. Das sind auch Zahlen, die Botswatch nennt (logisch, ich habe deren Verfahren angewendet) und 19% werden auch in einem <a href=\"http://www.zeit.de/digital/internet/2017-01/social-bots-bundestagswahl-twitter-studie/komplettansicht\">ZEIT Online Artikel zu Social Bots</a> genannt, oder im <a href=\"http://www.manager-magazin.de/unternehmen/it/social-bots-donald-trumps-stimmungsmacher-a-1136133.html\">Handelsblatt</a>. Beide zitieren Studien von Universitäten in den USA. Ich habe mir nicht die Mühe gemacht, die Primärquellen zu prüfen, und übernehme die Zahlen jetzt mal so.</p>\n<p>Verschiebt man die Grenze, ab der ein Account als Bot gilt, auf 40 oder 60 Tweets, bleibt der Anteil ähnlich: 16 bis 10 Prozent der Nutzer wären Bots, und 22 bis 15 Prozent der Nachrichten von ihnen geschrieben. Ein <a href=\"https://public.tableau.com/profile/thomas.puppe#!/vizhome/BlogBotswatch/TweetsTagHistogramm\">Histogramm</a> dazu habe ich bei Tableau (Achtung: unterschiedliche Bucket-Größen!).</p>\n<figure>\n    <img src=\"/images/2017/03/botswatch/graph_tweets-tag-histogramm.png\" alt=\"Graph: Histogramm mit Accounts und Tweets pro Tag\"/>\n    <figcaption>Anzahl von Accounts des #annewill Samples, die eine bestimmte Menge von Tweets pro Tag versenden</figcaption>\n</figure>\n\n\n<p>Was sind das für Bots, die &quot;nach einer neuen Bundestags-Studie nicht nur unsere politische Kultur vergiften, sondern bei knappen Mehrheiten auch Wahlergebnisse beeinflussen können&quot; (<a href=\"http://www.focus.de/politik/deutschland/social-bots-bundestagsstudie-warnt-roboter-koennten-radikalisieren-und-wahlen-beeinflussen_id_6527643.html\">focus</a>)?</p>\n<p>Ich habe mir die Accounts angeschaut, die im Annewill-Sample als Bot klassifiziert wurden, und besonders viel tweeten.</p>\n<p>Top-Bot meines Samples mit 855 Tweets pro Tag ist der <em>@bot_huso</em> (&quot;Hurensohn Bot&quot;). Ein automatisches Programm, das Tweets retweetet, die das Wort &quot;Hurensohn&quot; beinhalten.</p>\n<p>Es folgen eine kurdische Nachrichten-Suchmaschine (@Rojname_com), der @Demokratie_Bot, der offenbar alles mit #democracy retweetet, die @WorldTweetNews und etliche Trending-Topic-Bots (@TrendingTopicPK, @top_world_now). Alles Bots. Aber das offensichtlich, und vor Allem ungefährlich.</p>\n<p>Erst danach folgt im Ranking der User @hans_obermeier (Username &quot;Old Fart&quot;) mit 439 Tweets pro Tag und 12 Beiträgen zur Anne Will Sendung. Ein echter AfD/Merkelmussweg Typ, der sehr viele Beiträge retweetet, und manche selber verfasst oder kommentiert. Nach der 50-Tweets-Regel wäre er ein Bot, nach meiner menschlichen Einschätzung nicht. Zu viele Follower, zu &quot;breites&quot; Themenspektrum, eigene Kommentare zwischen reinen Retweets.</p>\n<p>Dann folgen einige Spam-Bots.</p>\n<p class=\"highlight\">Nachrichten wie \"Check LINK Live Nude Streaming #Deutschland #BVBFCB #annewill #bpw16 #CDU www.ein-spam-link.com\" werden häufig verschickt. Sie stammen auch eindeutig von Bots. Aber sie gefähren nicht unsere Demokratie!</p>\n\n<p>Das Live-Nude-Streaming aus dem Bundestag wurde mit nur 14 Tweets beworben. Das ist nicht viel, aber treibt zusammen mit Trending-Topic-Tweets und anderem Spam die Zahlen der Bot-Hysteriker nach oben.</p>\n<p>Zwischen Trend-Bots und Spam gibt es natürlich viele Accounts, die tatsächlich Inhalte verbreiten. Auch, und häufig ausschließlich, politische. Ob das denn Bots sind, lässt sich aber nicht aus der Menge der Tweets schließen.</p>\n<p>Als nächstes habe ich mir das andere Ende des Spektrums angesehen: Accounts, die sehr wenige Tweets pro Tag absenden. (Kleiner Exkurs: die Tweets pro Tag errechnet man in der Regel aus dem Tag der Accounteröffnung und der Gesamtzahl der bisherigen Tweets. Schwankungen in der Aktivität werden dabei nicht berücksichtigt. Das ginge auch, aber mit erheblch mehr Aufwand.)</p>\n<p>Ab unteren Ende des #annewill-Bot-Rankings nach Tweets-pro-Tag sind auffällig viele Accounts, die seit Jahren bestehen, aber nur eine einstellige Anzahl an Tweets verfasst haben. Als Beispiel seien genannt: @Secret9191, @Eschenbach22145, @Coby18807372, @juewilu, @trueequalsfalse und @FredHeiss. Besucht man diese Accounts, stellt man fest, dass sie wenige oder keine Follower haben, und tatsächlich nur einen sehr aktuellen Tweet (der aber zum Zeitpunkt der Überprüfung, zwei Tage später, schon nicht mehr der Annewill-Tweet ist). Hier wird offensichtlich kurz nach dem Schreiben wieder gelöscht. Entweder das sind komische Kauze -- oder Bots, die nicht also solche (durch plumpe Heuristiken) erkennbar sein wollen. Besonders die Namen mit Zahlen deuten möglicherweise auf eine generische Erzeugung der Accounts hin. Beim Herumspielen mit den Zahlen habe ich allerdings kein Schema und keine Serie gefunden. Unter der 50-Tweet-Hürde rutschen die alle durch.</p>\n<p>Verfahren 2: BotOrNot</p>\n<p>Die University of Indiana bietet einen Service namens <a href=\"http://truthy.indiana.edu/botornot\">BotOrNot</a> an, den man auch per <a href=\"https://github.com/truthy/botornot-python\">API</a> benutzen kann. Die Nutzer der Annewill-Tweets habe ich gegen diese API gesendet.</p>\n<p>Als Ergebnis erhält man eine Wahrscheinlichkeit, zu der ein Account als Bot angesehen wird. Da gibt es verschiedene Merkmale wie das Netzwerk, Account-Infos, Zeiträume zu denen geschrieben wird (24h Aktivität=Bot) und Inhaltsanalysen. Außerdem einen Gesamt-Score, den ich für alle Accounts, die sich an #annewill beteiligt haben, betrachtet habe:</p>\n<figure>\n    <img src=\"/images/2017/03/botswatch/graph_botornot-score-histogramm.png\" alt=\"Graph: Histogramm mit dem Botornot-Score\"/>\n    <figcaption>Anzahl von Accounts des #annewill Samples, die eine bestimmten Score bei BotOrNot erreichen</figcaption>\n</figure>\n\n<p>Aus dem Sample werden 163 Accounts als Bots betrachtet, wenn man 50% Wahrscheinlichkeit als Bot-Grenze zieht. Möchte man zu 60% sicher sein, sind es nur noch 31 Accounts. Diese habe ich mir im Detail angesehen.</p>\n<p>Sehr hohe Werte haben die Accounts @Anti68er (97%), @FredHeiss (92%), Coby18807372 (79%). Das sind die oben genannten &quot;leeren&quot; Accounts, die ihre Tweets schnell wieder lsöchen.</p>\n<p>Auch vertreten sind @RMehberg (79%), @MarkusFelder2 (64%), @LisaSkytta (64%), die nicht sehr aktiv sind. Warum Accounts, die wenige Wochen alt sind und nicht viel schreiben, als Bots eingeordnet werden, erschließt sich mir nicht.</p>\n<p>Von den 31 Usern, die mit mehr als 60% als Bot klassifiziert werden, wurde nur ein einziger in der 50-Tweets-Methode erfasst: @top_world_now.</p>\n<p>Umgekehrt: der &quot;Hurensohn&quot;-Retweeter, die Trend-Bots, und die Spam-Schleudern sind von BotOrNot alle nicht als Bot erkannt worden. Zumindest nicht mit 60%er Sicherheit. BotOrNot vergubt ja nur den Score, und wo man dann seine Grenze zieht kann man selbst entscheiden. Aber: ich hätte die Bots, die eindeutig diesen Zweck haben, und sich selbst als Bots zu erkennen geben, auch mit hohen Punktwerten erwartet.</p>\n<p>Auch hier noch ein Blick auf das andere Ende des Spektrums: von den 58 Usern, die mit weniger als 20% Wahrscheinlichkeit als Bot eingeordnet wurden, wären drei von der 50-Tweet Klassifizierung erfasst worden. Ein manueller Check zeigt, das sind normale Nutzer, die vor Allem ein breites Themenspektrum abdecken. Also nicht politikfixiert sind, sondern eben Sonntagabend mal Alle Will kommentieren.</p>\n<h2 id=\"fazit-1-vergleich-der-bots\">Fazit 1: Vergleich der Bots</h2>\n<p>Man sieht, dass die beiden Verfahren -- 50-Tweet-Heutistik vs. API der Universität -- unterschiedliche Accounts als Bots einordnen. Bei beiden findet man an beiden Enden des Spektrums sofort Fehlklassifizierungen. Die Zahlen, die man als Grenzwert benutzt, lasse sich beliebig verschieben und sorgen dann entweder allmählich für mehr Bots (Anzahl-der-Tweets Methode) oder rapide (BotOrNot Score). Welche Grenze &quot;richtig&quot; ist, lässt sich nicht sagen. Bot-Erkennung ist halt orakeln statt Wissenschaft.</p>\n<h2 id=\"fazit-2-der-inhalt\">Fazit 2: Der Inhalt</h2>\n<p>Im Sample habe ich jede Menge radikale Asichten gesehen. Meistens von rechts. Besonders von Vielschreibern. Und das durch die Bank, unabhängig von Methode und Einordnung als Bot.</p>\n<p>Was nicht bedeuten muss, dass die AfD und andere Nazis Bots einsetzen (wie gern irgendwo geschrieben wird), sondern auch bedeuten kann dass diejenigen besonders viel zu politischen Talkshows twittern, die besonders viel politisches Mitteilungsbedürfnis haben.</p>\n<p>In absoluten Zahlen ist das nach meiner Ansicht eh nicht relevant. Accounts wie @AnneWillTalk, @HeikoMaas, @berlinerzeitung oder @jungeunion haben eine große Reichweite, stehen aber nicht im Verdacht Bots zu sein.</p>\n<p>Der patriotische Vielschreiber @darksideoftheeg kommt auf 13.000 Follower, hat viele Beiträge und einen mittleren Score von 51% bei BotOrNot. Dass er exakt so viele Follower wie Friends hat, weist auf Strategie hin -- aber nicht zwingend auf einen Bot. Netzwerk und Inhalt sprechen laut <a href=\"https://github.com/thomaspuppe/watch-the-bots/blob/master/data/annewill/original/botornot-user-score.json#L1618\">BotOrNot-Daten</a> für einen Bot. Die Aktivitäts-Zeiten dagegen. Ein Grenzfall. In dubio pro reo würde ich sagen, da ist jemand einfach aktiv und erfolgreich.</p>\n<p>Die deutlich als Bots erkannten Accounts haben hingegen keine großen Follower-Zahlen. Und damit keinen großen Einfluss. Außer, wie so oft bei Twitter, indirekt über die Medien, die das Thema Bots aufgreifen und die, als wirksamer Aufreger, extreme Ansichten weiterverbreiten.</p>\n<h2 id=\"was-hilft-denn-wie-erkennt-man-bots\">Was hilft denn? Wie erkennt man Bots?</h2>\n<p>Ganz wichtig: Bots schreiben eh keine Inhalte. Sie dienen als Multiplikatoren (einer schreibt, zehn künstliche Accounts veröffentlichen), oder sie verbreiten bestimmte Inhalte weiter. Dabei müsste der Algorithmus aber auch erkennen, ob merkelmussweg nun ernst oder ironisch benutzt wurde. Was eines der großen Probleme in der Sprachverarbeitung ist. Und beim stumpfen verbreiten von Ausländerhass ist es auch egal, ob das ein identitärer Fanboy mit zu viel Zeit macht, oder ein automatisches Programm.</p>\n<p>Als konkrete Maßnahme für ein Thema, z.B. Polit-Talkshows, hilft nur die Einordnung der Tweets ins Thema. Passt das Geschriebene zur Sendung? Das kann dann nicht vorbereitet aus der Dose kommen. (Witze über die Vorhersagbarkeit von Polit-Talkshows überspringen wir.) Dann ist es wohl von Menschen geschrieben. So etwas ist aufwändig, und nur begrenzt automatisierbar. Da müsste man Mühe und Hirnschmalz reinstecken. Das ist nichts für simple Lösungen und plakative &quot;jeder Fünfte ist kein Mensch&quot; Schlagzeilen.</p>\n<p><em>Die Bot-Detektoren jedenfalls helfen nicht.</em> Noch nicht. Noch nicht gut genug. Es gibt sicher weitere Ansätze, aber so etwas ist immer ein Wettrennen. Die Bot-Programmierer wissen ja auch, mit welchen Methoden die Detektoren arbeiten. Und haben sich, wie gesehen, daran angepasst. Ich erinnere an die Accounts, die sehr viel schreiben und gleich wieder löschen. Oder die automatischen Trend-Bots und Spam-Bots. Bei solch groben Unschärfen kann man nur raten. Eine Angabe im Nachkommabereich, dass nun 22,81% der Akteure Bots seien, täuscht eine Wissenschaftlichkeit vor, die nicht gegeben ist.</p>\n<h2 id=\"ps\">P.S.</h2>\n<p>Es macht wirklich keinen Spaß, sich durch politische Tweets durchzuarbeiten.</p>\n<blockquote>\"Die Talkshow #annewill ist noch nicht mal als Trinkspiel zu gebrauchen. Sad /o\\\" <br>&mdash; @NicolePunkt</blockquote>\n\n\n\n\n",
            "url": "https://blog.thomaspuppe.de/twitter-bots-anne-will",
            "title": "Twitter-Bot-Beobachtung zu #AnneWill",
            "summary": "Social Bots sind aktell ein großes Thema. Zu Recht? Ich habe am Sonntag",
            "date_modified": "2017-03-10T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/fast-brutalist-websites",
            "content_html": "<link href=\"/images/2017/02/brutalist/styles.css\" type=\"text/css\" rel=\"stylesheet\" />\n\n<p>Websites which are intentionally ugly are one of the hottest trends in webdesign in early 2017, according to the <a href=\"https://www.washingtonpost.com/news/the-intersect/wp/2016/05/09/the-hottest-trend-in-web-design-is-intentionally-ugly-unusable-sites/\">Washington Post</a>, <a href=\"http://www.webdesignerdepot.com/2016/08/the-rise-and-rise-of-the-brutalist-design-trend/\">webdesignerdepot</a> or the <a href=\"http://t3n.de/news/web-brutalism-design-trend-705490/\">t3n magazine</a>.</p>\n<p>After <a href=\"https://www.templatemonster.com/infographics/web-design-trends-years-2004-2014.php\">years</a> of flash, wood patterns, skeuomorphism, webfonts, grunge handwriting, full screen images, ambient background videos, parallax bullshit and interactive <del>crap</del>cards, this is a trend that I actually like. <strong>Because: ugly is fast!</strong></p>\n<p>Well, it can be fast. Scanning a <a href=\"http://brutalistwebsites.com/\">collection of brutalist websites</a>, I have seen everything from pages with 10 kilobytes to dozens of megabytes. In this article I want to explore and explain some tricks for building ugly websites simply and fast.</p>\n<h1 id=\"1-backgrounds\">1. Backgrounds</h1>\n<p>Use small background images and either tile them, or show them in full size - even if the image is actually much smaller than the screen.</p>\n<div class=\"bgkermitphoto larger\"></div>\n<div class=\"bgkermiticon larger\"></div>\n\n<p>I really like CSS backgrounds which repeat a pattern or symbol. There is a beautiful collection of <a href=\"http://lea.verou.me/css3patterns/\">CSS3 patterns by Lea Verou</a>. You can even have <a href=\"http://codepen.io/mistic100/pen/GFHkm\">moving color tiles</a>. My absoute favourite are the <a href=\"https://codepen.io/collection/XORbRd/\">fruits by Angela Valasquez</a>.</p>\n<div class=\"bgcssananas full\"></div>\n\n<p>At this point I want to point out that I do not want to describe the sources or the techniques as &quot;ugly&quot;. But they can help you to create effects that might be used in so-called brutalist webdesign. That being said, let me continue with <a href=\"http://angrytools.com/gradient/\">CSS gradients</a>:</p>\n<div class=\"bgcssgradient larger\"></div>\n\n<h1 id=\"2-fonts\">2. Fonts</h1>\n<p>You can go absolutely crazy with <a href=\"https://css3gen.com/css3-text-effects/\">CSS text effects</a>. Just google it. Without even touching the font size or font face (aka webfont), you can make a lot of impact. The best: you do not need to load a huge web font file (maybe even from the Google servers), but can use these effects with any system font. Which viewer cares about rounded serifs and handcrafted ligatures, if you put these in their face?</p>\n<p><span class=\"textshadow\">Text-Shadow and <u>underline</u></span>,\n<span class=\"textneon\">Crazy Neon</span> or <span class=\"textfire\">fire effects</span>.</p>\n<p>Take care that you do not get <span class=\"textdeepshadow\">too classy</span> by accident.</p>\n<p>You might want to use text which fills the screen. Which fills <strong>any</strong> screen, from smartphone to cinema display. There&#39;s a unit for that:</p>\n<div class=\"full\"><span class=\"texthuge\"><a href=\"https://css-tricks.com/viewport-sized-typography/\">Viewport sized typography</a></span></div>\n\n<p>More properties that you can play with: line-heights, alignment (center, right), <a href=\"https://davidwalsh.name/demo/css-vertical-text.php\">vertical text</a>, <a href=\"http://line25.com/tutorials/how-to-create-a-cool-anaglyphic-text-effect-with-css\">3D glasses effect</a>, <a href=\"http://codepen.io/squarecat/pen/KuHsl\">star wars scrolling</a> and <span class=\"texthover\" data-letters=\"hover animations\">hover animations</span> (<a href=\"https://tympanus.net/codrops/2015/05/13/inspiration-for-text-styles-and-hover-effects/\">1</a>, <a href=\"http://codepen.io/boldfacedesign/pen/EoGgD\">2</a>, <a href=\"http://codepen.io/lbebber/pen/BzoHi\">3</a>)!</p>\n<h1 id=\"3-images\">3. Images</h1>\n<p>Holy shit, there is a <a href=\"https://css-tricks.com/almanac/properties/f/filter/\">huge amount</a> of <a href=\"https://blog.kulturbanause.de/2015/03/css-filter-effekte/\">CSS filters</a> that you can apply on images in modern browsers. Plus: everything Photoshop.</p>\n<p>But we want a tiny fast brutal website, don&#39;t we? So we only use small images. Which can either be scaled, repeated (with varying effects) or heavily compressed.</p>\n<div class=\"larger\">\n<table>\n<tr>\n<td><a href=\"http://bennettfeely.com/filters/\">appy CSS filters</a><br>\n(credits: <a href=\"https://twitter.com/bennettfeely\">@bennettfeely</a>)</td>\n<td><img src=\"/images/2017/02/brutalist/img_trump_jpeg75.jpg\" alt=\"Photo of Donald Trump with a graphic filter\"\n    style=\"-webkit-filter:sepia(1) hue-rotate(200deg);filter:sepia(1) hue-rotate(200deg);\"/>\n    <br>sepia(1) hue-rotate(200deg)\n</td>\n<td><img src=\"/images/2017/02/brutalist/img_trump_jpeg75.jpg\" alt=\"Photo of Donald Trump with a graphic filter\"\n    style=\"-webkit-filter:sepia(1);filter:sepia(1);\"/>\n    <br>sepia(1)\n</td>\n<td><img src=\"/images/2017/02/brutalist/img_trump_jpeg75.jpg\" alt=\"Photo of Donald Trump with a graphic filter\"\n    style=\"-webkit-filter:saturate(4);filter: saturate(4);\"/>\n    <br>saturate(4)\n</td>\n</tr>\n<tr>\n<td><img src=\"/images/2017/02/brutalist/img_trump_jpeg75.jpg\" alt=\"Photo of Donald Trump with a graphic filter\"\n    style=\"-webkit-filter:hue-rotate(90deg);filter:hue-rotate(90deg);\"/>\n    <br>hue-rotate(90deg)\n</td>\n<td><img src=\"/images/2017/02/brutalist/img_trump_jpeg75.jpg\" alt=\"Photo of Donald Trump with a graphic filter\"\n    style=\"-webkit-filter:invert(.8);filter:invert(.8);\"/>\n    <br>invert(.8)\n</td>\n<td><img src=\"/images/2017/02/brutalist/img_trump_jpeg75.jpg\" alt=\"Photo of Donald Trump with a graphic filter\"\n    style=\"-webkit-filter:contrast(3);filter:contrast(3);\"/>\n    <br>contrast(3)\n</td>\n<td><img src=\"/images/2017/02/brutalist/img_trump_jpeg75.jpg\" alt=\"Photo of Donald Trump with a graphic filter\"\n    style=\"-webkit-filter:blur(7px);filter: blur(7px);\"/>\n    <br>blur(7px)\n</td>\n</tr>\n</table>\n</div>\n\n<div class=\"larger\">\n    <table><tr>\n        <td><a href=\"http://www.jpegreducer.com\">compress heavily</a></td>\n        <td>\n            <img src=\"/images/2017/02/brutalist/img_trump_jpeg50.jpg\" alt=\"Photo of Donald Trump\" /><br>\n            jpg 50%: 13kB\n        </td>\n        <td>\n            <img src=\"/images/2017/02/brutalist/img_trump_jpeg25.jpg\" alt=\"Photo of Donald Trump, heavily compressed\" /><br>\n            jpg 25%: 9kB\n        </td>\n        <td>\n            <img src=\"/images/2017/02/brutalist/img_trump_jpeg10.jpg\" alt=\"Photo of Donald Trump, heavily compressed\" /><br>\n            jpg 10%: 6kB\n        </td>\n    </tr></table>\n</div>\n\n<div class=\"larger\">\n    <table><tr>\n        <td><a href=\"http://optimizilla.com\">reduce colors</a></td>\n        <td>\n            <img src=\"/images/2017/02/brutalist/img_trump_8colors.png\" alt=\"8-color-photo of Donald Trump\" /><br>\n            8 colors png: 44kB\n        </td>\n        <td>\n            <img src=\"/images/2017/02/brutalist/img_trump_2colors.png\" alt=\"2-color-photo of Donald Trump\" /><br>\n            2 colors png: 15kB\n        </td>\n    </tr></table>\n</div>\n\n\n<h1 id=\"4-ascii-art\">4. ASCII Art</h1>\n<pre>\n _______________________________________\n&lt; Are you old enough to know ASCII art? &gt;\n ---------------------------------------\n        \\   ^__^\n         \\  (oo)\\_______\n            (__)\\       )\\/\\\n                ||----w |\n                ||     ||</pre>\n\n\n<h1 id=\"5-unicode-writing\">5. Unicode Writing</h1>\n<p>I can write &#x24d8;&#x24dd; &#x24d1;&#x24e4;&#x24d1;&#x24d1;&#x24db;&#x24d4;&#x24e2; or &#x73;&#x20e3;&#xa0;&#xa0;&#xa0;&#x71;&#x20e3;&#xa0;&#xa0;&#xa0;&#x75;&#x20e3;&#xa0;&#xa0;&#xa0;&#x61;&#x20e3;&#xa0;&#xa0;&#xa0;&#x72;&#x20e3;&#xa0;&#xa0;&#xa0;&#x65;&#x20e3;&#xa0;&#xa0;&#xa0;&#x73;&#x20e3; and even &#x105; &#x282;&#x567;&#x57e;&#x4c0;&#x4bd; &#xe7;&#x105;&#x4c0;&#x4c0;&#x4bd;&#x56a; &#x48d;&#x4bd;&#x572;&#x567; just using <a href=\"http://lunicode.com/\">unicode characters</a>.</p>\n<p>There are many more on the ➥ <a href=\"https://unicode-table.com/en/\">unicode table</a> <span style=\"font-size:200%\">😎</span>.</p>\n<h1 id=\"6-oldschool-html-without-styles\">6. Oldschool HTML without styles</h1>\n<p>This was more fun when <code>&lt;hr&gt;</code> had a dropshadow and tables had borders and table-padding and stuff. But some HTML elements look quite brutal when unstyled. <code>fieldset</code> elements are handy for creating boxes:</p>\n<div><form><fieldset>\n    <legend>form fieldset legend</legend>\n    <textarea cols=\"3\" rows=\"8\">unstyled    textarea</textarea>\n    <hr>\n    <button disabled style=\"width:100%\">disabled button</button>\n    <hr>\n    With HTML5 we even have new fany stuff like the progress element:\n    <progress>progress</progress>\n</fieldset></form></div>\n\n\n<h1 id=\"7-share-this-page-❤\">7. Share this page! &#10084;</h1>\n<p>Never never ever use Twitter and Facebook widgets! They are the worst! They force your users to connect to twitter/facebook servers and load tons of crap, even when they do not click.</p>\n<p>Instead, use simple links which you can style on your own behalf. It is really fast, it is safe, and it works. Just try it out:</p>\n<a href=\"https://twitter.com/share?url=https%3A%2F%2Fblog.thomaspuppe.de/fast-brutalist-websites&hashtags=brutalist%2Cwebdesign&text=How%20to%20make%20your%20shiny%20new%20brutalist%20website%20brutally%20fast\">\n<p style=\"font-family:monospace;white-space:pre;\">\n┊┊┊┊┊┊┊┊┊┊┊┊╭━━━━━╮\n┊┊┊┊╱▔▔╲┊┊╭━╯TWEET╰━╮\n┊┊┊▕┈┈▋▋▏╭┫THIS HOLY┃\n┊▂▂╱┈┈┈▕╲╯╰╮  SHIT! ┃\n┊▏▕▂▂╱┈▕▔┊┊╰━━━━━━━━╯\n┊╲▂▂▂▂▂╱┊┊┊┊┊┊┊┊┊┊┊┊┊┊┊┊┊┊┊┊┊┊\n━━━━┃━┃━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n</p></a>\n\n\n<p><a href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fblog.thomaspuppe.de%2Ffast-brutalist-websites\" class=\"facebookbutton\"><span style=\"font-size:150%\">&#9996;</span> Share on facebook</a></p>\n<p><br><br><br><br><br><br>\n<strong>Credits:</strong> <a href=\"https://pixabay.com/de/kermit-frosch-schneeball-werfen-601711/\">Kermit photo</a>, <a href=\"https://dribbble.com/shots/1787673-Kermit\">Kermit icon</a>, <a href=\"http://xahlee.info/comp/unicode_ascii_art.html\">Twitter Button</a>, <a href=\"http://www.mburnette.com/blog/create-simple-faux-3d-css-button\">Facebook Button</a>.</p>\n",
            "url": "https://blog.thomaspuppe.de/fast-brutalist-websites",
            "title": "How to make your shiny new brutalist website brutally fast",
            "summary": "Intentionally ugly websites are one of the trends in 2017. What I like most about this: ugly is fast!",
            "date_modified": "2017-02-09T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/url-unshortening",
            "content_html": "<p>Für ein aktuelles Feature bei Bundestwitter trage ich gerade zusammen, welche Links von Politikern via Twitter verbreitet wurden. Dabei stellt sich heraus, dass mehr als 20% der geposteten Links sogenannte Shortlinks sind. Also nicht nur die Kürzung von Twitter selbst via <code>t.co</code> (deren echte URLs werden über die APIs mitgeliefert), sondern es werden schon Short-URLs beim Schreiben der Tweets eingegeben.</p>\n<p>In Zahlen drückt sich das so aus (bei insgesamt 48.000 Links):</p>\n<ul>\n<li>6404 &times; fb.me</li>\n<li>1506 &times; bit.ly</li>\n<li>1072 &times; ow.ly</li>\n<li>199 &times; tinyurl.com</li>\n<li>187 &times; goo.gl</li>\n<li>138 &times; ift.tt</li>\n</ul>\n<p>Diese URLs möchte ich nun also auflösen. Im Internet findet man darüber <a href=\"http://security.thejoshmeister.com/2009/04/how-to-preview-shortened-urls-tinyurl.html\">Artikel</a>, <a href=\"http://www.toolsvoid.com/unshorten-url\">einige</a> <a href=\"https://www.unshorten.it/\">verschiedene</a> <a href=\"http://checkshorturl.com/\">Dienste </a> und <a href=\"https://github.com/quark-zju/unshorten\">diverse</a> <a href=\"https://github.com/mathiasbynens/node-unshorten\">Scripte</a>, <a href=\"https://github.com/nodeca/url-unshort\">Bibliotheken</a> und <a href=\"https://gist.github.com/zhasm/986361\">Snippets</a> bei GitHub.</p>\n<h1 id=\"eigentlich-ist-es-viel-einfacher\">Eigentlich ist es viel einfacher!</h1>\n<p>Es stellt sich heraus, dass <em>im Prinzip</em> ein Curl-Aufruf ausreicht. Alle genannten Dienste antworten mit einem HTTP Status 301 und dem Location-Header. <strong>Das Internet ist also doch noch nicht so kaputt wie ich dachte.</strong></p>\n<p>In Bash ist das ganz simpel: <code>curl -I http://fb.me/16MEzokwA</code>. Fertig. Wegen der Anbindung an meine Datenbank habe ich die Arbeit mit PHP erledigt, was auch mit Bordmitteln und ein paar Codezeilen funktioniert:</p>\n<pre>function get_resp_from_url($url)\n{\n    $curlConnection = curl_init();\n    curl_setopt($curlConnection, CURLOPT_URL, $url);\n    curl_setopt($curlConnection, CURLOPT_NOBODY, true);\n\n    if (curl_exec($curlConnection) == false) {\n        print 'Curl-Error: ' . curl_error($ch);\n        curl_close($curlConnection);\n        return false;\n    } else {\n        $responseInfo = curl_getinfo($curlConnection);\n        curl_close($curlConnection);\n        return array(\n            'status' => $responseInfo['http_code'],\n            'location' => $responseInfo['redirect_url']\n            );\n    }\n}</pre>\n\n<p>Einzig Facebook konnte damit nicht abgegrast werden. <code>fb.me</code>-Adressen liefern mir zuverlässig Status 301 bei Abfrage per Bash, und Status 200 mit Facebook-HTML im Body bei der Abfrage per PHP.</p>\n<p>Weder Google noch die curl-Referenz für PHP konnten helfen, also musste Python herhalten. Nach dem üblichen erfolglosen Herumirren auf mehreren Wegen (<code>httplib</code> und <code>urllib2</code>) funktioniert es dann auf diese Art:</p>\n<pre>import requests\nr = requests.get(url, allow_redirects=False)\nif r.status_code == 301:\n    return r.headers.get('Location')</pre>\n\n<p>Schöne Erkenntnis am Rande: selbst bei hunderten oder tausenden Abfragen im unter-Sekunden-Takt hat keiner der Dienste mit Rate Limiting oder anderer Abweisung reagiert.</p>\n",
            "url": "https://blog.thomaspuppe.de/url-unshortening",
            "title": "URL-unshortening",
            "summary": "Auflösen von bit.ly, fb.me und co im großen Stil",
            "date_modified": "2017-01-06T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/berlin-anschlag-aufmacher",
            "content_html": "<p>Die Aufmacher der großen Online-Medien am 21. Dezember 2016, zwei Tage nach dem Anschlag. Entspringt einer kleinen Übung zu Crawling und Scraping. Ohne Auswertung.</p>\n<style type=\"text/css\" scoped>\nsmall { color: grey; }\nspan.gitdel { background: #ffecec; text-decoration: line-through; }\nspan.gitadd { background: #ecffec; }\n</style>\n\n<h2>Der SPIEGEL</h2>\n<ul>\n    <li><small>00:00)</small> Berlin nach dem Terror: Maximal unbeeindruckt</li>\n    <li><small>06:10)</small> Anschlag auf Weihnachtsmarkt: Ermittler erwarten schnellen Fahndungserfolg</li>\n    <li><small>11:10)</small> Anschlag in Berlin: Polizei sucht tatverdächtigen Tunesier</li>\n    <li><small>15:45)</small> +++ Newsblog +++: Tatbeteiligung des Gesuchten \"überhaupt nicht geklärt\"</li>\n    <li><small>15:55)</small> +++ Newsblog +++: Gesuchter Tunesier sollte abgeschoben werden</li>\n    <li><small>16:30)</small> NRW-Innenminister zu Anis A.: Gesuchter Tunesier sollte abgeschoben werden</li>\n    <li><small>17:55)</small> +++ Newsblog +++: Öffentliche Fahndung nach Anis Amri - bis zu 100.000 Euro Belohnung</li>\n    <li><small>18:15)</small> Weihnachtsmarkt-Anschlag von Berlin: BKA fahndet öffentlich nach Islamisten Anis Amri</li>\n    <li><small>18:50)</small> Weihnachtsmarktanschlag von Berlin: BKA fahndet öffentlich nach Islamist Anis Amri</li>\n    <li><small>19:35)</small> Mutmaßlicher Berliner Attentäter Anis Amri: Aus den Augen verloren</li>\n</ul>\n\n<h2>Die ZEIT</h2>\n<ul>\n    <li><small>00:00)</small> Anschlag auf Berliner Weihnachtsmarkt - Der Weg des Trucks</li>\n    <li><small>07:45)</small> Berlin - In Stille vereint</li>\n    <li><small>10:35)</small> Terrorismus - Gefangen in der Reaktionsroutine</li>\n    <li><small>11:15)</small> Berlin - Polizei fahndet bundesweit nach Verdächtigem</li>\n    <li><small>12:00)</small> Berlin - Polizei fahndet nach verdächtigem Tunesier</li>\n    <li><small>14:50)</small> Berlin - Verdächtiger seit Mitternacht zur Fahndung ausgeschrieben</li>\n    <li><small>15:50)</small> Berlin - Verdächtiger sollte abgeschoben werden</li>\n    <li><small>17:30)</small> Anschlag in Berlin - Erstaunliche Angstresistenz</li>\n    <li><small>20:25)</small> Anschlag am Breitscheidplatz - Ein alter Bekannter</li>\n</ul>\n<h2>FAZ</h2>\n<ul>\n    <li><small>00:00)</small> Attentat auf Weihnachtsmarkt: Suche nach dem richtigen Mann</li>\n    <li><small>06:05)</small> Nach Todesfahrt von Berlin: Fieberhafte Suche nach dem Täter</li>\n    <li><small>09:25)</small> Nach dem Anschlag in Berlin: Polizeigewerkschaft: „Politiker erschweren unsere Arbeit“</li>\n    <li><small>09:50)</small> Reaktionen auf den Anschlag: Dringend verdächtig</li>\n    <li><small>11:50)</small> Liveblog nach Anschlag: Polizei fahndet bundesweit nach einem Verdächtigen</li>\n    <li><small>12:10)</small> Nach Anschlag von Berlin: Polizei fahndet angeblich nach Tunesier</li>\n    <li><small>13:20)</small> Nach Anschlag von Berlin: Polizei fahndet offenbar nach Tunesier</li>\n    <li><small>14:50)</small> Nach Anschlag von Berlin: Polizei fahndet nach Tunesier</li>\n    <li><small>15:25)</small> Liveblog nach Anschlag: Innenminister bestätigt Suche nach Verdächtigem</li>\n    <li><small>16:00)</small> Liveblog nach Anschlag: Verdächtiger sollte abgeschoben werden</li>\n    <li><small>16:45)</small> Die Medien und der Anschlag: Wer sät die Furcht?</li>\n    <li><small>18:05)</small> Nach Attentat in Berlin: Öffentliche Fahndung nach verdächtigem Tunesier</li>\n    <li><small>19:35)</small> Anschlag auf Weihnachtsmarkt: Berliner Justiz observierte Amri von März bis September</li>\n    <li><small>21:40)</small> Anschlag von Berlin: Wer ist Anis Amri?</li>\n</ul>\n<h2>Focus</h2>\n<ul>\n    <li><small>00:00)</small> Zeitvorsprung macht alles schwieriger: Attentäter flüchtig: Experte erklärt, wie Polizei jetzt den Staatsfeind Nr. 1 jagt</li>\n    <li><small>01:40)</small> TV-Kolumne „Maischberger“: Talk zum Anschlag in Berlin: Moderatorin Maischberger greift Söder an</li>\n    <li><small>02:15)</small> TV-Kolumne „Maischberger“: Nach dem Anschlag in Berlin: Söder prangert „Kontrollverlust“ an den Grenzen an</li>\n    <li><small>03:35)</small> +++ Anschlag in Berlin im Live-Ticker +++: Chef der Innenminister-Konferenz: „Wir sind in einem Kriegszustand“</li>\n    <li><small>03:40)</small> „Wir haben viel zu früh Hurra geschrien“: Todesfahrer von Berlin noch immer auf der Flucht: Was bei der Fahndung falsch lief</li>\n    <li><small>06:25)</small> „Wir haben viel zu früh Hurra geschrien“: Die verhängnisvollen Pannen der Polizei auf der Suche nach dem Todesfahrer</li>\n    <li><small>06:50)</small> +++ Anschlag in Berlin im Live-Ticker +++: Stoppte er die Todesfahrt? Beifahrer offenbar erst nach Anschlag erschossen</li>\n    <li><small>07:10)</small> Unglück in Mexiko: 29 Tote: Aufnahmen zeigen verheerende Explosion tausender Feuerwerkskörper</li>\n    <li><small>07:15)</small> +++ Anschlag in Berlin im Live-Ticker +++: Stoppte er die Todesfahrt? Beifahrer offenbar erst nach Anschlag erschossen</li>\n    <li><small>08:35)</small> Nach Anschlag in Berlin: Panzersperren und Anti-Terror-Poller? So sollen Silvester-Partys geschützt werden</li>\n    <li><small>09:10)</small> Dom im Fokus der Polizei: Kölner Polizeipräsident nach Anschlag: \"Habe Sorge, dass es Nachahmer gibt\"</li>\n    <li><small>09:20)</small> Nach Anschlag in Berlin: Panzersperren und Anti-Terror-Poller? So sollen Silvester-Partys geschützt werden</li>\n    <li><small>09:30)</small> Ein Spanier erlitt mehrere Brüche: \"Schlimmster Schmerz meines Lebens\": Jetzt sprechen die Opfer des Berlin-Anschlags</li>\n    <li><small>09:40)</small> Ein Spanier erlitt mehrere Brüche: \"Schlimmster Schmerz meines Lebens\": Jetzt sprechen die Opfer des Anschlags</li>\n    <li><small>10:45)</small> +++ Anschlag in Berlin im Live-Ticker +++: Polizei nahm weiteren Verdächtigen fest - und ließ auch ihn wieder laufen</li>\n    <li><small>10:50)</small> +++ Anschlag in Berlin im Live-Ticker +++: Polizei lässt weiteren Verdächtigen laufen - Ermittler glauben, dass Täter verletzt ist</li>\n    <li><small>11:00)</small> +++ Anschlag in Berlin im Live-Ticker +++: Polizei lässt weiteren Verdächtigen laufen - Neue Spur führt in Salafisten-Kreise</li>\n    <li><small>11:10)</small> +++ Anschlag in Berlin im Live-Ticker +++: Dokument in Lkw entdeckt: Polizei fahndet bundesweit nach Verdächtigem - Spur führt in Salafisten-Kreise</li>\n    <li><small>11:15)</small> +++ Anschlag in Berlin im Live-Ticker +++: Dokument in Lkw entdeckt: Polizei fahndet bundesweit nach 23-jährigem Tunesier</li>\n    <li><small>11:20)</small> +++ Anschlag in Berlin im Live-Ticker +++: Ausweis in Lkw entdeckt: Polizei fahndet bundesweit nach 23-jährigem Tunesier</li>\n    <li><small>11:30)</small> +++ Anschlag in Berlin im Live-Ticker +++: Ausweis in Lkw entdeckt: Polizei fahndet nach 23-jährigem Tunesier - steht Zugriff in NRW kurz bevor?</li>\n    <li><small>12:00)</small> +++ Anschlag in Berlin im Live-Ticker +++: Polizei fahndet mit diesem Bild nach Terror-Verdächtigem Anis A.</li>\n    <li><small>12:20)</small> Nach Anschlag in Berlin: Die Polizei fahndet mit diesem Bild deutschlandweit nach dem Terrorverdächtigen Anis A.</li>\n    <li><small>13:05)</small> Was über den Mann bekannt ist: Terrorverdächtiger Anis A.: Polizei nahm ihn im August fest, ließ ihn aber laufen</li>\n    <li><small>13:45)</small> Sein Ausweis lag im Todes-Lkw: Terrorverdächtiger Anis A.: Festnahme, Abschiebehaft - trotzdem lief er frei herum</li>\n    <li><small>14:00)</small> Sein Asylpapier lag im Todes-Lkw: Terrorverdächtiger Anis A.: Festnahme, Abschiebehaft - trotzdem lief er frei herum</li>\n    <li><small>15:30)</small> Überfälle auf Polizeistationen und Amokfahrt mit Lkw: Terrornetzwerk um Anis A. plante seit 2015 Anschläge in Deutschland</li>\n    <li><small>16:40)</small> Sein Asylpapier lag im Todes-Lkw: Anis A. sollte abgeschoben werden - nötige Papiere kamen \"zufälligerweise heute\" aus Tunesien</li>\n    <li><small>18:00)</small> +++ Anschlag in Berlin im Live-Ticker +++: 100.000 Euro Belohnung für Anis A. - Polizei wegen Schreibfehler an Razzia gehindert</li>\n    <li><small>18:05)</small> +++ Anschlag in Berlin im Live-Ticker +++: 100.000 Euro Belohnung für Hinweise - Polizei wegen Schreibfehler an Razzia gehindert</li>\n    <li><small>18:35)</small> +++ Anschlag in Berlin im Live-Ticker +++: 100.000 Euro Belohnung für Hinweise - Polizei wegen Schreibfehlers an Razzia gehindert</li>\n    <li><small>19:10)</small> Wie konnte das passieren?: Rekonstruktion des Versagens: Wie Anis Amri den Behörden entkam</li>\n    <li><small>20:30)</small> \"Bin genauso betroffen wie alle anderen\": Jagd auf Anis Amri: Nun äußern sich die Geschwister des Terrorverdächtigen</li>\n    <li><small>21:15)</small> +++ Anschlag in Berlin im Live-Ticker +++: Flüchtlingslager angezündet: Anis Amri saß in Italien vier Jahre im Gefängnis</li>\n    <li><small>22:25)</small> +++ Anschlag in Berlin im Live-Ticker +++: Ranghoher Polizist: Anis Amri \"über alle Berge\" - Verdächtiger saß in Italien vier Jahre im Gefängnis</li>\n    <li><small>23:45)</small> +++ Anschlag in Berlin im Live-Ticker +++: Ranghoher Polizist: Anis Amri \"über alle Berge\" – Verdächtiger saß in Italien vier Jahre im Gefängnis</li>\n</ul>\n<h2>Süddeutsche Zeitung</h2>\n<ul>\n    <li><small>00:00)</small> Deutschland ist nicht im Krieg</li>\n    <li><small>09:25)</small> So lassen sich öffentliche Plätze schützen</li>\n    <li><small>11:05)</small> Nizza hat seine Lehren aus dem Anschlag gezogen</li>\n    <li><small>11:30)</small> Medien: Polizei findet Personalien in Lkw - bundesweite Fahndung</li>\n    <li><small>11:40)</small> Polizei sucht Tunesier - Verdächtiger erhielt Asyl in Deutschland</li>\n    <li><small>11:45)</small> Polizei sucht Tunesier - Verdächtiger beantragte Asyl in Deutschland</li>\n    <li><small>15:25)</small> De Maizière: Nach Verdächtigem wird europaweit gefahndet</li>\n    <li><small>15:40)</small> Verdächtiger war in Abschiebehaft </li>\n    <li><small>16:25)</small> NRW ermittelte gegen Verdächtigen wegen \"Vorbereitung einer staatsgefährdenden Straftat\" </li>\n    <li><small>17:50)</small> Bundesanwaltschaft fahndet öffentlich nach Anis Amri</li>\n    <li><small>17:55)</small> Anschlag in Berlin: Bundesanwaltschaft fahndet öffentlich nach Anis Amri</li>\n    <li><small>22:20)</small> Anschlag in Berlin: Bundesanwaltschaft fahndet europaweit</li>\n    <li><small>22:30)</small> Anis Amri ist den Sicherheitsbehörden lange bekannt</li>\n</ul>\n<h2>taz</h2>\n<ul>\n    <li><small>00:00)</small> Gelassenheit als Gegenwehr - Kommentar Anschlag in Berlin</li>\n    <li><small>08:45)</small> „Bald in Berlin“ - Berlin im Visier von Terroristen</li>\n    <li><small>10:10)</small> „Dass IS sich bekennt ist kein Beweis“ - Suche nach dem Berlin-Attentäter</li>\n    <li><small>10:20)</small> „Dass IS sich bekennt, ist kein Beweis“ - Suche nach dem Berlin-Attentäter</li>\n    <li><small>14:20)</small> Gegen den Hass – und dafür - Demos nach dem Anschlag in Berlin</li>\n    <li><small>19:40)</small> Brauchen wir mehr Überwachung? - Sicherheit nach Berliner Anschlag</li>\n</ul>\n<h2>Berliner Morgenpost</h2>\n<ul>\n    <li><small>00:00)</small> Lkw rast auf Weihnachtsmarkt in Berlin - Was wir wissen</li>\n    <li><small>06:25)</small> Die tödliche Stille nach dem Terroranschlag von Berlin</li>\n    <li><small>06:40)</small> Trauer um Opfer des Anschlags von Berlin</li>\n    <li><small>06:45)</small> Sechs Festnahmen nach Attentat auf Botschafter in der Türkei</li>\n    <li><small>07:30)</small> Das geschah in der Nacht zu Mittwoch in Berlin</li>\n    <li><small>11:25)</small> Lkw rast auf Weihnachtsmarkt in Berlin - Was wir wissen</li>\n    <li><small>16:30)</small> Die Polizei fahndet nach Verdächtigem - noch aber ohne Foto</li>\n    <li><small>17:55)</small> Die Polizei fahndet nach Verdächtigem - zunächst ohne Foto</li>\n    <li><small>18:20)</small> Lkw rast auf Weihnachtsmarkt in Berlin - Was wir wissen</li>\n    <li><small>19:00)</small> Anschlag in Berlin - \"Fürchtet euch nicht\"</li>\n    <li><small>19:15)</small> So scheiterte die Abschiebung des Verdächtigen Anis Amri</li>\n    <li><small>20:10)</small> Berlin hat ein Sicherheitsdefizit</li>\n</ul>\n",
            "url": "https://blog.thomaspuppe.de/berlin-anschlag-aufmacher",
            "title": "Online-Aufmacher nach dem Anschlag in Berlin",
            "summary": "Die Aufmacher der großen Online-Medien zwei Tage nach dem Anschlag im Vergleich",
            "date_modified": "2017-01-05T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/das-anti-agile-manifest",
            "content_html": "<p>Das <a href=\"http://agilemanifesto.org/iso/de/manifesto.html\">Agile Manifest</a> und seine <a href=\"http://agilemanifesto.org/iso/de/principles.html\">agilen Prinzipien</a> sind die Basis agiler Software-Entwicklung. An diesen Leitplanken (nicht ehernen Gesetzen) orientieren sich viele moderne Entwickler-Teams.</p>\n<p>Wie klingt es, wenn man das agile Manifest umkehrt?</p>\n<h2 id=\"das-anti-agile-manifest\">Das Anti-agile Manifest</h2>\n<p>Wir haben feste Prozesse und Werkzeuge. Das wird nicht einfach umgeworfen für kurze Dienstwege und direkte Absprachen.</p>\n<p>Dokumentation sagt uns was die Software tut. Der super-clevere Quellcode ist eh nicht lesbar.</p>\n<p>Schriftliches geht über Kunden-Absprachen.</p>\n<p>Pläne werden befolgt und nicht einfach umgeworfen, nur weil es neue Fragen und Erkenntnisse gibt.</p>\n<h2 id=\"zwölf-prinzipien-anti-agiler-softwareentwicklung\">Zwölf Prinzipien Anti-agiler Softwareentwicklung</h2>\n<p>Wir sollten nicht ständig kleinteiligen Code releasen, sondern große Würfe in großen Release-Paketen abliefern.</p>\n<p>Während der Entwicklung möchten wir keine Änderungen an der Anforderung mehr sehen. Was einmal festgeschrieben wurde, soll dann auch gelten. Selbst Schuld, wenn nicht alles bedacht wurde.</p>\n<p>Ein Feature ist fertig, wenn der Code lokal läuft. Das geht dann auch auf produktiven Systemen. Falls nicht, merkt das <em>jemand</em> im Testsystem. Dafür ist genug Zeit, weil nicht so oft released wird (siehe auch &quot;<em>große Würfe</em>&quot;).</p>\n<p>Everyone, <strong>please leave me alone</strong>. Die tägliche Zusammenarbeit stört. Alle wichtigen Infos sind in der User Story zusammengefasst. Nachfragen können so erst gar nicht entstehen. Falls doch, lässt sich das auch noch in der Review klären (&quot;ich konnte nicht, weil...&quot;).</p>\n<p>Errichte Projekte rund um unmotivierte Gruppen. Wirf ihnen regelmäßig Aufgaben zu. Wenn die abgehakt sind, wirf neue nach. Wenn nicht, siehe &quot;<em>Leave me alone</em>&quot;.</p>\n<p>Die effizienteste und effektivste Methode, Informationen an und innerhalb eines Entwicklungsteams zu übermitteln, ist schriftlich und allumfassend im Vorfeld (siehe auch &quot;<em>Leave me alone</em>&quot;).</p>\n<p>Beschäftigtgewesensein ist das wichtigste Fortschrittsmaß.</p>\n<p>Agil sein bedeutet, wechselweise sprinten und spurten zu können. Wir springen flexibel zwischen dringenden Deadlines, akuten Notfällen und wichtigen Bugs.</p>\n<p>Lieber schnelles Mittelmaß (&quot;reicht doch so&quot;) als sinnloser Perfektionismus. Denn Code wird nicht gelesen, kopiert oder erweitert. Falls doch, kann man sich dann die Zeit zum refactorieren nehmen (siehe auch &quot;<em>sprinten und spurten</em>&quot;).</p>\n<p>Lines of Code und Features pro Sprint sind der beste Indikator für hochwertige Arbeit.</p>\n<p>Die besten Architekturen, Anforderungen und Entwürfe entstehen außerhalb des ausführenden Teams. Sie fallen dann in Stein gemeißelt auf das Team herab.</p>\n<p>Team-interne Meetings sind zu vermeiden (siehe auch &quot;<em>Leave me alone</em>&quot;). Wird dennoch hin und wieder eine Retrospektive erzwungen, lässt man die still über sich ergehen und macht weiter wie zuvor.</p>\n",
            "url": "https://blog.thomaspuppe.de/das-anti-agile-manifest",
            "title": "Das Anti-agile Manifest",
            "summary": "Wie klingt es, wenn man das agile Manifest umkehrt?",
            "date_modified": "2016-12-13T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/us-wahl-aufmacher-auf-news-websites",
            "content_html": "<p>Kürzlich habe ich mit dem Python-Framework <a href=\"https://scrapy.org/\">Scrapy</a> herumgespielt. Erstens wollte ich ausprobieren, wie gut es sich bedienen lässt. Zweitens war ich neugierig, wie die Aufmacher von News-Websies vor und bei der US-Präsidentschaftswahl bestückt werden. Beides lässt sich praktischerweise gut kombinieren :-)</p>\n<h1 id=\"das-vorgehen\">Das Vorgehen</h1>\n<p>Zunächst habe ich die Homepages der News-Seiten mehrere Tage lang im 5-Minuten-Takt heruntergeladen.</p>\n<pre>#!/bin/bash\ncurrenttime=`date '+%Y-%m-%d_%H-%M-%S'`;\nfoldername=\"/var/www/newscurl/$currenttime\";\nmkdir $foldername;\ncd $foldername;\n\ncurl -o spiegel.html http://www.spiegel.de/\ncurl -o zeit.html http://www.zeit.de/index\ncurl -o lr-online.html http://www.lr-online.de/\n</pre>\n\n<p>Damit ist das HTML der Seite gesichert, und kann später immer wieder analysiert werden. Was mit Scrapy auch recht einfach gelingt:</p>\n<pre>import os\nimport scrapy\n\nclass LocalSpider(scrapy.Spider):\n    name = 'localspider'\n    # provided via `python -m SimpleHTTPServer 9090`, since file:// url did not work\n    start_urls = ['http://localhost:9090/']\n\n    def parse_single_page(self, response):\n        yield {\n            'title': response.css('main article h2 a::attr(title)').extract_first(),\n            'url': response.css('main article h2 a::attr(href)').extract_first(),\n            'image': response.css('main article img::attr(src)').extract_first()\n        }\n\n    def parse(self, response):\n        # entry point: directory listing of localhost:9090\n        for link in response.css('a'):\n            link_url = link.css('::attr(href)').extract_first()\n\n            if link_url.endswith('zeit.html'):\n                yield scrapy.Request(response.urljoin(link_url), callback=self.parse_single_page)\n            else:\n                yield scrapy.Request(response.urljoin(link_url), callback=self.parse)</pre>\n\n<p>Mit <code>scrapy runspider localspider.py -o result.json --logfile=localspider.log</code> erhalte ich so ein <a href=\"http://lab.thomaspuppe.de/us-wahl-news-aufmacher/result.json\">JSON-File mit allen Ergebnissen</a> und ein umfangreiches Logfile des Scraping-Vorgangs.</p>\n<p>Zum Schluss robbe ich mittels PHP über das JSON-File und gebe die Inhalte als HTML-Tabelle aus. Das Ergebnis (weder für Mobilgeräte optimiert, noch für sonstwas) schaut so aus: <a href=\"http://lab.thomaspuppe.de/us-wahl-news-aufmacher/\">http://lab.thomaspuppe.de/us-wahl-news-aufmacher/</a></p>\n<h1 id=\"fazit-1-scrapy\">Fazit 1: Scrapy</h1>\n<p>Die Bedienung ist sehr einfach. Scrapy war eines der ersten Python-Frameworks, das ich problemlos installieren und benutzen konnte. Das liegt vielleicht an meiner wachsenden Python-Erfahrung, wahrscheinlich war viel Glück dabei, und auf jeden Fall bietet die Scrapy-Website einen super Einstieg samt funktionierendem Hello-World.</p>\n<p>Die Selektoren entsprechen im Grunde CSS-Selektoren. Womit mans chon sehr weit kommt. Die asynchronen yield-Aufrufe sind ein schöner Weg zur Parallelisierung der Anfragen. Der Output im JSON-Format kommt mir entgegen. Andere Varianten habe ich nicht getestet.</p>\n<p>Insgesamt war mein Test-Case ja sehr einfach. Da sieht man nciht viel vom Framework. Aber mein erster Eindruck ist gut. Auch, weil man im Netz jede Menge Doku und Rat zu Scrapy findet. Und es eine &quot;Scraping as a Servcie&quot; Anbindung gib, mit der man seine Scripte in die Cloud schießt und der Dienst <a href=\"https://scrapinghub.com/\">Scrapinghub</a> sich um das regelmäßige Crawling kümmert.</p>\n<h1 id=\"fazit-2-die-aufmacher\">Fazit 2: Die Aufmacher</h1>\n<p>Das Ergebnis kann man hier ansehen: <a href=\"http://lab.thomaspuppe.de/us-wahl-news-aufmacher/\">Aufmacher auf deutschen News-Websites zur US-Wahl</a> (Achtung: 4 MB groß). Die Legende zeigt die Farbcodes an. Per Mouseover sieht man den Titel. Die meisten Felder sind zum Artikel verlinkt. Zoomen funktioniert. Mobil sieht man was, aber Mouseover tut natürlich nicht.</p>\n<figure>\n    <img src=\"/images/2016/11/us-wahl-aufmacher.png\" alt=\"Screenshot der Visualisierung Aufmacher auf deutschen News-Websites zur US-Wahl\" />\n    <figcaption>Screenshot der Visualisierung</figcaption>\n</figure>\n\n<p>Was sieht man?</p>\n<p><em>Themen:</em> Am Freitag war die Türkei das dominante Aufmacherthema. Am Wochenende wechselte das über deutsche Politik auf die US-Wahl.</p>\n<p>Montag ging es um Clinton (das FBI und die E-Mails), wechselte dann zu allgemeiner/beidseitiger Berichterstattung.</p>\n<p>Dienstag hatten wir den ganzen Tag allgemeine (nicht auf einen kandidaten fokussierte) US-Wahl-Aufmacher, nur unterbrochen durch den &quot;Prediger ohne Gesicht&quot;. Ab dem Abend dann kippte es schon in Richtung Donald Trump (klickte wohl besser).</p>\n<p>Im Laufe der Nacht gab es zunächst allgemeine Wahlticker, bis es am Morgen dann natürlich zu Trump wechselte. Um Hillary Clinton ging es erst am Abend wieder, als sie vor die Presse trat.</p>\n<p>Die lokalen Zeitungen aus Berlin und der Lausitz haben lokale Themen und nationale Themen als Aufmacher. Pünktlich am Mittwoch schwenkten sie zur US-Wahl. Die Morgenpost zunächst mit einer Clinton-Party in Berlin.</p>\n<p>So weit, so erwartbar.</p>\n<p><em>Verfügbarkeit:</em> Alle betrachteten Angebote waren durchweg verfügbar. ZEIT Online hatte zur wichtigsten geplanten Nachrichtenlage des Jahres Aussetzer. Shame on us.</p>\n<p><em>Und sonst?</em></p>\n<ul>\n<li>Die Bild-Zeitung habe ich auch gecurlt, aber das ranzige HTML erwies sich als nicht vernünftig crawlbar. Nehmen wir mal an, das sei Absicht zu Zeiten des AdBlockerBlockings.</li>\n</ul>\n<h1 id=\"der-zieleinlauf\">Der Zieleinlauf</h1>\n<p>In dieser Reihenfolge wurde der Sieg Trumps verkündet (konkrete Aussage, ohne &quot;praktisch nicht mehr einholbar&quot; uns so):</p>\n<ul>\n<li>08:20 Uhr FAZ: <a href=\"http://www.faz.net/aktuell/politik/wahl-in-amerika/us-wahl-2016-ergebnisse-und-news-im-liveticker-14508839.html\">Liveticker zur Wahl: Donald Trump wird Präsident von Amerika</a></li>\n<li>08:35 Uhr Focus: <a href=\"http://www.focus.de/politik/ausland/us-wahlen-2016/us-wahlen-2016-im-live-ticker-trump-baut-fuehrung-aus-und-gewinnt-florida_id_6179418.html\">+++ US-Wahlen 2016 im Live-Ticker +++: Sie haben es so gewählt: Amerikaner machen Trump zu ihrem nächsten Präsidenten</a></li>\n<li>08:35 Uhr Lausitzer Rundschau: <a href=\"http://www.lr-online.de/us-ticker\">Die Präsidentschaftswahl in den USA im Liveticker - Donald Trump hat laut US-Medien die Wahl gewonnen</a></li>\n<li>08:40 Uhr Süddeutsche Zeitung: <a href=\"http://www.sueddeutsche.de/politik/us-wahl-us-medien-verkuenden-trumps-sieg-1.3233721\">US-Medien verkünden Trumps Sieg</a></li>\n<li>08:40 Uhr taz: <a href=\"http://www.taz.de/taz-Liveticker-zur-US-Wahl-2016/!5355525/\">Trump hat gewonnen - taz-Liveticker zur US-Wahl 2016</a></li>\n<li>08:40 Uhr Welt: <a href=\"https://www.welt.de/politik/ausland/article159356634/Donald-Trump-wird-45-Praesident-der-Vereinigten-Staaten.html\">Die Sensation ist perfekt - Donald Trump wird 45. Präsident der Vereinigten Staaten</a></li>\n<li>08:45 Uhr SPIEGEL: <a href=\"http://www.spiegel.de/politik/ausland/donald-trump-gewinnt-die-us-wahl-2016-a-1120397.html\">Vereinigte Staaten: Donald Trump gewinnt US-Präsidentschaftswahl</a></li>\n<li>08:45 Uhr ZEIT: <a href=\"http://www.zeit.de/politik/ausland/2016-11/wahl-usa-hillary-clinton-donald-trump-praesidentschaft-live\">Wahl in den USA - Hillary Clinton verliert US-Wahl</a></li>\n</ul>\n",
            "url": "https://blog.thomaspuppe.de/us-wahl-aufmacher-auf-news-websites",
            "title": "News-Aufmacher zur Präsidentenwahl in den USA",
            "summary": "Was war der Aufmacher auf deutschen News-Websites rund um das Wahl-Wochenende? Und wer hat den Sieger als erster verkündet?",
            "date_modified": "2016-11-09T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/spof-auf-news-websites",
            "content_html": "<p>Moderne Websites binden häufig Inhalte und Code von fremden Servern ein. Seien es Social-Media-Widgets, Tracking, oder Werbung. News-Websites verwenden all diese Dinge. Und damit ist die Verfügbarkeit und Geschwindigkeit der News-Website unter Umständen abhängig von der Verfügbarkeit und Geschwindigkeit der fremden Anbieter. Was diese Umstände sind, wie man sie erkennt, und ausschaltet, erkläre ich in diesem Artikel an einigen Beispielen.</p>\n<h1 id=\"was-ist-ein-spof-und-was-ist-daran-schlimm\">Was ist ein SPOF und was ist daran schlimm?</h1>\n<p>Ein &quot;Single Point of Failure&quot; (SPOF) ist ein Bestandteil eines Systems, dessen Ausfall das gesamte System beeinträchtigt. Auf einer Website heißt das: ein Element der Website, das die gesamte Seite beeinträchtigt, wenn es einen Fehler hat, langsam ist, oder überhaupt nicht verfügbar ist. Was eine &quot;Beeinträchtigung der Seite&quot; ist, darüber kann man streiten. Im Kontext dieses Artikels ist eine News-Website beeinträchtigt, wenn man keine Inhalte lesen kann.</p>\n<h1 id=\"wie-entsteht-so-etwas\">Wie entsteht so etwas?</h1>\n<p>Der SPOF kann auf einer Website an verschiedenen Stellen sitzen. Offensichtlich ist der Fall, dass der Server, der die HTML-Seiten ausliefert, nicht verfügbar ist. Dann gibt es schlicht keine Inhalte. Das ist der Worst Case, und es gibt Strategien dagegen, aber das soll hier nicht das Thema sein.</p>\n<p>Interessant sind die Situationen, in denen der eigentliche Inhalt &mdash; das HTML &mdash; sehr wohl verfügbar ist. Aber externe Scripte den schon geladenen Inhalt dann verzögern, beschädigen, oder blockieren. Ein nicht notwendiger Bestandteil der Seite blockiert also den wichtigen Teil. Das ist ärgerlich, weil unnötig. Diesen Fällen möchte ich mich hier widmen.</p>\n<h1 id=\"simulation-von-spof\">Simulation von SPOF</h1>\n<p>Die beschriebene Situation, dass ein externer Bestandteil &mdash; oder besser Zusatz &mdash; einer Website dieselbe lahmlegt, lässt sich künstlich simulieren.</p>\n<p>Steve Souders befasst sich in dem sehr guten Artikel &quot;<a href=\"https://www.stevesouders.com/blog/2010/06/01/frontend-spof/\">Frontend SPOF</a>&quot; mit SPOFs. Auch die Präsentation &quot;<a href=\"http://de.slideshare.net/patrickmeenan/frontend-spof\">Frontend SPOF</a>&quot; von Patrick Meenan beleuchtet das Problem und liefert einen tollen Trick, mit dem man einen beliebigen Server (genauer: Host) als kaputt simulieren kann. Und zwar über einen manipulierten DNS-Eintrag. Die Domain des zu testenden Hosts wird mittels der lokalen Hosts-Datei auf dem Testrechner ins Leere geführt. Man weist ihm einfach eine falsche IP-Adresse zu.</p>\n<p>Das kann entweder Localhost sein. In dem Fall würde der Request schnell fehlschlagen, meist mit Fehler 404. Das simuliert einen Third-Party-Server, der schnell mit einem Fehler antwortet. Oder man leitet den Request zum &quot;Blackhole-Service&quot; vom Webpagetest.org. Dieser Server antwortet einfach nicht auf Requests, und lässt diese somit in einen Timeout laufen. Damit simuliere ich, dass ein Third-Party-Server überlastet ist.</p>\n<p>Es gibt eine Extension für den Google-Chrome Browser, die auf SPOF hinweist und die jeweiligen Resourcen auch blockieren kann: <a href=\"https://chrome.google.com/webstore/detail/spof-o-matic/plikhggfbplemddobondkeogomgoodeg\">SPOF-O-Matic</a>. Damit lassen sich SPOF auch gut simulieren.</p>\n<h1 id=\"zur-sache-single-points-of-failure-auf-deutschen-news-websites\">Zur Sache: Single Points of Failure auf deutschen News-Websites</h1>\n<p>Für meinen Test habe ich acht deutsche Nachrichten-Websites herangezogen. Grundlage für meine Auswahl waren die Zugriffszahlen laut Statista, plus die taz aus eigenem Interesse.</p>\n<p>Mein Vorgehen: im jeweiligen Quellcode der Seite habe ich nach den beiden Triggern für blockierendes JavaScript gesucht: <code>document.write</code> und <code>&lt;script src=&quot;&quot;</code> ohne <code>async</code>.</p>\n<p>Von der Liste der gefundenen Dateien habe ich diejenigen ausgenommen, die unter der Domain der Zeitung selbst laufen. Auch wenn Subdomains in der Art <code>scripts.zeit.de</code> oder <code>code.bildstatic.de</code> vielleicht schon Third-Party sind (CDN bzw Proxy-Server zu einem anderen Hoster), habe ich das als selbst gehostet gewertet. Im Sinne von &quot;wenn das ausfällt, ist kein Fremder schuld sondern du selber&quot;.</p>\n<p>Die übrigen Hosts habe ich dann in meiner <code>/etc/hosts</code>-Datei blockiert, indem ich sie auf die IP des Webpagetest Blackhole schicke: <code>72.66.115.13    www.googletagmanager.com</code>. Das funktioniert auch in <a href=\"%22https://de.wikipedia.org/wiki/Hosts_(Datei)#Pfade_unter_verschiedenen_Betriebssystemen%22\">anderen Betriebssystemen</a>.</p>\n<h2 id=\"test-1-ivw-zählung\">Test 1: IVW Zählung</h2>\n<p>Es gibt eine Sache, die alle betrachteten Websites gemeinsam haben. Und zwar die &quot;IVW-Zählung&quot;. Die IVW ist die &quot;<a href=\"https://de.wikipedia.org/wiki/Informationsgemeinschaft_zur_Feststellung_der_Verbreitung_von_Werbetr%C3%A4gern\">Informationsgemeinschaft zur Feststellung der Verbreitung von Werbeträgern</a>&quot;. Sie erfasst die Reichweite vieler Medien, und dient damit nicht nur zur unabhängigen Zählung der Besucher, sondern auch zur Verteilung von Werbeerlösen.</p>\n<p>Da machen alle betrachteten Medien mit, und daher haben auch alle die Datei <code>https://script.ioam.de/iam.js</code> eingebunden. Was passiert also, wenn ich den Host <code>script.ioam.de</code> blockiere &mdash; oder er tatsächlich ausfällt bzw lahmt?</p>\n<table>\n    <thead>\n        <tr>\n            <td></td>\n            <td>Bild</td>\n            <td>Spiegel</td>\n            <td>Focus</td>\n            <td>Welt</td>\n            <td>Stern</td>\n            <td>SZ</td>\n            <td>taz</td>\n            <td>Zeit</td>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>IVW</td>\n            <td class=\"red\">blockiert</td>\n            <td class=\"red\">blockiert</td>\n            <td class=\"red\">blockiert</td>\n            <td class=\"green\">ok</td>\n            <td class=\"red\">blockiert</td>\n            <td class=\"red\">blockiert</td>\n            <td class=\"red\">blockiert</td>\n            <td class=\"red\">blockiert</td>\n        </tr>\n    </tbody>\n</table>\n\n<p>Alle Seiten bis auf welt.de bleiben weiß! Der Nutzer sieht keinen Inhalt, und nichts passiert solange das Zähl-Script der IWV geladen und ausgeführt wird. Wenn deren Server nicht antwortet, bleibt die News-Website also etliche Sekunden lang (bei meinen Tests im aktuellen Chrome 2 Minuten) weiß. Obwohl alle Inhalte eigentlich schon da sind.</p>\n<p>Auch unter besten Bedingungen hat das einen Performance-Impact. Bei meinen Tests benötigte das Script zwischen 35 und 180ms zum Laden. Jede Seite muss also immer warten. Meistens unmerklich. Erst wenn es Probleme beim Laden gibt, wird der Single Point of Failure zu einem Problem.</p>\n<p>Einzig die Welt lädt ihren Zählpixel asynchron und im Footer der Seite. Das heißt, auch wenn es beim Laden Probleme gibt, wird immerhin der gesamte Inhalt dargestellt.</p>\n<h2 id=\"test-2-google-analytics-und-google-tagmanager\">Test 2: Google Analytics und Google TagManager</h2>\n<p>Als nächstes habe ich mir die Standardtools von Google angesehen. Auch sie werden von fast allen Medien genutzt.</p>\n<table>\n    <thead>\n        <tr>\n            <td></td>\n            <td>Bild</td>\n            <td>Spiegel</td>\n            <td>Focus</td>\n            <td>Welt</td>\n            <td>Stern</td>\n            <td>SZ</td>\n            <td>taz</td>\n            <td>Zeit</td>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>Google Analytics</td>\n            <td>-</td>\n            <td class=\"green\">ok</td>\n            <td>-</td>\n            <td class=\"green\">ok</td>\n            <td class=\"green\">ok</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n        </tr>\n        <tr>\n            <td>Google TagManager</td>\n            <td>-</td>\n            <td>-</td>\n            <td class=\"green\">ok</td>\n            <td>-</td>\n            <td>-</td>\n            <td class=\"green\">ok</td>\n            <td>-</td>\n            <td class=\"green\">ok</td>\n        </tr>\n    </tbody>\n</table>\n\n<p>Da Google die Einbindung grundsätzlich asynchron empfiehlt, stellen diese Tools keinen SPOF dar. Und folglich spielen auch alle Dinge, die über den TagManager nachgeladen werden (zum Beispiel Analytics, das dann auch nicht mit betrachtet wird), keine Rolle mehr für die Untersuchung. Dass sie die korrekt geladene Seite dennoch wieder langsam machen und bis zur Unkenntlichkeit manipulieren können, ist hier nicht das Thema.</p>\n<h2 id=\"test-3-facebook-und-twitter\">Test 3: Facebook und Twitter</h2>\n<p>Einzig die Süddeutsche Zeitung bindet auf der Homepage direkt (ohne Umweg über den Google TagManager) Facebook und Twitter Krams ein. Beides aber nicht blockierend. Also kein SPOF.</p>\n<h2 id=\"test-4-chartbeat\">Test 4: Chartbeat</h2>\n<p>Chartbeat ist ein Tool, mit dem man live die Besucherstöme auf einer Website anschauen kann, samt Herkunft und Interaktionen.</p>\n<table>\n    <thead>\n        <tr>\n            <td></td>\n            <td>Bild</td>\n            <td>Spiegel</td>\n            <td>Focus</td>\n            <td>Welt</td>\n            <td>Stern</td>\n            <td>SZ</td>\n            <td>taz</td>\n            <td>Zeit</td>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>Chartbeat</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td class=\"green\">ok</td>\n            <td class=\"red\">blockiert</td>\n            <td>-</td>\n            <td>-</td>\n        </tr>\n    </tbody>\n</table>\n\n<p>Der Stern und die SZ binden Chartbeat auf ihrer Homepage ein. Und bieten ein schönes Beispiel dafür, dass der SPOF nicht zwingend durch den Drittanbieter verursacht wird, sondern man selbst durch die Art der Einbindung Einfluss darauf hat. Hat Chartbeat Probleme, reißt es die Süddeutsche mit rein. Der Stern lädt das Script asynchron, und ist damit nicht abhängig.</p>\n<h2 id=\"test-5-werbung\">Test 5: Werbung</h2>\n<p>Die Einbindung der Werbung ist sehr unterschiedlich gelöst. Und häufig über die eigenen Server. So werden Scripte gern mal blockierend eingebunden, auch über document.write, aber über eigene Domains (Beispielsweise <code>&lt;script type=&quot;text/javascript&quot; src=&quot;http://scripts.zeit.de/iqd/iqd_gzip_test.js.gz&quot;&gt;&lt;/script&gt;</code>). Diese Fälle lasse ich hier außen vor.</p>\n<table>\n    <thead>\n        <tr>\n            <td></td>\n            <td>Bild</td>\n            <td>Spiegel</td>\n            <td>Focus</td>\n            <td>Welt</td>\n            <td>Stern</td>\n            <td>SZ</td>\n            <td>taz</td>\n            <td>Zeit</td>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>Werbung</td>\n            <td class=\"red\">blockiert</td>\n            <td class=\"red\">blockiert</td>\n            <td class=\"green\">ok</td>\n            <td class=\"green\">ok</td>\n            <td class=\"green\">ok</td>\n            <td class=\"red\">blockiert</td>\n            <td class=\"green\">ok</td>\n            <td class=\"green\">ok</td>\n        </tr>\n    </tbody>\n</table>\n\n<p>Wieder einmal macht es die Welt richtig. Sie benutzt den gleichen Werbeserver wie die Bild, aber bindet das Script asynchron ein (es gibt einen Feature-Toggle: offenbar werden synchron und asynchron verglichen).</p>\n<p>Auf verschiedene Wege verhindern auch andere Seiten den SPOF: Der Stern lädt das Werbescript asynchron und vom eigenen Server. Die Zeit blockierend vom eigenen Server. Die taz asynchron von fremden Servern.</p>\n<p>Bei Bild, Spiegel und Süddeutscher Zeitung leidet die Website, wenn das Werbenetzwerk langsam antwortet.</p>\n<h1 id=\"sonstige-beobachtungen\">Sonstige Beobachtungen</h1>\n<ul>\n<li>Bild.de bindet am meisten blockierende Scripte ein. Das umfasst eigene nicht zusammengefassten Scripte (über eigene Domains), verschiedenen Werbeserver,  Content-Marketing-Gedöns (&quot;Outbrain&quot;, dieselbe Datei mehrfach geladen), und nicht zuletzt den AdBlocker-Blocker. Eines der Werbe-Scripte wird auf Artikeln blockierend eingebunden, auf der Homepage jedoch asynchron.</li>\n<li>Ein Ausfall von <code>ec-ns.sascdn.com</code> für bild.de löst den AdBlocker-Blocker aus und zeigt den Nutzern einen Hinweis, man möge doch bitte seinen AdBlocker ausschalten.</li>\n<li>Das Tracking-Script &quot;Meetrics&quot; auf ZEIT Online ist blockierend eingebunden, aber im Fuß der Seite. Damit wird bei einem Ausfall das Rendern der Seite angehalten. Aber eben nur das Rendern des Seitenfußes. Der gesamte Inhalt, der vorher im HTML steht, ist sichtbar.</li>\n<li>Die Süddeutsche und die Welt betreiben Real User Monitoring für Frontend Performance mittels <code>window.performance.mark</code>. Das ist eigentlich ein alter Hut, aber bei News-Websites sind sie damit Vorreiter.</li>\n<li>Der Google Chrome Browser wird in Zukunft bei mobilen Datenverbindungen (2G) von selbst Scripte ignorieren, die blockierend von einem langsamen Netzwerk geladen werden: <a href=\"https://developers.google.com/web/updates/2016/08/removing-document-write\">Intervening against document.write()</a>.</li>\n</ul>\n<h1 id=\"zusammenfassung\">Zusammenfassung</h1>\n<table>\n    <thead>\n        <tr>\n            <td></td>\n            <td>Bild</td>\n            <td>Spiegel</td>\n            <td>Focus</td>\n            <td>Welt</td>\n            <td>Stern</td>\n            <td>SZ</td>\n            <td>taz</td>\n            <td>Zeit</td>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>IVW</td>\n            <td class=\"red\">blockiert</td>\n            <td class=\"red\">blockiert</td>\n            <td class=\"red\">blockiert</td>\n            <td class=\"green\">ok</td>\n            <td class=\"red\">blockiert</td>\n            <td class=\"red\">blockiert</td>\n            <td class=\"red\">blockiert</td>\n            <td class=\"red\">blockiert</td>\n        </tr>\n        <tr>\n            <td>Google Analytics</td>\n            <td>-</td>\n            <td class=\"green\">ok</td>\n            <td>-</td>\n            <td class=\"green\">ok</td>\n            <td class=\"green\">ok</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n        </tr>\n        <tr>\n            <td>Google TagManager</td>\n            <td>-</td>\n            <td>-</td>\n            <td class=\"green\">ok</td>\n            <td>-</td>\n            <td>-</td>\n            <td class=\"green\">ok</td>\n            <td>-</td>\n            <td class=\"green\">ok</td>\n        </tr>\n        <tr>\n            <td>Chartbeat</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td class=\"green\">ok</td>\n            <td class=\"red\">blockiert</td>\n            <td>-</td>\n            <td>-</td>\n        </tr>\n        <tr>\n            <td>Werbung</td>\n            <td class=\"red\">blockiert</td>\n            <td class=\"red\">blockiert</td>\n            <td class=\"green\">ok</td>\n            <td class=\"green\">ok</td>\n            <td class=\"green\">ok</td>\n            <td class=\"red\">blockiert</td>\n            <td class=\"green\">ok</td>\n            <td class=\"green\">ok</td>\n        </tr>\n    </tbody>\n</table>\n\n<p>Mit ihrer Ansage, durch den Relaunch im September 2016 die schnellste News-Website in Deutschland zu werden, meinte die Welt es ernst. Best Practices wurden offenbar konsequent verfolgt, notfalls auch um den Preis von IVW-Zählungen (so meine Vermutung). Dass Lade- und Render-Zeiten von verschiedenen Punkten auf der Website mittels <code>window.performance.mark</code> gemessen werden, deutet auf eine genaue Beobachtung der Performance hin &mdash; was überhaupt erst einmal die Grundlage einer vernünftigen Optimierung ist.</p>\n<p>Die Bild hingegen verfolgt das Gegenteil. Hier gibt es viel Blocking, zum Beispiel vom Clickbait-Inhalte-Lieferanten Outbrain, und einen AdBlocker-Blocker, der bei Versagen des ThirdParty Servers zu unrecht anspringt.</p>\n<p>Wenn ohne Werbung auch kein Inhalt geliefert wird, kann das vielleicht verargumentiert werden &mdash; schließlich werden AdBlocker-Blocker genau mit dieser Begründung gerechtfertigt.</p>\n<p>Dass aber ein Tracking-Tool wie Chartbeat oder eine Bibliothek wie jQuery in der Lage ist, die Webseite lahmzulegen, ist ein leicht zu vermeidendes Desaster. Und kein theoretisches: <a href=\"https://twitter.com/the_jsf/status/529302161499619328\">jQuery</a>, <a href=\"https://twitter.com/SCsupport/status/789546288530403328\">SoundCloud</a>.</p>\n<h1 id=\"one-more-thing\">One more thing</h1>\n<p>Bitte nicht vergessen, die Tracking-Domains aus der Hosts-Datei zu entfernen. Wäre doch schade, wenn die Scripte nicht mehr geladen würden.</p>\n<pre># Tracker-Blocking\n127.0.0.1       www.googletagmanager.com\n127.0.0.1       www.google-analytics.com\n127.0.0.1       widgets.outbrain.com\n127.0.0.1       connect.facebook.net\n127.0.0.1       platform.twitter.com\n127.0.0.1       static.chartbeat.com\n</pre>\n",
            "url": "https://blog.thomaspuppe.de/spof-auf-news-websites",
            "title": "Single Point Of Failure auf News-Websites",
            "summary": "Kaputte Third-Party Scripts können Websites lahmlegen. Ich untersuche einige Nachrichten-Websites auf deren Robustheit gegen dieses Problem.",
            "date_modified": "2016-10-31T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/inodes-linux-festplatte-voll",
            "content_html": "<p>Kürzlich fiel mein <a href=\"http://www.bundestwitter.de\">Bundestwitter</a>-Server aus. Bei der Suche nach der Ursache habe ich einige neue Dinge über Linux gelernt, die ich hier dokumentieren möchte.</p>\n<p>Die Tweet-Sammel-Cronjobs auf meinem Linux (Ubuntu) Server meldeten sich, dass sie keine Daten mehr schreiben könnten. Ich kenne das Problem schon, wenn zu viele Logs und Backups herumliegen ohne aufgeräumt zu werden.</p>\n<p>Diesmal allerdings sagt <code>df -h</code>, es sei noch ordentlich Platz auf der Platte frei:</p>\n<pre>\nSize    Used    Avail    Use%\n 77G     50G      28G    65%</pre>\n\n<p>Nach kurzer Recherche stieß ich darauf, dass nicht nur der Platz auf der Festplatte begrenzt ist, sondern auch die maximale Zahl der Dateien. Wikipedia sagt:</p>\n<blockquote>\n<p>Die Anzahl der möglichen Inodes und somit der möglichen Dateien ist bei manchen Dateisystemen beschränkt; wird die Maximalanzahl erreicht, lassen sich keine weiteren Dateien anlegen.</p>\n<p>&mdash; <a href=\"https://de.wikipedia.org/wiki/Inode#Praxis\">Wikipedia: Inode</a></p>\n</blockquote>\n<p>Also: <code>df -i</code>.</p>\n<pre>\n Inodes      IUsed   IFree    IUse%\n1000000    1000000       0     100%</pre>\n\n<p>Eine Lösung könnte darin bestehen, die Festplatte neu zu formatieren und die Zahl der möglichen Inodes höher festzulegen. Ob das bei meinem 1und1 VirtualServer so einfach möglich ist, ist fraglich. Zunächst möchte ich aber wissen, wo diese vielen Dateien liegen und woher sie kommen. Bundestwitter legt zwar viele Logfiles für Tweets an, aber diese werden regelmäßig gepackt, heruntergeladen und vom Server gelöscht. Sie erklären die volle Platte vermutlich nicht.</p>\n<p>Ich suche also einen Befehl, der mir zeigt, in welchen Verzeichnissen viele Inodes verbraucht werden. Google ist mein Freund:</p>\n<p><code>find /var/www/ -xdev -printf &#39;%h\\n&#39; | sort | uniq -c | sort -k 1 -n</code></p>\n<p>... listet alle Folder und subfolder mit der Zahl ihrer enthaltenen Inodes auf. Was ggf. sehr lang wird &mdash; in meinem Fall knapp 2000 Einträge:</p>\n<pre>\n1       /var/www/blog_thomaspuppe_de/assets\n[... 2000 weitere Einträge ...]\n2563    /var/www/bundestwitter/cache/www_bundestwitter_de/connectionStatistics</pre>\n\n<p>Das hilft also nur bei überschaubarer Ordnertiefe. Besser ist dieser Befehl, der die Anzahl der Inodes in einem Verzeichnis (oder in jedem Unterverzeichnis) zeigt:</p>\n<p><code>for i in /var/www/*; do echo $i; find $i | wc -l | sort ; done</code> (ohne &quot;/*&quot; für das einzelne Verzeichnis):</p>\n<pre>\n104      /var/www/blog_thomaspuppe_de\n76266    /var/www/bundestwitter\n2        /var/www/html\n1371     /var/www/lab_thomaspuppe_de\n32748    /var/www/socialmediapolitik\n2        /var/www/thomas_works\n3        /var/www/www_meetingtimer_biz\n101      /var/www/www_thomaspuppe_de\n</pre>\n\n<p>Es zeigt sich, dass Bundestwitter nicht der Verursacher ist. Aber mit dem genannten Befehl kann ich nun die Ordner des Root-Verzeichnisses auflisten ...</p>\n<pre>sudo su #(um sich eine Menge \"Permission denied\" Meldungen zu sparen)\nfor i in /*; do echo $i; find $i | wc -l | sort ; done</pre>\n\n<p>... zeigt, dass die allermeisten Inodes in <code>/var</code> verbraucht werden. (Warum in <code>proc</code> so viel los ist, wird Gegenstand einer anderen Untersuchung sein.)</p>\n<pre>\n16        /home\n22271     /proc\n29687     /usr\n953965    /var\n</pre>\n\n<p>Von hier aus kann ich mich mit dem Befehl <code>for i in /var/*; do echo $i; find $i | wc -l | sort ; done</code> usw. fortbewegen.</p>\n<pre>\n662       /var/log\n836952    /var/spool\n112120    /var/www\n</pre>\n\n<p>In <code>/var/spool</code> liegt also sehr viel Zeugs. Dies ist das &quot;Verzeichnis für abzuarbeitende Warteschlangen (Druckaufträge, E-Mail-Versandaufträge …)&quot;\n(<a href=\"https://de.wikipedia.org/wiki/Filesystem_Hierarchy_Standard\">Wikipedia</a>).</p>\n<p>Mit der bekannten Technik taste ich mich weiter voran und stoße auf ein Verzeichnis, in dem fast alle Dateien liegen:</p>\n<pre>836836    /var/spool/postfix/maildrop</pre>\n\n<p>Das sind also felgeschlagene Versuche des Systems, E-Mails zu versenden. Stichproben (<code>cat /var/spool/postfix/maildrop/D7E6A90D4CA9</code>) ergeben, dass meine Cronjobs versuchen, Mails zu versenden.</p>\n<h3 id=\"ich-habe-also-meinen-übeltäter-nun-geht-es-ans-aufräumen\">Ich habe also meinen Übeltäter. Nun geht es ans Aufräumen.</h3>\n<p>Die erste Maßnahme, für den Seelenfrieden, ist natürlich</p>\n<pre>sudo rm -rf /var/spool/postfix/maildrop/*\nbash: /bin/rm: Argument list too long</pre>\n\n<p>Eine schnelle Suche führt mich auf`<a href=\"http://www.sysadminslife.com/linux/bash-binrm-die-argumentliste-ist-zu-lang/\">sysadminslife.com</a>, wo folgender Befehl vorgeschlagen wird:</p>\n<pre>find -type f -print0 | xargs -0 rm</pre>\n\n<p>An der Stelle möchte ich Explainshell erwähnen. Eine Website, die Shell-Befehle aufdröselt und die einzelnen Bestandteile erklärt. <a href=\"http://explainshell.com/explain?cmd=find+-type+f+-print0+%7C+xargs+-0+rm\">http://explainshell.com/explain?cmd=find+-type+f+-print0+%7C+xargs+-0+rm</a></p>\n<p>Ta dah:</p>\n<pre>$ ls /var/spool/postfix/maildrop | wc -l\n14\n\n$ df -i\nInodes      IUsed     IFree    IUse%\n1000000    143491    856509      15%\n</pre>\n\n\n<p>Es bleibt die Frage: Wie vermeide ich, dass die Ausführung der Cronjobs Mails erzeugt (die dann in der Spool Queue landen)?</p>\n<p><a href=\"http://www.cyberciti.biz/faq/disable-the-mail-alert-by-crontab-command/\">http://www.cyberciti.biz/faq/disable-the-mail-alert-by-crontab-command/</a>:</p>\n<blockquote>\n<p>The crontab command is used to maintain crontab files for individual users. By default the output of a command or a script (if any produced), will be email to your local email account.</p>\n</blockquote>\n<p>Die einfachste Methode, dies zu verhindern, ist die Zeile <code>MAILTO=&quot;&quot;</code> an den beginn der Crontab-Datei (<code>crontab -e</code>) zu schreiben. Damit werden alle Cron-Mails aus diesr Datei unterdrückt. Alternativ kann man auch pro Zeile den Versand von Mails verhintern durch den Output nach /dev/null: <code>0 1 5 10 * /path/to/script.sh &gt; /dev/null</code>.</p>\n<p>Kleines Extra: In Zukunft möchte ich eine Warnung erhalten, wenn der Plattenplatz (oder die Inodes) zur Neige gehen. Der Test dafür ist leicht geschrieben (siehe oben), und einen Mechanismus zur Benachrichtigung habe ich schon für andere Zwecke. Und zwar benutze ich den Service und die App von <a href=\"https://www.pushover.net\">Pushover: Simple Notifications for Android, iOS, and Desktop</a> und <a href=\"https://deadmanssnitch.com/\">Dead Man&#39;s Snitch — A dead simple cron job monitoring tool</a>.</p>\n",
            "url": "https://blog.thomaspuppe.de/inodes-linux-festplatte-voll",
            "title": "Inodes im Linux: Volle Festplatte, obwohl noch Platz ist?",
            "summary": "Kürzlich fiel mein Bundestwitter-Server aus. Bei der Suche nach der Ursache habe ich einige neue Dinge über Linux gelernt, die ich hier dokumentieren möchte.",
            "date_modified": "2016-10-18T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/front-trends-2016-warsaw-day-three",
            "content_html": "<p>Summarizing the third day presentations of the Front Trends 2016 conference in Warsaw, including the Nyan cat, pixel bonding, modern(izer) tools, CSS engineering principles, Origami, offline pages, real programmers and Trojan CVs.. A speakers list can also be found on <a href=\"https://2016.front-trends.com/speakers/\">2016.front-trends.com/speakers/</a>.</p>\n<figure>\n    <img src=\"/images/2016/05/front-trends-emotions.jpg\" alt=\"Photograph of a slide with Nyan Cat\"/>\n    <figcaption>If an interface is more human, it allow us to be more human.<br>&mdash;Tammie Lister</figcaption>\n</figure>\n\n\n<h2 id=\"opening-by-staś-małolepszy\">Opening by <a href=\"https://twitter.com/stas\">Staś Małolepszy</a></h2>\n<p>Trigger a bit of interest, be available to help. And many cool things will happen.</p>\n<ul>\n<li><a href=\"https://www.scirra.com/construct2\">Construct 2</a>: HTML5 game maker</li>\n</ul>\n<h2 id=\"exploring-the-universal-library-by-szymon-kalinski\">Exploring the Universal Library by <a href=\"http://treesmovethemost.com/\">Szymon Kalinski</a></h2>\n<p>Szymon showed some work he had done. It looked <a href=\"http://treesmovethemost.com/\">really cool</a>, but honestly I don&#39;t know what he wanted to tell us ;-)</p>\n<h2 id=\"pixel-bonding-by-tammie-lister\">Pixel Bonding by <a href=\"http://diaryofawebsite.com/\">Tammie Lister</a></h2>\n<p>People long for connection with others. By creating emotional UX and positive experience, you create trust and users will come back.</p>\n<p>As a user, you recognize if an interface (the people behind it) care for you, or simply don&#39;t care. For example, friends don&#39;t let friends make mistakes.</p>\n<p>Even little UI eastereggs can be incredibly delightful. But don&#39;t get creepy. Nobody likes stalker interfaces.</p>\n<blockquote>\n<p>If an interface is more human, it allow us to be more human.</p>\n</blockquote>\n<ul>\n<li>Slides of the Presentation: <a href=\"https://speakerdeck.com/tammielis/pixel-bonding\">Pixel Bonding</a>, including lots of cool interface details.</li>\n<li>Tammies Twitter Account: <a href=\"https://twitter.com/karmatosed\">karmatosed</a></li>\n</ul>\n<h2 id=\"modern-websites-for-the-modern-web-by-patrick-kettner\">Modern Websites for the Modern Web by <a href=\"https://twitter.com/PatrickKettner\">Patrick Kettner</a></h2>\n<p>Use of tools inside the new version of the Modernizr website and downloader: Service workers, clipboard.js, download binary blobs of service-worker-generated files, <a href=\"https://twitter.com/thomaspuppe/status/733603489067245568\">decent markup</a>, custom Modernizr versions via npm install,</p>\n<blockquote>\n<p>Make cool stuff. Don&#39;t be afraid to use new shiny things.</p>\n</blockquote>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=UPrlA8I9dm8\">Video of this talk</a> (at JSConf US)</li>\n</ul>\n<h2 id=\"css-for-software-engineers-for-css-developers-by-harry-roberts\">CSS for Software Engineers for CSS Developers by <a href=\"https://twitter.com/csswizardry\">Harry Roberts</a></h2>\n<p>Harry applies software engineering principles to CSS development: DRY, Single Source of Truth, Single Responsibility, Seperation of Concerns(!), Immutability, Open/Closed Principle,</p>\n<p>Good and funny talk with lots of code examples. One of the <a href=\"front-trends-2016-warschau-fazit\">conference highlights</a>!</p>\n<blockquote>\n<p>There are 6,442,450,944 possible combinations of s sandwich at Subways. And all taste the same.</p>\n</blockquote>\n<ul>\n<li><a href=\"https://speakerdeck.com/csswizardry/css-for-software-engineers-for-css-developers\">Presentation slides</a></li>\n<li>two <a href=\"https://vimeo.com/140641366\">video</a> <a href=\"https://vimeo.com/153895841\">recordings</a> of this talk</li>\n<li>You should take 10 minutes and read about <a href=\"https://en.wikipedia.org/wiki/Grace_Hopper\">Grace Hopper</a>.</li>\n</ul>\n<h2 id=\"cant-you-make-it-more-like-bootstrap-by-alice-bartlett\">Can&#39;t you make it more like Bootstrap? by <a href=\"http://alicebartlett.co.uk/\">Alice Bartlett</a></h2>\n<p>Subtitle: &quot;Considerations for building front end systems&quot;. Alice leads a team whose aim is to unify and DRY frontend work at the Financial Times (project &quot;Origami&quot;.</p>\n<p>On the different FT branded websites, there are a lot of things which have been implemented differently, even on atomic scale (4 implementations of a close button which looks the same, 3 different Twitter icons).</p>\n<p>First step was to use components to keep HTML, CSS, JS for one thing in one place (this seems to be a hot topic this year).</p>\n<p>The websites also have different tooling, which should be unified so all websites (implemented in different languages) can use the same components.</p>\n<p>You can move the JS to bower packages, for example. But for (customizable) HTML templates or CSS ths is more complicated. So they implemented a build service that &quot;everyone&quot; can use to request Origamis CSS, JS and HTML. People liked using it, but the documentation was not good. -&gt; I wish it was more like bootstrap.</p>\n<p>And: they created a documentation styleguide(!), whcih includes a communication plan for new releases, incident reports, ...</p>\n<blockquote>\n<p>Documentation is not complicated. It is just hard.</p>\n</blockquote>\n<ul>\n<li>Alice Bartlett on Twitter: [@alicebartlett](<a href=\"https://twitter.com/alicebartlett\">https://twitter.com/alicebartlett</a></li>\n<li>talk recommendation: &quot;Thingness&quot; Mark Boulton (should be on vimeo, but I could not find the link)</li>\n<li><a href=\"https://github.com/financial-times/ft-origami\">Origami on GitHub</a></li>\n</ul>\n<h2 id=\"building-an-offline-page-for-the-guardian-oliver-joseph-ash\">Building an Offline Page for The Guardian <a href=\"https://oliverjash.me/\">Oliver Joseph Ash</a></h2>\n<p>The Guardian&#39;s Native app caches articles offline, to provide content even if the user (or the servers) are offline. The website is not available offline. Oliver built a prototype for an offline page in less than a day! And provided a detailes step-by-step walkthrough on how it works.</p>\n<ul>\n<li>Oliver Ashs Twitter Account: <a href=\"https://twitter.com/oliverjash\">@oliverjash</a></li>\n<li><a href=\"https://speakerdeck.com/oliverjash/building-an-offline-page-for-theguardian-dot-com-front-trends-may-2016\">The slides</a> of this talk</li>\n<li>This talk on video: <a href=\"https://www.youtube.com/watch?v=dZU6_2xXeVk\">Building an offline page for theguardian.com</a></li>\n<li><a href=\"https://www.theguardian.com/info/developer-blog\">the Guardian&#39;s digital development team blog</a></li>\n</ul>\n<h2 id=\"the-myth-of-the-real-javascript-programmer-by-brenna-obrian\">The Myth of the &quot;Real JavaScript Programmer&quot; by <a href=\"http://brennaobrien.com/\">Brenna O&#39;Brian</a></h2>\n<p>Great talk about what seems to be expected from &quot;good programmers&quot; today, and what really is.</p>\n<p>We don&#39;t need to know everything, finding a niche is cool. This is not a test. Real developers use resources wisely. Code has not to be perfect or even correct on the first try (or at all). Learn from mistakes. Show your work, not only your finished and polishes products. Encourage each other. We don&#39;t have to code all the day and everyday. Being a developer does not have to kill your hobbies (or parentship).</p>\n<blockquote>\n<p>My biggest professional development was admitting what I don&#39;t know.\n&mdash; Jessica Rose</p>\n</blockquote>\n<ul>\n<li>Brenna O&#39;Brian on Twitter: <a href=\"https://twitter.com/brnnbrn\">@brnnbrn</a></li>\n<li>Slides should come up <a href=\"http://brennaobrien.com/speaking/\">here</a> soon, a <a href=\"http://talks.brennaobrien.com/real-developer/myth-of-the-real-javascript-developer.pdf\">pdf version</a> is already available.</li>\n<li>Hashtag <a href=\"https://twitter.com/search?q=%23juniordevforlife\">#juniordevforlife</a></li>\n</ul>\n<h2 id=\"dont-hate-the-player-hate-the-game-by-tim-holman\">Don&#39;t hate the player, hate the game by <a href=\"http://tholman.com/\">Tim Holman</a></h2>\n<blockquote>\n<p>please be less ridiculous</p>\n</blockquote>\n<ul>\n<li>Tims Twitter: <a href=\"https://twitter.com/twholman\">@twholman</a></li>\n<li>Tims website: <a href=\"http://tholman.com/\">tholman.com</a></li>\n<li>Some <a href=\"http://slides.com/tholman/\">funny presentations</a>, todays not included</li>\n</ul>\n<blockquote>\n<p>Creativity is the best motivator.\nProjects are a journey, be fluid.\n&mdash; Tim Holman</p>\n</blockquote>\n",
            "url": "https://blog.thomaspuppe.de/front-trends-2016-warsaw-day-three",
            "title": "Front Trends 2016 in Warsaw: Day 3",
            "summary": "Summarizing the third day presentations of the Front Trends 2016 conference in Warsaw, including the Nyan cat, pixel bonding, modern(izer) tools, CSS engineering principles, Origami, offline pages, real programmers and Trojan CVs.",
            "date_modified": "2016-05-20T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/front-trends-2016-warsaw-day-two",
            "content_html": "<p>Summarizing the second day presentations of the Front Trends 2016 conference in Warsaw. Todays talks were about components, digital afterlife, tiny JS, typography, knitting and frontend tooling. A speakers list can also be found on <a href=\"https://2016.front-trends.com/speakers/\">2016.front-trends.com/speakers/</a>.</p>\n<figure>\n    <img src=\"/images/2016/05/warschau-panorama.jpg\" alt=\"beautiful city of Warsaw\" />\n    <figcaption>beautiful Warsaw</figcaption>\n</figure>\n\n\n<h2 id=\"first-class-styles-by-mark-dalgleish\">First Class Styles by <a href=\"http://markdalgleish.com/\">Mark Dalgleish</a></h2>\n<p>The first talk was very technical, but on an abstract level. Todays tooling handles HTML, Images, JS, CSS seperately (seperate tasks in Grunt or Gulp), and the connecteion between them has to be maintained by the developer (by using the same names e.g.). It would be better to have everything which belongs to one component in one place (including CSS which might be written in JS and served inline). Another hot thing: server-side rendering of the HTML. (sic!)</p>\n<p>My instant reaction: <em>WTF?</em> This is wrong on so many levels! But Mark presented good arguments (the strongest: it works in production on a big app) that I will take some time reading his blog posts.</p>\n<ul>\n<li>Twitter: <a href=\"https://twitter.com/markdalgleish\">@markdalgleish</a></li>\n<li>Blogpost: <a href=\"https://medium.com/seek-ui-engineering/block-element-modifying-your-javascript-components-d7f99fcab52b#.mc6l5gsx6\">Block, Element, Modifying Your JavaScript Components</a></li>\n<li>Blogpost: <a href=\"https://medium.com/seek-ui-engineering/the-end-of-global-css-90d2a4a06284#.ppl4ol45r\">The End of Global CSS</a></li>\n<li><a href=\"https://github.com/css-modules\">css-modules</a> on GitHub</li>\n</ul>\n<h2 id=\"our-eternal-digital-afterlife-by-alberta-soranzo\">Our eternal digital afterlife by <a href=\"https://twitter.com/albertatrebla\">Alberta Soranzo</a></h2>\n<p>Peoples social media profiles are still available when they pass away. Alberta Soranzo explained what tools and strategies (not yet dead) people and their relatives can do. Very moving and widespread talk.</p>\n<blockquote>\n<p>We need to design offboarding.</p>\n</blockquote>\n<ul>\n<li>Film recommendation: Black Mirror, Season 02, Episode 01: &quot;be right back&quot;</li>\n</ul>\n<h2 id=\"demo-reel--tiny-javascript-by-mathieu-henry\">Demo Reel &amp; Tiny JavaSCript by <a href=\"http://www.p01.org/\">Mathieu Henry</a></h2>\n<p>The creative coder and code golfer did exactly this: vanilla JS coding of a cool visualization with sound in just a few lines. First some dirty tricks, then some jawdropping live coding.</p>\n<ul>\n<li>check <a href=\"http://www.p01.org/\">Henrys Website</a> with really cool stuff!</li>\n</ul>\n<h2 id=\"syntax-highlight-everything-by-kenneth-ormandy\">Syntax Highlight Everything by <a href=\"https://twitter.com/kennethormandy\">Kenneth Ormandy</a></h2>\n<blockquote>\n<p>Syntax highlighting is designed.</p>\n</blockquote>\n<p>Starting with features of syntax highlighting and code fonts, Kenneth explains some typographic features (kerning, ligatures, case-sensitive fonts, small caps) and how to use them correctly in your CSS. The best part: you can just copy and use it from <a href=\"http://utility-opentype.kennethormandy.com/\">utility-opentype.kennethormandy.com</a>.</p>\n<ul>\n<li>eBook recommendation: <a href=\"http://practicaltypography.com/\">Butterick&#39;s Practical Typography</a></li>\n</ul>\n<h2 id=\"lightning-talks\">Lightning Talks</h2>\n<p><a href=\"http://www.maciejkorsan.com/\">Marciej Korsan</a>: Frontend is an art (an ukulele song!!!!).</p>\n<p><a href=\"http://ramonvictor.github.io/\">Ramon Vicor</a>: Redux principles in plain JavaScript. A talk about the principles of Redux. There is a blog post which covers the same topic: <a href=\"https://medium.com/@ramonvictor/tic-tac-toe-js-redux-pattern-in-plain-javascript-fffe37f7c47a#.2jrpb9qnr\">Tic-Tac-Toe.js: redux pattern in plain javascript</a>.</p>\n<p>Keith: Tech Addiction in Aeroplane Mode: A coping strategy. tl;dr: Have fun with yourself and unconscious passengers!</p>\n<p><a href=\"https://www.twitter.com/michaelhans_pl\">Michael Hans</a>, <a href=\"https://www.twitter.com/ZasadaKamil\">Kamil Zasada</a>: API First. Customer says &quot;We need something. Dont know what. Can you show something this week?&quot; <a href=\"http://www.raml.com\">RESTful API TODO</a>. API contracts are created before any actual code is written. This way, QA can start running tests against it while DEV is programming. Also, FE can programm a SPA against dummy/mockup endpoints.</p>\n<p><a href=\"https://www.twitter.com/RachelNabors\">Rachel Nabors</a>: Creatures of the Deep, featuring great illustrations from the <a href=\"http://devtoolschallenger.com/\">DevToolsChallenger.com</a> !</p>\n<h2 id=\"computer-assisted-arts-and-crafts-by-mariko-kosaka\">Computer Assisted Arts and Crafts by <a href=\"https://twitter.com/kosamari\">Mariko Kosaka</a></h2>\n<p>After hacking her knitting mashine, Mariko Kosaka started experimenting with electric circuits. On stage, she showed cool demos with metallic tape on paper, pen lead as resistor, yarn as dimmer switch, ... and blowing bulbs :-)</p>\n<ul>\n<li><a href=\"https://github.com/kosamari/IoT-Boilerplate\">Boilerplate to create Node.js IoT system with Arduino and Socket.io</a></li>\n</ul>\n<h2 id=\"taking-over-the-web-platform-with-angular-2-by-todd-motto\">Taking over the web platform with Angular 2 by <a href=\"https://twitter.com/toddmotto\">Todd Motto</a></h2>\n<p>A walk through Angular 2 architecture, (web) components, dataflow.</p>\n<h2 id=\"panel-discussion-the-state-of-front-end-tooling\">Panel Discussion: The State of Front-End Tooling</h2>\n<p><em>It is hard to cover a discussion, so I just post a few questions to think about.</em></p>\n<ul>\n<li>Today, is it harder to get into FE Development than ten years ago?</li>\n<li>What features do you think are still missing on the web platform?</li>\n<li>In our industry: How much is healthy competition, how much is fighting/arguing?</li>\n<li>How important is it for companies to build own tools? Or to use available solutions?</li>\n<li>What do you think about the responsibilities of big companies using Open Source software, and the authors which suddenly have a huge company depending on them?</li>\n</ul>\n<p><em>...and a few thoughts from the panel:</em></p>\n<ul>\n<li>Even for small things, we need a packet manager and a build process. You can still open and save a text file, reload the browser, and see results. But what you find on the web is more intimidating than in the past.</li>\n<li>Today, (some!) people learn Angular but downt know what the script-Tag does ona a page.</li>\n<li>You constantly have to fight holy wars over which tools to use.</li>\n<li>Rewriting just for the sake is a good thing on your own projects/money. But on clients cost there should be a business value which justifies refactoring.</li>\n</ul>\n<hr>\n<p>Next read: <a href=\"/front-trends-2016-warsaw-day-three\">Front Trends 2016 in Warsaw: Day 3</a></p>\n",
            "url": "https://blog.thomaspuppe.de/front-trends-2016-warsaw-day-two",
            "title": "Front Trends 2016 in Warsaw: Day 2",
            "summary": "Summarizing the second day presentations of the Front Trends 2016 conference in Warsaw. Todays talks were about components, digital afterlife, tiny JS, typography, knitting and frontend tooling.",
            "date_modified": "2016-05-19T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/front-trends-2016-warsaw-day-one",
            "content_html": "<p>Summarizing the first day presentations of the Front Trends 2016 conference in Warsaw. Covering pranks, animations, static sites, RxJS, performance, and leadership. A speakers list can also be found on <a href=\"https://2016.front-trends.com/speakers/\">2016.front-trends.com/speakers/</a>.</p>\n<figure>\n    <img src=\"/images/2016/05/front-trends-venue.jpg\" alt=\"The venue: Warsaws Star Club\" />\n    <figcaption>The venue: Warsaws Star Club</figcaption>\n</figure>\n\n<h2 id=\"opening-by-tim-holman\">Opening by <a href=\"https://twitter.com/twholman\">Tim Holman</a></h2>\n<ul>\n<li>Fun with <a href=\"http://slides.com/tholman/css-pranks/#/\">CSS pranks</a></li>\n</ul>\n<h2 id=\"keynote-the-web-in-motion-by-rachel-nabors\">Keynote: The Web in Motion by <a href=\"https://twitter.com/RachelNabors\">Rachel Nabors</a></h2>\n<p>Rachel talked about Apps vs Websites, and how Apps often provide the same content, but look much nicer because transitions between states are animated. If there is only <em>old state -&gt; new state</em>, the users brain needs to do heavy interpolation work. If the transition is animated, there is less cognitive workload on the user. So the goal is to eliminate sudden visual changes. Rachel takes two excurses to dark patterns/ads and technical history of animations (Flash, SMIL. CSS Animations) and closes with the Web Animation API.</p>\n<blockquote>\n<p>The difference between web and native starts to blur. The Web is moving forward.</p>\n</blockquote>\n<p>Lovely presentation slides with selfmade comic drawings!</p>\n<ul>\n<li>Twitter: <a href=\"https://twitter.com/RachelNabors\">@RachelNabors</a></li>\n<li><a href=\"http://rachelnabors.com\">Rachel Nabors Website</a></li>\n<li>Slides of this talk: <a href=\"http://slideshare.net/CrowChick/the-web-in-motion-animations-impact-on-ui-and-web-design\">The Web in Motion: animation&#39;s impact on UI and web design</a>.</li>\n<li><a href=\"http://rachelnabors.com/waapi\">Web Animations API resources</a></li>\n<li>Chrome status: Statistics of the <a href=\"http://www.chromestatus.com/metrics/css/popularity\">occurrences of certain CSS features in the wild</a></li>\n<li><a href=\"http://webanimationweekly.com/\">Web Animation Weekly</a> newsletter</li>\n</ul>\n<h2 id=\"static-sites-go-all-hollywood-phil-hawksworth\">Static Sites go all Hollywood <a href=\"https://twitter.com/philhawksworth\">Phil Hawksworth</a></h2>\n<p>Phil Hawksworth speaks about the advantages of Static Site Generators and the situations where they are a good choice. Embedded in Praise of simplicity and &quot;Short Stack development&quot;. Key argument: SSG moves complexity and potential failures away from the user, because if things go wrong, it is in the building step and not while actually serving a user&#39;s request.</p>\n<blockquote>\n<p>Simplifying is not dumbing down. It is focussing on what matters.</p>\n</blockquote>\n<ul>\n<li>Twitter: <a href=\"https://twitter.com/philhawksworth\">@philhawksworth</a></li>\n<li><a href=\"http://www.netlify.com\">Netlify</a>: Service for building and hosting of static sites, <a href=\"http://surge.sh\">Surge.sh</a>: Deployment and hosting of static sites</li>\n</ul>\n<h2 id=\"working-with-the-web-and-the-future-by-sally-jenkinson\">Working with the web and the future by <a href=\"https://twitter.com/sjenkinson\">Sally Jenkinson</a></h2>\n<p>Sally Jenkinson had a rather abstract talk about how our decisions of today affect the future. In positive ways (visionary user interfaces) and negative ways (technical debt). I learned about the &quot;<a href=\"https://en.wikipedia.org/wiki/White_elephant\">White Elephant</a>&quot; analogy.</p>\n<blockquote>\n<p>The future is a spectrum, not a single point in time. Think of the next sprint, the next month, the next year, the next ten years – at the same time.</p>\n</blockquote>\n<ul>\n<li>Twitter: <a href=\"https://twitter.com/sjenkinson\">@sjenkinson</a></li>\n<li>Website: <a href=\"http://www.recordssoundthesame.com\">recordssoundthesame.com</a></li>\n<li>Book recommendation: <a href=\"http://rosenfeldmedia.com/books/make-it-so/\">Make it so: Interaction Design Lessons from Science Fiction</a></li>\n<li><a href=\"http://www.scifiinterfaces.com\">Lessons from Sci-Fi Interfaces</a></li>\n</ul>\n<h2 id=\"lightning-talks\">Lightning Talks</h2>\n<ul>\n<li>&quot;Layout: Think Flex&quot;</li>\n<li>&quot;50 Shades of #0089ff&quot; by Gabriel Agu</li>\n<li>&quot;Language&quot; by <a href=\"https://twitter.com/g16n\">Gunnar Bittersman</a></li>\n</ul>\n<h2 id=\"rxjs--destroy-the-state-machine-by-stenver-jerkku\">RxJS – Destroy the state machine by Stenver Jerkku</h2>\n<p>A technical talk with lots of code samples. In short: RxJS is like &quot;Promises on steroids&quot;, providing more possibilities and code which is easier to read. It also has brilliant testing tools and is available in various languages (Scala, Ruby, Java, ...).</p>\n<ul>\n<li><a href=\"http://www.reactivemanifesto.org\">The reactive manifesto</a></li>\n</ul>\n<h2 id=\"untangle-your-code-with-yield-by-staś-małolepszy\">Untangle your code with yield by <a href=\"https://twitter.com/stas\">Staś Małolepszy</a></h2>\n<p>Very technical talk, completely in code. This was fascinating, in the sense of Clarke&#39;s law. I will need to check and work-through the presentation. Buzzwords: ES5, function generators, yield, iterators.</p>\n<p>Staś did some live coding (live-uncommenting, actually) with split-screen of code and results. Not sure if this setting is also part of the demo repo.</p>\n<ul>\n<li>Twitter: <a href=\"https://twitter.com/stas\">@stas</a></li>\n<li>Code demo: <a href=\"http://www.github.com/stasm/preso\">Untangle your code with yield</a></li>\n</ul>\n<h2 id=\"once-more-with-feeling-by-tim-kadlec\">Once more with feeling by <a href=\"https://twitter.com/tkadlec\">Tim Kadlec</a></h2>\n<p>Tim Kadlec held yet another performance talk, making fun of the fact that this topic has been talked about a lot in the last years. (&quot;There&#39;s a secret club of people who need to say &#39;The fastest Request is no Request&#39; two times each year.&quot;)</p>\n<p>Measurable performance improvement (DNS-prefetch, preconnect, preload, prerender, async, defer, inline critical CSS) is important. If there is nothing left to speed up, you can increase the perceived speed (skeleton rendering, changing status text on progress bars). And sometimes you need to add an artificial delay, because people do not trust a credit card validation which runs too fast.</p>\n<blockquote>\n<p>Everything on your page should have a <em>value</em>, because everything has a <em>cost</em>.</p>\n</blockquote>\n<ul>\n<li>Twitter: <a href=\"https://twitter.com/tkadlec\">@tkadlec</a></li>\n<li>Presentation Slides: <a href=\"https://speakerdeck.com/tkadlec/once-more-with-feeling\">Once more with feeling</a></li>\n</ul>\n<h2 id=\"leadership-in-an-ever-changing-industry-by-meri-williams\">Leadership in an Ever-Changing Industry by <a href=\"https://twitter.com/Geek_Manager\">Meri Williams</a></h2>\n<p>Meri Williams cursed more than other speakers while explaining what makes a good geek manager. in short: giving/explaining/allowing people  PURPOSE, AUTONOMY, MASTERY and INCLUSION. And keep developing your own mastery in TECH, TEAM and TOOLS. People need to say &quot;yes&quot; to these questions: &quot;Am I expected? Am I respected? Can I be myself and be successfull here?&quot;</p>\n<blockquote>\n<p>Be a bulldozer and a cheerleader. Get shit out of their way and tell them they&#39;re awesome.</p>\n</blockquote>\n<ul>\n<li>Twitter: <a href=\"https://twitter.com/Geek_Manager\">@Geek_Manager</a></li>\n<li><a href=\"http://blog.geekmanager.co.uk/\">Meris Blog</a></li>\n<li>Book Recommendation: <a href=\"http://www.danpink.com/books/drive/\">Drive</a> by Daniel H. Pink</li>\n<li>Book Recommendation: <a href=\"http://www.gallup.com/press/176069/first-break-rules-world-greatest-managers-differently.aspx\">First, Break All the Rules</a></li>\n</ul>\n<hr>\n<p>Next read: <a href=\"/front-trends-2016-warsaw-day-two\">Front Trends 2016 in Warsaw: Day 2</a></p>\n",
            "url": "https://blog.thomaspuppe.de/front-trends-2016-warsaw-day-one",
            "title": "Front Trends 2016 in Warsaw: Day 1",
            "summary": "Summarizing the first day presentations of the Front Trends 2016 conference in Warsaw. Covering pranks, animations, static sites, RxJS, performance, and leadership.",
            "date_modified": "2016-05-18T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/single-page-apps-minimieren-mit-gulp",
            "content_html": "<p>Unter meetingtimer.biz habe ich eine kleine Web-App. CSS und JavaScript sind so gering, dass ich keine seperaten Requests starten möchte. Gleichzeitig sollen Less und JSLint genutzt werden. Ein wunderbares Einsatzgebiet für Gulp!</p>\n<h2 id=\"das-projekt\">Das Projekt</h2>\n<p>Unter der Domain <a href=\"http://meetingtimer.biz\">meetingtimer.biz</a> betreibe ich eine kleine Website. Ein Nachmittagsprojekt, das während eines Meetings anhand der Teilnehmerzahl die Kosten des Meetings hochzählt und anzeigt.</p>\n<p>Die Seite ist einfach und benötigt nur wenig JavaScript und CSS. Dem Performance-Junkie in mir hat es gestört, dass für 2,8 KB CSS (nicht minimiert und unkomprimiert) extra ein Request gestartet werden muss. Weil ich außerdem mit Gulp experimentieren wollte, nahm ich diese Seite zum Anlass.</p>\n<h2 id=\"herausforderungen\">Herausforderungen</h2>\n<ol>\n<li>Möglichst wenige Requests im Live-betrieb ... es wäre schade, für 6 kB JavaScript und 3 kB CSS zwei Roundtrips zu starten.</li>\n<li>Beim Programmieren möchte ich dennoch nicht alles in einer großen HTML Datei horten.</li>\n</ol>\n<h2 id=\"lösung-mittels-gulp\">Lösung mittels Gulp</h2>\n<p>Grundlage bei der Arbeit mit CSS und JS sind natürlich die klassischen Werkzeuge wie less, minify-css, slint, uglify und concat. Die sind in jedem Gulp-Tutorial enthalten und sollen hier nicht behandelt werden. Spannend für meine Zwecke sind zwei weitere Tasks:</p>\n<pre>var replace = require('gulp-replace-task'),\n    cleanhtml = require('gulp-cleanhtml');</pre>\n\n<p>Deren Benutzung ist simpel und komfortabel: Im HTML setzt man Platzhalter:</p>\n<pre>...\n&lt;style type=\"text/css\"&gt;@@cssStyles&lt;/style&gt;\n...&lt;/head&gt;\n&lt;body&gt;...\n&lt;script type=\"text/javascript\">@@jsScript&lt;/script&gt;\n&lt;/body&gt;</pre>\n\n<p>Und lässt diese im Gulp Task durch den Inhalt der Dateien ersetzen:</p>\n<pre>gulp.task('replace', function () {\n    return gulp.src('./index.html')\n        .pipe(replace({\n            patterns: [\n                {\n                    match: 'cssStyles',\n                    replacement: fs.readFileSync('./web/assets/css/style.css', 'utf8')\n                },\n                {\n                    match: 'jsScript',\n                    replacement: fs.readFileSync('./web/assets/js/all.min.js', 'utf8')\n                },\n                {\n                    match: 'timestamp',\n                    replacement: currentDatetime\n                }\n            ]\n        }))\n        .pipe(cleanhtml())\n        .pipe(gulp.dest('./web'));\n});</pre>\n\n<p>Ich habe auch mit &quot;gulp-inline-source&quot; experimentiert, aber der hat den JavaScript Code zerstört. Replace macht dasselbe und kann außerdem banutzt werden um andere Platzhalter zu erstezen - z.B. den aktuellen Timestamp, eine Release-Nummer, Dateigrößen, Subtemplates, MD5-Hashes von Downloads oder was auch immer.</p>\n<p>Die Datei aus &quot;src&quot; wird gelesen und die Vorkommen des Suchpatterns ersetzt. Danach entfernt &quot;cleanhtml&quot; alle Whitespaces und &quot;dest&quot; schreibt die Datei in ihren Zielordner (das VErzeichnis was dann deployed wird). So einfach geht es.</p>\n<p>Das Ergebnis ist eine 4,4 kB große HTML Datei (die damit einen Bruchteil des 27,7 kB großen Touch Icons hat). Zu sehen unter <a href=\"http://meetingtimer.biz\">meetingtimer.biz</a>. Die Quellen, .gulpfile und das Ergebnis sind bei GitHub zu finden: <a href=\"https://github.com/thomaspuppe/meetingtimer.biz\">https://github.com/thomaspuppe/meetingtimer.biz</a></p>\n<h2 id=\"potential\">Potential</h2>\n<ul>\n<li>Gulp entschlanken. Die Concat Funktionen werden für jeweils eine Datei jar gar nicht gebraucht.</li>\n<li>Innerhalb des JS Codes könnten nicht-native Bezeichner noch automatisch gegen kürzere ersetzt werden.</li>\n<li>Ebenso könnte man CSS Klassennamen zusammenkürzen.</li>\n<li>Unnötiges CSS rauswerfen. Selektoren präzisieren. Zugegeben, da war ich schlampig.</li>\n<li>Erlaubt iOS, Touch Icons inline als Base 64 codiert abzulegen? Oder Inline als SVG?</li>\n</ul>\n<p>Das kommt später. Das wäre auch ein guter Anreiz, die Minimierung auszureizen. Wieso sollte ein simpler Timer KB groß sein, wenn man <a href=\"http://js1k.com/2014-dragons/demo/1854\">Minecraft in 1024 bytes</a> oder <a href=\"http://js1k.com/2014-dragons/demo/1934\">Wolfenstein 2D in 2K</a> programmieren kann?</p>\n",
            "url": "https://blog.thomaspuppe.de/single-page-apps-minimieren-mit-gulp",
            "title": "Eine Single-Page-App minimieren mit Gulp",
            "summary": "Unter meetingtimer.biz habe ich eine kleine Web-App. CSS und JavaScript sind so gering, dass ich keine seperaten Requests starten möchte. Gleichzeitig sollen Less und JSLint genutzt werden. Ein wunderbares Einsatzgebiet für Gulp!",
            "date_modified": "2015-01-23T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/twitterdaten-sammeln-mit-aws",
            "content_html": "<p>Um Tweets zu einem aktuellen Thema zu sammeln, muss man die Twitter Streaming API mitschneiden. In 20 Minuten ist dafür ein kostenloses always-online System aufgesetzt.</p>\n<p>Bei kurzen Events (TV-Duell vor der Bundestagswahl) habe ich die Sammlung von Tweets einfach auf meinem lokalen Rechner gemacht. Für die anstehenden Feierlichkeiten zum #Mauerfall soll die Sammlung mehrere Tage dauern. Mein Rechner soll dabei aber nicht im Dauerbetrieb laufen. Daher habe ich einfach eine AWS Instanz hochgefahren und lasse die die Arbeit tun. Zum Mitschneiden des Streams dient diesmal auch nicht die PHP-Lib Phirehose, sondern das Python-Tool Tweepy.</p>\n<p>Dieser Artikel beschreibt, wie man mit wenigen Klicks, 9 Konsolenkommandos und 40 Zeilen Code einen automatischen und kostenlosen Twitter-Mitschnitt anfertigt.</p>\n<p>Out of scope:</p>\n<ul>\n<li>Erstellen einer Twitter App und Generieren der Authentifizierungsdaten</li>\n<li>Anmelden bei AWS und die Details fürs Einrichten einer Instanz.</li>\n</ul>\n<h2 id=\"schritt-1-aws-instanz-erstellen-und-hochfahren\">Schritt 1: AWS Instanz erstellen und hochfahren</h2>\n<p>Für das Sammeln reicht die kleinste EC2 Instanz von AWS (t2.micro), die kostenlos ist. Der kostenlose Festplattenspeicher kann bis zu 30 GB reichen, je größer desto besser wird auch die IO Performance sein. Zugriff braucht man nur per SSH, daher lege ich kein eigenes VPC an.</p>\n<p>Mit meinem (oder einem neu generierten) Key melde ich mich via SSH auf der Instanz an.</p>\n<h2 id=\"schritt-2-twitter-collecor-installieren-und-anwerfen\">Schritt 2: Twitter-Collecor installieren und anwerfen</h2>\n<pre>// Update\n$ sudo apt-get update\n$ sudo apt-get upgrade\n\n// PIP (Python Paketmanager) und Tweepy (Twitter API Lib) installieren\n$ sudo apt-get install python-pip\n$ sudo pip install tweepy\n\n// Python-File erstellen\n$ mkdir tweets_mauerfall\n$ cd tweets_mauerfall/\n$ nano collect.py</pre>\n\n<p>Die genaue Code-Quelle finde ich gerade nicht mehr. Eine Suche nach &quot;tweepy save tweets to file&quot; brignt aber mehrere Quellen zutage. Mein Code hatte ursprünglich eine MongoDB als Datenspeicher, das habe ich gegen die einfache Datei ausgetauscht.</p>\n<p>Der Quellcode von collect.py:</p>\n<pre>import json\nimport tweepy\n\nconsumer_key = \"\"\nconsumer_secret = \"\"\naccess_key = \"\"\naccess_secret = \"\"\n\nauth = tweepy.OAuthHandler(consumer_key, consumer_secret)\nauth.set_access_token(access_key, access_secret)\napi = tweepy.API(auth)\n\n# initialize blank list to contain tweets\ntweets = []\n# file name that you want to open is the second argument\nsave_file = open('tweets.json', 'a')\n\nclass CustomStreamListener(tweepy.StreamListener):\n    def __init__(self, api):\n        self.api = api\n        super(tweepy.StreamListener, self).__init__()\n\n        self.save_file = tweets\n\n    def on_data(self, tweet):\n        self.save_file.append(json.loads(tweet))\n        print tweet\n        save_file.write(str(tweet))\n\n    def on_error(self, status_code):\n        return True # Don't kill the stream\n\n    def on_timeout(self):\n        return True # Don't kill the stream\n\nsapi = tweepy.streaming.Stream(auth, CustomStreamListener(api))\nsapi.filter(track=['mauerfall', 'fotw25', 'mauerspecht', 'berlinwall', 'fallofthewall25'])</pre>\n\n<p>Und das Ganze muss dann nur noch gestartet werden:</p>\n<pre>// Stumm im Hintergrund ausführen lassen\n$ nohup python collect.py > /dev/null &\n\n// anhand der ausgegebenen Prozessnummer (oder via top suchen) kann ich den Prozess später wieder killen.\n\n// Um die aktuelle Zahl der Tweets zu verfolgen, lasse ich mir (periodisch) die Anzahl der Zeilen in der json-Datei ausgeben:\n$ while true; do ( wc -l tweets.json ; sleep 5 ) done;</pre>\n\n\n<p>Fertig. Ein Update zur Zuverlässigkeit und eine Auswertung der Tweets gibt es dann später hier im Blog.</p>\n<h2 id=\"update-zur-zuverlässigkeit\">Update zur Zuverlässigkeit:</h2>\n<p>Das lief nicht so toll. Die Sammlung ist mehrfach abgebrochen, ohne dass Infos im Error-Log gelandet sind. Ob der Server mit dem Speichern nicht nachgekommen ist, oder ob die Streaming API Aussetzer hatte, lässt sich nicht mehr feststellen. Lesson learned: während der Sammlung sollte ein externer &quot;Dienst&quot; (Cronjob, Daemon, whatever) prüfen ob das Programm noch läuft und falls nötig neu starten. Sicher lässt sich auch das</p>\n<h2 id=\"auswertung-der-tweets\">Auswertung der Tweets:</h2>\n<p>Insgesamt wurden 71180 Tweets erfasst. Da die Aufzeichnung ausgerechnet am Abend des 8.11. abbrach und ich bis Spätabends am 9.11. nicht online war, fehlen alle Tweets vom Tag des Mauerfalls. Aber immerhin gibt es die kleine Sammlung der Tage zuvor.</p>\n<p>Die Datei lässt sich via scp vom AWS Server herunterladen, dann kann man die Maschien stoppen oder terminieren.</p>\n<p>Die Tweets, die ein Foto enthalten und mit Geodaten versehen waren, habe ich auf einer Karte dargestellt: <a href=\"http://lab.thomaspuppe.de/mauerfall-tweets/\">Karte</a>, <a href=\"https://blog.thomaspuppe.de/twitterdaten-mappen-mit-leaflet\">Blog-Beitrag</a>.</p>\n",
            "url": "https://blog.thomaspuppe.de/twitterdaten-sammeln-mit-aws",
            "title": "Twitterdaten sammeln mit AWS",
            "summary": "Um Tweets zu einem aktuellen Thema zu sammeln, muss man die Twitter Streaming API mitschneiden. In 20 Minuten ist dafür ein kostenloses always-online System aufgesetzt.",
            "date_modified": "2014-11-06T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/twitterdaten-mappen-mit-leaflet",
            "content_html": "<p>Meine <a href=\"https://blog.thomaspuppe.de/twitterdaten-sammeln-mit-aws\">Sammlung von Tweets zum #Mauerfall</a> via Amazon AWS hat trotz Ausfall über 70.000 Tweets ergeben. Nun sollen diejenigen mit Fotos und Geo-Daten auf einer Karte angezeigt werden.</p>\n<p>In der JSON Datei, die dabei angelegt wird, ist jeder Tweet in einer Zeile erfasst. Das macht das Zählen leicht, und auch das Aussortieren usw.</p>\n<pre>//Alle Tweets in einer großen Datei:\n$ wc -l tweets.json\n// 71180 tweets.json\n\n// Filtern der Tweets, die Medien enthalten (was zurzeit nur Fotos sein können)\n$ grep media_url tweets.json > tweets_media.json\n$ wc -l tweets_media.json\n// 32330 tweets_media.json\n\n// Filtern der Tweets, die Koordinaten enthalten\n$ grep -v \"\\\"coordinates\\\":null\" tweets_media.json > tweets_media_coordinates.json\n$ wc -l tweets_media_coordinates.json\n// 249 tweets_media_coordinates.json</pre>\n\n<p>Die Datei enthält nun (erstaunlich wenige) Tweets, die aber mit allen Daten. Da für die Visualisierung nicht alles benötigt wird, extrahiere ich nur die nötigen Daten. Dazu habe ich ein kleines Python-Script geschrieben. Die Code-Qualität sei mir verziehen, das waren jetzt meine ersten Zeilen Python überhaupt.</p>\n<pre>import json\n\nreadFile = open('tweets_media_coordinates.json')\nlines = readFile.readlines()\nreadFile.close()\n\noutputArray = []\n\nfor lineString in lines:\n    try:\n        lineObject = json.loads(lineString)\n        outputObject = {}\n        outputObject['id_str'] = lineObject['id_str']\n        outputObject['text'] = lineObject['text']\n        outputObject['screen_name'] = lineObject['user']['screen_name']\n        outputObject['text'] = lineObject['text']\n\n        for entityKey in lineObject['entities'] :\n            if entityKey == 'media' :\n                for media in lineObject['entities']['media'] :\n                    if media['type'] == 'photo' :\n                        outputObject['media_url'] = media['media_url']\n\n        outputObject['coordinates'] = lineObject['coordinates']['coordinates']\n\n        outputArray.append(outputObject)\n    except:\n        pass\n\noutputString = json.dumps(outputArray, separators=(',',':'), indent=2)\n\nwriteFile = open('tweets_media_coordinates_short.json','w')\nwriteFile.write('{\"tweets\":' + outputString + '}')\nwriteFile.close()</pre>\n\n<p>Das Ergebnis ist eine JSON Datei mit den Tweets, Foto-URLs und Koordinaten: <a href=\"http://lab.thomaspuppe.de/mauerfall-tweets/data/tweets_media_coordinates_short.json\">http://www.thomaspuppe.de/lab/mauerfall-tweets/data/tweets_media_coordinates_short.json</a>.</p>\n<p>Diese Datei ist die Daten-Grundlage für die Visualisierung. Auch dafür habe ich fix was aus dem Netz gezogen: den <a href=\"https://github.com/moklick/generator-leaflet\">Leaflet-Generator</a> von <a href=\"https://twitter.com/moklick\">Moritz Klack</a>. Via npm lädt man das halbe Internet herunter, hat aber dafür eine out-of-the-box Map Anwendung. Die eigentlich benötigten Dateien sollte man sich dann fürs nächste mal zurechtlegen.</p>\n<p>In die gegebene Karte wmüssen nur noch ein paar Zeilen JavaScript eingefügt werden, und schon sind die Punkte auf einer schönen Karte hinterlegt.</p>\n<pre>var markerIcon = L.divIcon({className: 'my-div-icon'}), // stylen via CSS!\nmarkerOptions = {\n    'clickable': true,\n    'keyboard': false,\n    'icon': markerIcon\n};\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    var httpRequest = new XMLHttpRequest()\n    httpRequest.onreadystatechange = function () {\n        if (httpRequest.readyState === 4) {\n            if (httpRequest.status === 200) {\n                var data = JSON.parse(httpRequest.responseText);\n                for (var i=0; i &lt; data['tweets'].length; i++) {\n                    var currentData = data['tweets'][i];\n                    markerOptions['alt'] = currentData['media_url'];\n                    L.marker(\n                        [currentData['coordinates'][1], currentData['coordinates'][0]],\n                        markerOptions)\n                    .addTo(map);\n                }\n            }\n        }\n    }\n    httpRequest.open('GET', 'data/tweets_media_coordinates_short.json')\n    httpRequest.send()\n});</pre>\n\n<p>Zu beachten: die Koordinaten bei Twitter sind als Lon,Lat gespeichert, leaflet benötigt aber Lat,Lon. Daher die Rochade beim Anlegen der Marker.</p>\n<p>Und hier das Ergebnis:</p>\n<figure>\n    <a href=\"http://lab.thomaspuppe.de/mauerfall-tweets/\">\n        <img src=\"/images/2014/11/tweets-mauerfall.png\" alt=\"Eine karte mit Tweets zum Mauerfall-Jubiläum\">\n        <figcaption>http://lab.thomaspuppe.de/mauerfall-tweets/</figcaption>\n    </a>\n</figure>\n",
            "url": "https://blog.thomaspuppe.de/twitterdaten-mappen-mit-leaflet",
            "title": "Twitterdaten mappen mit Leaflet",
            "summary": "Meine Sammlung von Tweets zum",
            "date_modified": "2014-11-19T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/link-unterstreichung",
            "content_html": "<p>Link-Unterstreichung bei großen Schriftarten wirkt schnell klobig. Mit ein paar Zeilen CSS lässt sich die Seite optisch aufwerten und die Lesbarkeit erhöhen.</p>\n<p>Als Freund <a href=\"http://ia.net/blog/100e2r\">&ldquo;großer&rdquo; Schrift</a> auf Websites stelle ich fest, dass die Unterstreichung von Links ab 20 Pixeln Schriftgröße (bei meinem Setup von font-family: Georgia, &quot;Times New Roman&quot;, Times, serif;) recht breit ist. Das stört auch die Lesbarkeit des Textes &mdash; zumindest im Vergleich zu einer Variante mit schmalerer Unterstreichung. Hier im Blog kommt das nicht zum Tragen. Groß sind nur die Überschriften, die eine dicke Unterstreichung vertragen. Der Fließtext ist kleiner als 20px und hat daher moderate Unterstreichung. Auf meiner Website mit vielen Links störte die Unterstreichung schon mehr (siehe Screenshot):</p>\n<figure>\n    <img src=\"/images/2014/05/link-underline.png\" alt=\"Abb. 1: Link-Unterstreichung nativ und trickreich\">\n    <figcaption>Abb. 1: Link-Unterstreichung nativ und trickreich</figcaption>\n</figure>\n\n<p>Kürzlich bin ich auf einen Artikel von <a href=\"https://medium.com/@mwichary\">Marcin Wichary</a> gestoßen, der dieses Problem löst: <a href=\"https://medium.com/p/7c03a9274f9\">&ldquo;Crafting link underlines on Medium&rdquo;</a>. In dem sehr lesenswerten Artikel wird auf pro und contra von Link-Unterstreichung im Allgemeinen und verschiedenen Techniken im Speziellen eingegangen. Am Ende schaut die Lösung so aus:</p>\n<pre>a, a:link, a:visited {\n    color: #333;\n    text-decoration: none;\n    position: relative;\n    text-shadow: -1px -1px 0 white, 1px -1px 0 white, -1px 1px 0 white, 1px 1px 0 white;\n    background-image: linear-gradient(to top, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0) 2px, #333333 2px, #333333 3px, rgba(0, 0, 0, 0) 3px);\n}\n\n@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi) {\n    a {\n        background-image: linear-gradient(to top, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0) 2px, #333333 2px, #333333 2.5px, rgba(0, 0, 0, 0) 2.5px);\n    }\n}\n\na:hover, a:focus {\n    background-image: linear-gradient(to top, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0) 2px, #666 2px, #666 3px, rgba(0, 0, 0, 0) 3px);\n}\n\n@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi) {\n    a:hover, a:focus {\n        background-image: linear-gradient(to top, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0) 2px, #666 2px, #666 2.5px, rgba(0, 0, 0, 0) 2.5px);\n    }\n}</pre>\n\n<p><strong>Trick 1:</strong> Links bekommen ein Hintergrundbild, das keine Datei oder DataURI nutzt, sondern Gradients.</p>\n<p><strong>Trick 2:</strong> Ein Text-Shadow, unterbricht die Linie bei Buchstaben mit Unterlänge.</p>\n<p>Achtgeben muss man auf Links, die nicht nur Text enthalten. Wird z.B. ein Bild verlinkt, erhält dieses auch eine solche Unterstreichung. Das muss dann mittels &ldquo;background-image:none;&rdquo; unterbunden werden &mdash; und zwar am Link statt am Bild. Bei großen Seiten kann es hier haarig werden und der Nutzen rechtfertigt den Aufwand vielleicht nicht mehr. Dasselbe gilt für Links im Button-Stil usw.</p>\n",
            "url": "https://blog.thomaspuppe.de/link-unterstreichung",
            "title": "Perfekte Link-Unterstreichung",
            "summary": "Link-Unterstreichung bei großen Schriftarten wirkt schnell klobig. Mit ein paar Zeilen CSS lässt sich die Seite optisch aufwerten und die Lesbarkeit erhöhen.",
            "date_modified": "2014-05-06T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/gregor-gysi-retweets",
            "content_html": "<p>Der Fraktionsführer der Linken im Deutschen Bundestag, <a href=\"http://www.bundestwitter.de/politiker/dr-gregor-gysi/\">Gregor Gysi</a>, führt in den letzten Wochen die <a href=\"http://www.bundestwitter.de\">Retweet-Charts von Bundestwitter</a> an. Ist das systematische Unterstützung durch Wenige? Oder eine breite Basis?</p>\n<p>Grundlage der Analyse sind alle Tweets von Gregor Gysi aus dem Jahr 2014 (Stand 16.02.). Diese habe ich nach Retweet-Häufigkeit sortiert, und die Top 25 dann genauer untersucht. Von jedem Tweet wurden die Profildaten aller Retweeter geladen, und die <a href=\"#tabelleGesamt\">Daten in einer Tabelle zusammengeführt</a> (Link führt zur Tabelle am Fuß dieses Posts).</p>\n<p>Insgesamt haben 920 verschiedene Profile die <a href=\"http://www.bundestwitter.de/politiker/dr-gregor-gysi/tweets/\">Top-Tweets von Gregor Gysi</a> weiterverbreitet. Manche Accounts retweeten fast jeden dieser Beiträge:</p>\n<ol>\n<li>Free Chelsea Manning (<a href=\"https://www.twitter.com/politlinkx\">politlinkx</a>) schickte 23 Retweets an 643 Follower.</li>\n<li>Demokratie Report (<a href=\"https://www.twitter.com/ProDemokratie\">ProDemokratie</a>) schickte 21 Retweets an 318 Follower.</li>\n<li>✡ TS_Palm ✡  (<a href=\"https://www.twitter.com/TS_Palm\">TS_Palm</a>) schickte 15 Retweets an 646 Follower.</li>\n<li>Monique (<a href=\"https://www.twitter.com/Queuey\">Queuey</a>) schickte 13 Retweets an 58 Follower.</li>\n<li>NimA (<a href=\"https://www.twitter.com/Nima_1990\">Nima_1990</a>) schickte 12 Retweets an 29 Follower.</li>\n</ol>\n\n<p>Mit @politlinkx und @ProDemokratie sind &quot;Gruppen&quot; (Begriff als Gegensatz zu einzelnen Privatpersonen) an der Spitze der Unterstützer. Die @linksfraktion ist mit 6 Retweets an Position 19. Mit jeweils 1 Retweet sind @katjakipping, Petra_Sitte_MdB, MWBirkwald und @DerRostocker von der Linksfraktion dabei. Andere MdB haben die untersuchten Tweets nicht weiterverbreitet.</p>\n<p>Die große Unterstützung kommt aber aus einer breiten Basis. 668 Personen haben 1 Retweet gemacht, 140 Personen 2 Retweets. Es folgen 45 Personen mit 3 Retweets, 38 Personen mit 4 Retweets und 20 Personen mit 5 Retweets. Mehr als 10 Retweets hatten nur die 5 oben genannten Accounts.</p>\n<p>1 Retweet: 668 Personen. 2 Retweets: 140 Personen. 3 Retweets: 45 Personen.4 Retweets: 38 Personen. 5 Retweets: 20 Personen. 6 Retweets: 4 Personen. 7 Retweets: 6 Personen. 8 Retweets: 8 Personen. 10 Retweets: 2 Personen. 12 Retweets: 1 Person. 13 Retweets: 1 Person. 15 Retweets: 1 Person. 21 Retweets: 1 Person. 23 Retweets: 1 Person.</p>\n<h2>Wer sind die Unterstützer mit den meisten Followern?</h2>\n<ol>\n    <li>Selami İnce (<a href=\"https://www.twitter.com/selamiince\">selamiince</a>) 27703 Follower, 1 Retweet.<br>\n        <i>\"#Hitzlsperger Respekt! In allen Bereichen mit antiquiertem Männlichkeitsbild spielt hoffentlich bald keine Rolle mehr, wer mit wem wie lebt.\"</i></li>\n    <li>Christopher Lauer (<a href=\"https://www.twitter.com/Schmidtlepp\">Schmidtlepp</a>) 26669 Follower, 1 Retweet.<br>\n        <i>\"(mi) #Gysi zu #Merkel: Unter Kohl war die Marktwirtschaft noch sozialer als heute. Hier das Video @linksfraktion http://t.co/SlH8NTMTRr\"</i></li>\n    <li>Jörg Tauss (<a href=\"https://www.twitter.com/tauss\">tauss</a>) 15508 Follower, 1 Retweet.<br>\n        <i>\"Durch ihre Enthaltung verhindert die Bundesregierung eine qualifizierte Mehrheit der EU-Agrarministern gegen die Einführung von #GenMais1507\"</i></li>\n    <li>Katja Kipping (<a href=\"https://www.twitter.com/katjakipping\">katjakipping</a>) 13858 Follower, 1 Retweet.<br>\n        <i>\"Durch ihre Enthaltung verhindert die Bundesregierung eine qualifizierte Mehrheit der EU-Agrarministern gegen die Einführung von #GenMais1507\"</i></li>\n    <li>linksfraktion (<a href=\"https://www.twitter.com/Linksfraktion\">Linksfraktion</a>) 12378 Follower, 6 Retweets.</li>\n</ol>\n\n\n<h2 id=\"tabelleGesamt\">Hier die Tabelle aller Accounts mit mehr als 2 Retweets:</h2>\n\n<table>\n<tr>\n    <td>Rank</td>\n    <td>Name</td>\n    <td>Follower</td>\n    <td>RT</td>\n    <td>\n            <a href=\"https://www.twitter.com/GregorGysi/status/429175604164837376\" title=\"DIE LINKE schlägt Edward Snowden für den Friedensnobelpreis 2014 vor. Hier die Nominierung: http://t.co/9Nl5rYCO3H http://t.co/m4aCTWUpw9\">\n                31.01                        </a>\n            <br /><b>125 RT</b>\n        </td>\n                        <td>\n            <a href=\"https://www.twitter.com/GregorGysi/status/426694396697133056\" title=\"Für eine familienfreundliche Bundeswehr muss von der Leyen zuallererst die Verführung von Kindern zum Dienst an der Waffe unterbinden.\">\n                24.01                        </a>\n            <br /><b>102 RT</b>\n        </td>\n                        <td>\n            <a href=\"https://www.twitter.com/GregorGysi/status/420991271029964800\" title=\"#Hitzlsperger Respekt! In allen Bereichen mit antiquiertem Männlichkeitsbild spielt hoffentlich bald keine Rolle mehr, wer mit wem wie lebt.\">\n                08.01                        </a>\n            <br /><b>98 RT</b>\n        </td>\n                        <td>\n            <a href=\"https://www.twitter.com/GregorGysi/status/433179205170638848\" title=\"Durch ihre Enthaltung verhindert die Bundesregierung eine qualifizierte Mehrheit der EU-Agrarministern gegen die Einführung von #GenMais1507\">\n                11.02                        </a>\n            <br /><b>86 RT</b>\n        </td>\n                        <td>\n            <a href=\"https://www.twitter.com/GregorGysi/status/428834970019594240\" title=\"Fracking ist mit unverantwortlichen Risiken für Menschen und Umwelt verbunden. Fracking in Deutschland muss gesetzlich verboten werden.\">\n                30.01                        </a>\n            <br /><b>79 RT</b>\n        </td>\n                        <td>\n            <a href=\"https://www.twitter.com/GregorGysi/status/433179666846076928\" title=\"Es ist mehr als unverständlich, dass sich die Kanzlerin von US-Genkonzernen als Handelsvertreterin einspannen lässt. #GenMais1507\">\n                11.02                        </a>\n            <br /><b>77 RT</b>\n        </td>\n                        <td>\n            <a href=\"https://www.twitter.com/GregorGysi/status/428507805528907776\" title=\"(mi) #Gysi zu #Merkel: Unter Kohl war die Marktwirtschaft noch sozialer als heute. Hier das Video @linksfraktion http://t.co/SlH8NTMTRr\">\n                29.01                        </a>\n            <br /><b>75 RT</b>\n        </td>\n                        <td>\n            <a href=\"https://www.twitter.com/GregorGysi/status/421199395657232384\" title=\"Die Zahl von Bulgaren + Rumänen, die Sozialleistungen empfangen, ist unterdurchschnittlich niedrig. Was soll das Gerede von Armutsmigration?\">\n                09.01                        </a>\n            <br /><b>72 RT</b>\n        </td>\n                        <td>\n            <a href=\"https://www.twitter.com/GregorGysi/status/425614805463207936\" title=\"Es ist oben genug da, um davon etwas nach unten abzugeben - sogar ohne dass es oben merklich schlechter zuginge. #Oxfam #Davos\">\n                21.01                        </a>\n            <br /><b>71 RT</b>\n        </td>\n                        <td>\n            <a href=\"https://www.twitter.com/GregorGysi/status/426005203226464256\" title=\"Ich wünschte mir, Union + SPD brächten die Leidenschaft beim Schutz der Bürger im Internet auf, die sie zum eigenen Schutz an den Tag legen.\">\n                22.01                        </a>\n            <br /><b>70 RT</b>\n        </td>\n                        <td>\n            <a href=\"https://www.twitter.com/GregorGysi/status/426694187040645120\" title=\"Die Rekrutierung von Minderjährigen durch die Bundeswehr muss sofort ausgesetzt + umgehend gesetzlich verboten werden http://t.co/4tpZh5CD2A\">\n                24.01                        </a>\n            <br /><b>63 RT</b>\n        </td>\n                        <td>\n            <a href=\"https://www.twitter.com/GregorGysi/status/422718776971644928\" title=\"Die Instrumente, die sich laut Scholz in #Hamburg bewähren, stellen eine Gefährdung des Rechtsstaates dar.\">\n                13.01                        </a>\n            <br /><b>61 RT</b>\n        </td>\n                        <td>\n            <a href=\"https://www.twitter.com/GregorGysi/status/420212189962993664\" title=\"Ich habe gesagt, die Leidensfähigkeit der SPD sei fast unbegrenzt. Inzwischen steht die Frage, wie groß die Leidensfähigkeit der Bürger ist.\">\n                06.01                        </a>\n            <br /><b>59 RT</b>\n        </td>\n                        <td>\n            <a href=\"https://www.twitter.com/GregorGysi/status/428835064882143232\" title=\"Anstatt Fracking in Deutschland erforschen zu lassen, sollte die Bundesregierung schleunigst die sichere Endlagerung des Atommülls regeln.\">\n                30.01                        </a>\n            <br /><b>56 RT</b>\n        </td>\n                        <td>\n            <a href=\"https://www.twitter.com/GregorGysi/status/433254974978797568\" title=\"(mi) #Gysi: Ich werde die #Diätenerhöhung spenden. #GroKo Hier der Videomitschnitt des Pressestatements http://t.co/pa0pt3Y2qg\">\n                11.02                        </a>\n            <br /><b>55 RT</b>\n        </td>\n                        <td>\n            <a href=\"https://www.twitter.com/GregorGysi/status/421246513546035200\" title=\"Rechtsfreie Räume dürfen nicht die Antwort auf Rechtsverstöße sein. Olaf Scholz sollte umgehend die Gefahrenzone auflösen lassen. #Hamburg\">\n                09.01                        </a>\n            <br /><b>53 RT</b>\n        </td>\n                        <td>\n            <a href=\"https://www.twitter.com/GregorGysi/status/421249082657873920\" title=\"Der Schutz vor Gewalt von Randalierern geht nicht, indem Freiheitsrechte aller verdachtsunabhängig eingeschränkt werden. #Hamburg\">\n                09.01                        </a>\n            <br /><b>51 RT</b>\n        </td>\n                        <td>\n            <a href=\"https://www.twitter.com/GregorGysi/status/433179907355869184\" title=\"Die Bundesregierung sollte sich gemeinsam mit Frankreich und Italien für eine gentechnikfreie Landwirtschaft in Europa stark machen.\">\n                11.02                        </a>\n            <br /><b>51 RT</b>\n        </td>\n                        <td>\n            <a href=\"https://www.twitter.com/GregorGysi/status/425614401321050112\" title=\"Die starke Konzentration des Reichtums stellt ein ernstes globales Sicherheitsrisiko dar, nicht nur aus Gerechtigkeitsgründen. #Oxfam #Davos\">\n                21.01                        </a>\n            <br /><b>48 RT</b>\n        </td>\n                        <td>\n            <a href=\"https://www.twitter.com/GregorGysi/status/424510721825992704\" title=\"Obamas Ankündigung ist keine Freundschaftserklärung an Deutschland, sondern die Aufrechterhaltung ungerechtfertigter Bewährungsauflagen #NSA\">\n                18.01                        </a>\n            <br /><b>46 RT</b>\n        </td>\n                        <td>\n            <a href=\"https://www.twitter.com/GregorGysi/status/432627027829850112\" title=\"Ich mache weiter Politik auch für Minderheiten, er macht wohl leider weiter gegen sie Musik. Warum eigentlich? Hat er das nötig? @Bushido78\">\n                09.02                        </a>\n            <br /><b>44 RT</b>\n        </td>\n                        <td>\n            <a href=\"https://www.twitter.com/GregorGysi/status/426003518517149696\" title=\"16 Millionen geknackte Online-Konten: Die Mitglieder der Bundesregierung haben geschworen, Schaden vom Volk abzuwenden. Auch im Internet!\">\n                22.01                        </a>\n            <br /><b>40 RT</b>\n        </td>\n                        <td>\n            <a href=\"https://www.twitter.com/GregorGysi/status/425614613900980224\" title=\"Das soziale und wirtschaftliche Ungleichgewicht führt regelmäßig zu Veteilungskriegen. #Oxfam #Davos\">\n                21.01                        </a>\n            <br /><b>32 RT</b>\n        </td>\n                        <td>\n            <a href=\"https://www.twitter.com/GregorGysi/status/424190071382605826\" title=\"Laut UdoJürgens fängt das Leben mit 66 erst an, so dass ich im nächstenJahr erst einJahr alt werde + dasRecht habe, mich auch so zu benehmen\">\n                17.01                        </a>\n            <br /><b>31 RT</b>\n        </td>\n                        <td>\n            <a href=\"https://www.twitter.com/GregorGysi/status/420212047679590400\" title=\"Die Bundesregierung hat einen Fehlstart hingelegt. Zickerei zu #Vorratsdatenspeicherung #Arbeitnehmerfreizügigkeit #Mindestlohn #PKW-Maut.\">\n                06.01                        </a>\n            <br /><b>27 RT</b>\n        </td>\n                </tr>\n\n<pre><code>            &lt;tr&gt;\n    &lt;td&gt;1&lt;/td&gt;\n                            &lt;td&gt;Free Chelsea Manning (politlinkx)&lt;/td&gt;\n                            &lt;td&gt;643&lt;/td&gt;\n                            &lt;td&gt;23&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;2&lt;/td&gt;\n                            &lt;td&gt;Demokratie Report (ProDemokratie)&lt;/td&gt;\n                            &lt;td&gt;318&lt;/td&gt;\n                            &lt;td&gt;21&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;✡ TS_Palm ✡ (TS_Palm)&lt;/td&gt;\n                            &lt;td&gt;646&lt;/td&gt;\n                            &lt;td&gt;15&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;4&lt;/td&gt;\n                            &lt;td&gt;Monique (Queuey)&lt;/td&gt;\n                            &lt;td&gt;58&lt;/td&gt;\n                            &lt;td&gt;13&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;5&lt;/td&gt;\n                            &lt;td&gt;NimA (Nima_1990)&lt;/td&gt;\n                            &lt;td&gt;29&lt;/td&gt;\n                            &lt;td&gt;12&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;6&lt;/td&gt;\n                            &lt;td&gt;MisterX™ (kritik2punkt0)&lt;/td&gt;\n                            &lt;td&gt;706&lt;/td&gt;\n                            &lt;td&gt;10&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;7&lt;/td&gt;\n                            &lt;td&gt;1KETZER (7VAMPIR)&lt;/td&gt;\n                            &lt;td&gt;747&lt;/td&gt;\n                            &lt;td&gt;10&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;8&lt;/td&gt;\n                            &lt;td&gt;Pirat Parzival (PParzival)&lt;/td&gt;\n                            &lt;td&gt;1827&lt;/td&gt;\n                            &lt;td&gt;8&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;9&lt;/td&gt;\n                            &lt;td&gt;Sebastian Sebastian (Thebastian85DD)&lt;/td&gt;\n                            &lt;td&gt;5&lt;/td&gt;\n                            &lt;td&gt;8&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;10&lt;/td&gt;\n                            &lt;td&gt;jolicoeur (jolicoeur11)&lt;/td&gt;\n                            &lt;td&gt;758&lt;/td&gt;\n                            &lt;td&gt;7&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;11&lt;/td&gt;\n                            &lt;td&gt;Einsiedler (eddiotos)&lt;/td&gt;\n                            &lt;td&gt;539&lt;/td&gt;\n                            &lt;td&gt;7&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;12&lt;/td&gt;\n                            &lt;td&gt;hausrockenweltretten (hausrocken)&lt;/td&gt;\n                            &lt;td&gt;15&lt;/td&gt;\n                            &lt;td&gt;7&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;13&lt;/td&gt;\n                            &lt;td&gt;Mario Ćubelić (MarioCubelic94)&lt;/td&gt;\n                            &lt;td&gt;17&lt;/td&gt;\n                            &lt;td&gt;7&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;14&lt;/td&gt;\n                            &lt;td&gt;Garion Coyote (GarionCoyote)&lt;/td&gt;\n                            &lt;td&gt;514&lt;/td&gt;\n                            &lt;td&gt;7&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;15&lt;/td&gt;\n                            &lt;td&gt;Agnes de Berlimont (AgnesdeBerlimon)&lt;/td&gt;\n                            &lt;td&gt;583&lt;/td&gt;\n                            &lt;td&gt;7&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;16&lt;/td&gt;\n                            &lt;td&gt;Eva Badenschier (badenschier)&lt;/td&gt;\n                            &lt;td&gt;25&lt;/td&gt;\n                            &lt;td&gt;6&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;17&lt;/td&gt;\n                            &lt;td&gt;Box an (inribonax)&lt;/td&gt;\n                            &lt;td&gt;378&lt;/td&gt;\n                            &lt;td&gt;6&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;18&lt;/td&gt;\n                            &lt;td&gt;Daniela Sedelke (DSedelke)&lt;/td&gt;\n                            &lt;td&gt;67&lt;/td&gt;\n                            &lt;td&gt;6&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;19&lt;/td&gt;\n                            &lt;td&gt;linksfraktion (Linksfraktion)&lt;/td&gt;\n                            &lt;td&gt;12378&lt;/td&gt;\n                            &lt;td&gt;6&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;20&lt;/td&gt;\n                            &lt;td&gt;olaf26  (olaf26)&lt;/td&gt;\n                            &lt;td&gt;408&lt;/td&gt;\n                            &lt;td&gt;5&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;21&lt;/td&gt;\n                            &lt;td&gt;Rapic2012 (rapic2012)&lt;/td&gt;\n                            &lt;td&gt;291&lt;/td&gt;\n                            &lt;td&gt;5&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;22&lt;/td&gt;\n                            &lt;td&gt;Sonya... (KuanQia)&lt;/td&gt;\n                            &lt;td&gt;534&lt;/td&gt;\n                            &lt;td&gt;5&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;23&lt;/td&gt;\n                            &lt;td&gt;TS-E (ts_e)&lt;/td&gt;\n                            &lt;td&gt;23&lt;/td&gt;\n                            &lt;td&gt;5&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;24&lt;/td&gt;\n                            &lt;td&gt;nimmdenbus (nimmdenbus)&lt;/td&gt;\n                            &lt;td&gt;279&lt;/td&gt;\n                            &lt;td&gt;5&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;25&lt;/td&gt;\n                            &lt;td&gt;Sægge (Ap_Saegge)&lt;/td&gt;\n                            &lt;td&gt;140&lt;/td&gt;\n                            &lt;td&gt;5&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;26&lt;/td&gt;\n                            &lt;td&gt;Ingrid Buchwieser (ingridHH)&lt;/td&gt;\n                            &lt;td&gt;622&lt;/td&gt;\n                            &lt;td&gt;5&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;27&lt;/td&gt;\n                            &lt;td&gt;HLW-BLN (HLWBerlin)&lt;/td&gt;\n                            &lt;td&gt;209&lt;/td&gt;\n                            &lt;td&gt;5&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;28&lt;/td&gt;\n                            &lt;td&gt;Team PetraPau (TeamPetraPau)&lt;/td&gt;\n                            &lt;td&gt;355&lt;/td&gt;\n                            &lt;td&gt;5&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;29&lt;/td&gt;\n                            &lt;td&gt;viva la vida (Orwellsmith)&lt;/td&gt;\n                            &lt;td&gt;838&lt;/td&gt;\n                            &lt;td&gt;5&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;30&lt;/td&gt;\n                            &lt;td&gt;fetterChe (TemaLue)&lt;/td&gt;\n                            &lt;td&gt;212&lt;/td&gt;\n                            &lt;td&gt;5&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;31&lt;/td&gt;\n                            &lt;td&gt;Stefan Springer (SpringerHerten)&lt;/td&gt;\n                            &lt;td&gt;73&lt;/td&gt;\n                            &lt;td&gt;5&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;32&lt;/td&gt;\n                            &lt;td&gt;Vatane Man (RuzByt)&lt;/td&gt;\n                            &lt;td&gt;230&lt;/td&gt;\n                            &lt;td&gt;5&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;33&lt;/td&gt;\n                            &lt;td&gt;Nick Knatterton (messagebouncer)&lt;/td&gt;\n                            &lt;td&gt;66&lt;/td&gt;\n                            &lt;td&gt;5&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;34&lt;/td&gt;\n                            &lt;td&gt;Marie (krippmarie)&lt;/td&gt;\n                            &lt;td&gt;1386&lt;/td&gt;\n                            &lt;td&gt;5&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;35&lt;/td&gt;\n                            &lt;td&gt;Grandmaster Lansh (LennartVoss)&lt;/td&gt;\n                            &lt;td&gt;1477&lt;/td&gt;\n                            &lt;td&gt;5&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;36&lt;/td&gt;\n                            &lt;td&gt;Uwe Shopinweb (shopinweb)&lt;/td&gt;\n                            &lt;td&gt;3651&lt;/td&gt;\n                            &lt;td&gt;5&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;37&lt;/td&gt;\n                            &lt;td&gt;Witch on Wheels (weiberkraft)&lt;/td&gt;\n                            &lt;td&gt;70&lt;/td&gt;\n                            &lt;td&gt;5&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;38&lt;/td&gt;\n                            &lt;td&gt;Markus Kuen (creation_2011)&lt;/td&gt;\n                            &lt;td&gt;896&lt;/td&gt;\n                            &lt;td&gt;5&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;39&lt;/td&gt;\n                            &lt;td&gt;Alex (ultra_ri0t)&lt;/td&gt;\n                            &lt;td&gt;304&lt;/td&gt;\n                            &lt;td&gt;5&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;40&lt;/td&gt;\n                            &lt;td&gt;NichtdieMama (Yrrgw)&lt;/td&gt;\n                            &lt;td&gt;748&lt;/td&gt;\n                            &lt;td&gt;4&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;41&lt;/td&gt;\n                            &lt;td&gt;Ivo kain Krieg (IvokainKrieg)&lt;/td&gt;\n                            &lt;td&gt;250&lt;/td&gt;\n                            &lt;td&gt;4&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;42&lt;/td&gt;\n                            &lt;td&gt;Simon  (simasview)&lt;/td&gt;\n                            &lt;td&gt;120&lt;/td&gt;\n                            &lt;td&gt;4&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;43&lt;/td&gt;\n                            &lt;td&gt;k.&amp;k.Hoflieferant (Reichsvikar)&lt;/td&gt;\n                            &lt;td&gt;1047&lt;/td&gt;\n                            &lt;td&gt;4&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;44&lt;/td&gt;\n                            &lt;td&gt;Linke Dithmarschen (LINKE_HEI)&lt;/td&gt;\n                            &lt;td&gt;177&lt;/td&gt;\n                            &lt;td&gt;4&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;45&lt;/td&gt;\n                            &lt;td&gt;Julia S (juliainfinland)&lt;/td&gt;\n                            &lt;td&gt;933&lt;/td&gt;\n                            &lt;td&gt;4&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;46&lt;/td&gt;\n                            &lt;td&gt;Jacob Something (j_kanev)&lt;/td&gt;\n                            &lt;td&gt;130&lt;/td&gt;\n                            &lt;td&gt;4&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;47&lt;/td&gt;\n                            &lt;td&gt;Janet McBunny (JanetMcBunny)&lt;/td&gt;\n                            &lt;td&gt;4&lt;/td&gt;\n                            &lt;td&gt;4&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;48&lt;/td&gt;\n                            &lt;td&gt;Mr. Mann (rokkr91)&lt;/td&gt;\n                            &lt;td&gt;136&lt;/td&gt;\n                            &lt;td&gt;4&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;49&lt;/td&gt;\n                            &lt;td&gt;Turan Altuner (Turamax)&lt;/td&gt;\n                            &lt;td&gt;2777&lt;/td&gt;\n                            &lt;td&gt;4&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;50&lt;/td&gt;\n                            &lt;td&gt;Schlotti (Fjunchclick)&lt;/td&gt;\n                            &lt;td&gt;247&lt;/td&gt;\n                            &lt;td&gt;4&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;51&lt;/td&gt;\n                            &lt;td&gt;Gert Schoen (Gert_Schoen)&lt;/td&gt;\n                            &lt;td&gt;32&lt;/td&gt;\n                            &lt;td&gt;4&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;52&lt;/td&gt;\n                            &lt;td&gt;MEE (KANAKEN)&lt;/td&gt;\n                            &lt;td&gt;19&lt;/td&gt;\n                            &lt;td&gt;4&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;53&lt;/td&gt;\n                            &lt;td&gt;Ⓣeegeflüster  (Noeh_A)&lt;/td&gt;\n                            &lt;td&gt;589&lt;/td&gt;\n                            &lt;td&gt;4&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;54&lt;/td&gt;\n                            &lt;td&gt;Max Sensei (maxsensei)&lt;/td&gt;\n                            &lt;td&gt;78&lt;/td&gt;\n                            &lt;td&gt;4&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;55&lt;/td&gt;\n                            &lt;td&gt;le Cram (aquaero)&lt;/td&gt;\n                            &lt;td&gt;152&lt;/td&gt;\n                            &lt;td&gt;4&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;56&lt;/td&gt;\n                            &lt;td&gt;★◄der☛DUTSCHI☚☮✰ (Der_Dutschi)&lt;/td&gt;\n                            &lt;td&gt;2036&lt;/td&gt;\n                            &lt;td&gt;4&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;57&lt;/td&gt;\n                            &lt;td&gt;Markus (MarkusDarmstadt)&lt;/td&gt;\n                            &lt;td&gt;35&lt;/td&gt;\n                            &lt;td&gt;4&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;58&lt;/td&gt;\n                            &lt;td&gt;Ries Ling (r0llinger)&lt;/td&gt;\n                            &lt;td&gt;654&lt;/td&gt;\n                            &lt;td&gt;4&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;59&lt;/td&gt;\n                            &lt;td&gt;Johannes (bojome)&lt;/td&gt;\n                            &lt;td&gt;40&lt;/td&gt;\n                            &lt;td&gt;4&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;60&lt;/td&gt;\n                            &lt;td&gt;Petra S. (Almwichterl)&lt;/td&gt;\n                            &lt;td&gt;255&lt;/td&gt;\n                            &lt;td&gt;4&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;61&lt;/td&gt;\n                            &lt;td&gt;Frank (frhey)&lt;/td&gt;\n                            &lt;td&gt;101&lt;/td&gt;\n                            &lt;td&gt;4&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;62&lt;/td&gt;\n                            &lt;td&gt;frischer_fischer (frisch_fish)&lt;/td&gt;\n                            &lt;td&gt;442&lt;/td&gt;\n                            &lt;td&gt;4&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;63&lt;/td&gt;\n                            &lt;td&gt;Beatrice Pietsch (BeatricePietsch)&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;4&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;64&lt;/td&gt;\n                            &lt;td&gt;The Shape (Der_P82)&lt;/td&gt;\n                            &lt;td&gt;76&lt;/td&gt;\n                            &lt;td&gt;4&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;65&lt;/td&gt;\n                            &lt;td&gt;papa chango (papachango9)&lt;/td&gt;\n                            &lt;td&gt;536&lt;/td&gt;\n                            &lt;td&gt;4&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;66&lt;/td&gt;\n                            &lt;td&gt;René Füssel (ReneFSL)&lt;/td&gt;\n                            &lt;td&gt;20&lt;/td&gt;\n                            &lt;td&gt;4&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;67&lt;/td&gt;\n                            &lt;td&gt;Konrad (KonradvonFell)&lt;/td&gt;\n                            &lt;td&gt;5&lt;/td&gt;\n                            &lt;td&gt;4&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;68&lt;/td&gt;\n                            &lt;td&gt;Tenrevo (Tenrevo)&lt;/td&gt;\n                            &lt;td&gt;60&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;69&lt;/td&gt;\n                            &lt;td&gt;Wildkatze (joluchs)&lt;/td&gt;\n                            &lt;td&gt;410&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;70&lt;/td&gt;\n                            &lt;td&gt;White Fox Blue Eyes (DominikScheib)&lt;/td&gt;\n                            &lt;td&gt;7&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;71&lt;/td&gt;\n                            &lt;td&gt;Stephan Forth (pingaffe)&lt;/td&gt;\n                            &lt;td&gt;96&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;72&lt;/td&gt;\n                            &lt;td&gt;Claudia Lohausen (ClaudiaLohausen)&lt;/td&gt;\n                            &lt;td&gt;578&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;73&lt;/td&gt;\n                            &lt;td&gt;rhabarbeer (rhabarbeer)&lt;/td&gt;\n                            &lt;td&gt;246&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;74&lt;/td&gt;\n                            &lt;td&gt;Helma Dorn (HelmaDorn)&lt;/td&gt;\n                            &lt;td&gt;882&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;75&lt;/td&gt;\n                            &lt;td&gt; Detektei ManagerSOS (managersos)&lt;/td&gt;\n                            &lt;td&gt;834&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;76&lt;/td&gt;\n                            &lt;td&gt;LordCrash (CrashMjF)&lt;/td&gt;\n                            &lt;td&gt;44&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;77&lt;/td&gt;\n                            &lt;td&gt;Felix (NuKingOfErthing)&lt;/td&gt;\n                            &lt;td&gt;46&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;78&lt;/td&gt;\n                            &lt;td&gt;Michi  (mj123451)&lt;/td&gt;\n                            &lt;td&gt;904&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;79&lt;/td&gt;\n                            &lt;td&gt;Leikan Monsis (honduram)&lt;/td&gt;\n                            &lt;td&gt;209&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;80&lt;/td&gt;\n                            &lt;td&gt;TapferesSchraderlein (jaffi_schrader)&lt;/td&gt;\n                            &lt;td&gt;26&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;81&lt;/td&gt;\n                            &lt;td&gt;Twiidy (Twiidy)&lt;/td&gt;\n                            &lt;td&gt;86&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;82&lt;/td&gt;\n                            &lt;td&gt;Jan  (el_hausaffe)&lt;/td&gt;\n                            &lt;td&gt;11&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;83&lt;/td&gt;\n                            &lt;td&gt;Klotze Buck (Fatze_Buck)&lt;/td&gt;\n                            &lt;td&gt;140&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;84&lt;/td&gt;\n                            &lt;td&gt;bankziggy (bankziggy)&lt;/td&gt;\n                            &lt;td&gt;9&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;85&lt;/td&gt;\n                            &lt;td&gt;Na, geht doch! (NaGehtDoch)&lt;/td&gt;\n                            &lt;td&gt;458&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;86&lt;/td&gt;\n                            &lt;td&gt;MDChronik (MDChronik)&lt;/td&gt;\n                            &lt;td&gt;112&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;87&lt;/td&gt;\n                            &lt;td&gt;TJ (pgtj77)&lt;/td&gt;\n                            &lt;td&gt;202&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;88&lt;/td&gt;\n                            &lt;td&gt;Kirstin Wodrich (DerEngel007)&lt;/td&gt;\n                            &lt;td&gt;18&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;89&lt;/td&gt;\n                            &lt;td&gt;G-ritti (G_Jai_)&lt;/td&gt;\n                            &lt;td&gt;105&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;90&lt;/td&gt;\n                            &lt;td&gt;guerilla_ronny (guerillaronny)&lt;/td&gt;\n                            &lt;td&gt;2&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;91&lt;/td&gt;\n                            &lt;td&gt;Radler Frank (dynamo1955)&lt;/td&gt;\n                            &lt;td&gt;770&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;92&lt;/td&gt;\n                            &lt;td&gt;lord.daywalker (monstropolis)&lt;/td&gt;\n                            &lt;td&gt;355&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;93&lt;/td&gt;\n                            &lt;td&gt;Nadine (Schaedelnoppen)&lt;/td&gt;\n                            &lt;td&gt;211&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;94&lt;/td&gt;\n                            &lt;td&gt;G. Shumway (Vigilius_)&lt;/td&gt;\n                            &lt;td&gt;57&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;95&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;96&lt;/td&gt;\n                            &lt;td&gt;Die_Kehrseite (Die_Kehrseite)&lt;/td&gt;\n                            &lt;td&gt;1371&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;97&lt;/td&gt;\n                            &lt;td&gt;Laurin Huber (MrAchherrje)&lt;/td&gt;\n                            &lt;td&gt;32&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;98&lt;/td&gt;\n                            &lt;td&gt;Thomas (JeffreyGoines32)&lt;/td&gt;\n                            &lt;td&gt;60&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;99&lt;/td&gt;\n                            &lt;td&gt;Özlem Sirakaya (oezlem1011)&lt;/td&gt;\n                            &lt;td&gt;7&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;100&lt;/td&gt;\n                            &lt;td&gt;Linksfraktion Thl (Linke_Thl)&lt;/td&gt;\n                            &lt;td&gt;1154&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;101&lt;/td&gt;\n                            &lt;td&gt;МИР/k.o. (wortkrieger)&lt;/td&gt;\n                            &lt;td&gt;22&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;102&lt;/td&gt;\n                            &lt;td&gt;Der müde Joe (muederjoe)&lt;/td&gt;\n                            &lt;td&gt;29&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;103&lt;/td&gt;\n                            &lt;td&gt;Der Klugscheißer (Besserwissender)&lt;/td&gt;\n                            &lt;td&gt;58&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;104&lt;/td&gt;\n                            &lt;td&gt;--ERIK-- (2485fischer)&lt;/td&gt;\n                            &lt;td&gt;76&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;105&lt;/td&gt;\n                            &lt;td&gt;FreakDrear (FreakDrear)&lt;/td&gt;\n                            &lt;td&gt;17&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;106&lt;/td&gt;\n                            &lt;td&gt;Andreas  Heitmann (AndyGER)&lt;/td&gt;\n                            &lt;td&gt;687&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;107&lt;/td&gt;\n                            &lt;td&gt;mwastel1967 (mwastel1967)&lt;/td&gt;\n                            &lt;td&gt;122&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;108&lt;/td&gt;\n                            &lt;td&gt;Lars (txted_)&lt;/td&gt;\n                            &lt;td&gt;2&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;109&lt;/td&gt;\n                            &lt;td&gt;Torsten Zimmermann (zimmi69)&lt;/td&gt;\n                            &lt;td&gt;113&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;110&lt;/td&gt;\n                            &lt;td&gt;knallerten (knallerten)&lt;/td&gt;\n                            &lt;td&gt;80&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;111&lt;/td&gt;\n                            &lt;td&gt;Þórr (wunderfitzig)&lt;/td&gt;\n                            &lt;td&gt;1436&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n            &lt;tr&gt;\n    &lt;td&gt;112&lt;/td&gt;\n                            &lt;td&gt;Psychonaut (olliwaack)&lt;/td&gt;\n                            &lt;td&gt;464&lt;/td&gt;\n                            &lt;td&gt;3&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;X&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                            &lt;td&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n</code></pre>\n</table>\n\n\n<p>Hinweise:</p>\n<ul>\n    <li>Wie man sieht, habe ich die Masse der 1-mal und 2-mal Retweter ausgelassen.</li>\n    <li>Die Zahl der Follower ist auch vom 16.03.2014, und nicht vom Tag der Retweets.</li>\n</ul>\n\n",
            "url": "https://blog.thomaspuppe.de/gregor-gysi-retweets",
            "title": "Die Unterstützer des @GregorGysi",
            "summary": "Gregor Gysi führt in den letzten Wochen die Retweet-Charts von Bundestwitter an. Ist das systematische Unterstützung durch Wenige? Oder eine breite Basis?",
            "date_modified": "2014-03-16T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/responsive-website-ein-praktisches-beispiel",
            "content_html": "<p>Wie baut man eine einfache Website von nicht-responsive auf responsive um? Eine Schritt-für-Schritt Anleitung anhand dieses Blogs.</p>\n<p>Ziel ist nicht, dass der Blog auf allen Geräten gleich aussieht (was auch nicht der Sinn von RWD ist). Sondern dass er auf allen Geräten gut aussieht und vor Allem funktioniert (was der Sinn von RWD ist).</p>\n<p>Anhand des sehr einfachen Blog-Layouts öchte ich drei grundlegende Regeln von Responsive Websites erläutern.</p>\n<h2 id=\"1-anpassung-des-viewport\">1. Anpassung des Viewport</h2>\n<p>Mit der Einführung des iPhone wurde quasi eine neue Geräteklasse geschaffen, auf die das Web nicht vorbereitet war. Websites, die zuvor auf einem Bildschirm mit 1024 und mehr Pixeln dargestellt wurden, sollten nun auf einem 320 oder 480 Pixel breiten Display gezeigt werden. Vor dieser Herausforderung stand Apple. Eine Variante dafür wäre, nur die linke obere Ecke der Website zu zeigen. Ein anderer, die Website klein zu skalieren. Für die zweite Variante hatte sich Apple entschieden. Websites wurden auf eine feste Breite von 980 Pixel gerendert und dann auf die Breite des iPhones herunterskaliert. (Für Android-Browser gilt das gleiche, mit 800 Pixeln Breite.)</p>\n<figure><img src=\"/images/2014/02/responsive_01_ohneviewport.png\" alt=\"Abb. 1: Darstellung ohne Viewport\"><figcaption>Abb. 1: Darstellung ohne Viewport</figcaption></figure>\n\n<p>Wenn nun aber eine Website mit einer Breite von wenigr als 980 Pixeln gut zurechtkommt (also responsive ist), dann muss das dem Browser mitgeteilt werden. Dafür dient der Viewport:</p>\n<pre>&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;</pre>\n\n<p>Dieser Meta-Tag im Head-Bereich der Website sagt dem Browser, dass die Seite nicht mit fiktiven 980 Pixeln gerendert werden soll, sondern auf der nativen Breite des Geräts. Wie sich die Seite bei dieser Breite verhält, das ist dann Sache des CSS.</p>\n<figure><img src=\"/images/2014/02/responsive_02_mitviewport.png\" alt=\"Abb. 2: Darstellung mit Viewport (noch nicht schön, aber man sieht die automatische Anpassung der Breite)\"><figcaption>Abb. 2: Darstellung mit Viewport (noch nicht schön, aber man sieht die automatische Anpassung der Breite).</figcaption></figure>\n\n<p>Auf Desktop-Browsern spielt der Viewport übrigens keine Rolle. Hier gilt die Fensterbreite wie sie ist, weil es ja keinen Grund zum Skalieren gibt.</p>\n<h2 id=\"2-flexible-seitenbreite-und-raster\">2. Flexible Seitenbreite und Raster</h2>\n<p>Als nächstes muss die Seite flexibel auf die (nun auch auf kleinen Geräten erkannte) Breite reagieren. Statt einer festen Breite in Pixeln geben wir den Elementen auf der Seite eine flexible Breite in Prozent, die sich an der größe des Browserfensters (oder des mobilen Gerätes) orientiert.</p>\n<p>Feste oder minimale Breiten können im Responsive Web Design für kleine Elemente nützlich sein. Für große Elemente sind sie es meist nicht. Böser Fehler in der ersten Version dieses Blogs:</p>\n<pre>.posts { width: 100%; min-width:710px; }</pre>\n\n<p>Soeben haben wir mobile Geräte mittels Viewport dazu gezwungen, die Seite in Originalpixeln zu rendern. Hat das Gerät nur 480 Pixel Breite, ist die Seite natürlich zur Hälfte abgeschnitten. Indem man feste oder minmale Breiten aus dem CSS entfernt, passten sich Block-Elemente wie Divs an die verfügbare Breite an. In diesem Fall sind das 100% des Browsers - so soll es sein. Auf die Angabe von 100% kann man in dem Fall natürlich auch verzichten.</p>\n<p>100% Breite für Elemente sind aber nicht immer erwünscht. Gerade bei sehr großen Monitoren sind Flisßtexte schlecht lesbar, wenn sie den ganzen Bildschrimbreite einnehmen. Abhilfe schafft die Angabe einer maximalen Breite:</p>\n<pre>.posts p, .posts h1, .posts h2 { max-width:600px; }</pre>\n\n<p>Da die Artikel selbst noch breit laufen sollen (bunter Rand rechts), begrenzen wir nur Überschriften und Absätze in der Breite. Ḿan erkennt, dass die Inhalte der rechten Spalte sich dem Menü</p>\n<h2 id=\"3-breakpoints-für-unterschiedliche-styles\">3. Breakpoints für unterschiedliche Styles</h2>\n<p>Anhand von sogenannten Media Queries kann bestimmtes CSS für bestimmte Gerätetypen ausgeliefert werden. Für Responsive Websites richtet man sich meist nach der Breite des Bildschirms. Anhand von Grenzwerten (&ldquo;Breakpoints&rdquo;) werden unterschiedliche Regeln für unterschiedliche Bildschirm edefiniert. Für den Einsatz von Breakpoints gibt es zwei verschiedene Ansätze. <strong>Desktop-First</strong> funktioniert mit absteigenden max-width Werten:</p>\n<pre>h1 {\nfont-size: 3.5em;\n}\n\n@media only screen and (max-width : 1200px) {\n    h1 {\n        font-size: 3em;\n    }\n}\n\n@media only screen and (max-width : 600px) {\n    h1 {\n        font-size: 2em;\n    }\n}</pre>\n\n<p><strong>Mobile-First</strong> arbeitet mit aufsteigenden min-width Werten:</p>\n<pre>h1 {\nfont-size: 2em;\n}\n\n@media only screen and (min-width : 600px) {\n    h1 {\n        font-size: 3em;\n    }\n}\n\n@media only screen and (min-width : 1200px) {\n    h1 {\n        font-size: 3.5em;\n    }\n}</pre>\n\n<p>Beachte: für alle Bildschirme über dem größten max-width-Wert (oder unter dem kleinsten min-width-Wert) muss ein Standardwert definiert werden.</p>\n<p>Da mobile (kleine) Geräte tendentiell schwächer sind als große, halte ich Mobile-First für einen guten Ansatz.</p>\n<h2 id=\"linktipp\">Linktipp</h2>\n<p><a href=\"http://bradfrost.github.io/this-is-responsive/\">&ldquo;This is responsive&rdquo; von Brad Frost</a>.</p>\n",
            "url": "https://blog.thomaspuppe.de/responsive-website-ein-praktisches-beispiel",
            "title": "Umstellung auf Responsive Web Design - ein praktisches Beispiel",
            "summary": "Wie baut man eine einfache Website von nicht-responsive auf responsive um? Eine Schritt-für-Schritt Anleitung anhand dieses Blogs.",
            "date_modified": "2014-02-13T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/do-not-track-header-crossbrowser",
            "content_html": "<p>Mit dem doNotTrack Befehl können User signalisieren, dass sie nicht von Websites getrackt werden möchten. Browser senden dafür einen HTTP-Header mit ihren Requests an den Webserver. Via JavaScript lässt sich diese Einstellung auch im Client auslesen. Dieses Auslesen funktioniert leider nicht einheitlich.</p>\n<p>Chrome und Safari haben eine andere Schreibweise für die doNotTrack Property als der Firefox Browser. Der IE 9/10 verwendet einen eigenen Namen. Und der IE 8 unterstützt diese Einstellung laut Microsoft auf <a href=\"http://ie.microsoft.com/TEStdrive/Browser/DoNotTrack/Default.html\">sehr krude Art und Weise</a>.</p>\n<h2 id=\"getestete-browser\">Getestete Browser:</h2>\n<table>\n    <thead>\n    <tr><td>Browser</td><td>Abruf</td><td>Wert</td></tr>\n    </thead>\n\n<pre><code>&lt;tbody&gt;\n&lt;tr&gt;&lt;td&gt;Chrome 30 (Win 7)&lt;/td&gt;&lt;td&gt;navigator.doNotTrack&lt;/td&gt;&lt;td&gt;&quot;0&quot;, &quot;1&quot;, null&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;&lt;td&gt;Chromium 30 (Ubuntu 13)&lt;/td&gt;&lt;td&gt;navigator.doNotTrack&lt;/td&gt;&lt;td&gt;&quot;0&quot;, &quot;1&quot;, null&lt;/td&gt;&lt;/tr&gt;\n\n&lt;tr&gt;&lt;td&gt;Safari 5 (Win 7)&lt;/td&gt;&lt;td&gt;navigator.doNotTrack&lt;/td&gt;&lt;td&gt;&quot;0&quot;, &quot;1&quot;, null&lt;/td&gt;&lt;/tr&gt;\n\n&lt;tr&gt;&lt;td&gt;Firefox 25 (Win 7)&lt;/td&gt;&lt;td&gt;navigator.doNotTrack&lt;/td&gt;&lt;td&gt;&quot;no&quot;, &quot;yes&quot;, &quot;unspecified&quot;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;&lt;td&gt;Firefox 25 (Ubuntu 13)&lt;/td&gt;&lt;td&gt;navigator.doNotTrack&lt;/td&gt;&lt;td&gt;&quot;no&quot;, &quot;yes&quot;, &quot;unspecified&quot;&lt;/td&gt;&lt;/tr&gt;\n\n&lt;tr&gt;&lt;td&gt;Opera 12 (Win 7)&lt;/td&gt;&lt;td&gt;navigator.doNotTrack&lt;/td&gt;&lt;td&gt;&lt;del&gt;&quot;0&quot;&lt;/del&gt;, &quot;1&quot;, null&lt;/td&gt;&lt;/tr&gt;\n\n&lt;tr&gt;&lt;td&gt;IE 10 (Win 7)&lt;/td&gt;&lt;td&gt;navigator.msDoNotTrack&lt;/td&gt;&lt;td&gt;&quot;0&quot;, &quot;1&quot;, TODO&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;&lt;td&gt;IE 10 (Win 7)&lt;/td&gt;&lt;td&gt;window.external.InPrivateFilteringEnabled()&lt;/td&gt;&lt;td&gt;false, true, undefined&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;&lt;td&gt;IE 9 (Win 7)&lt;/td&gt;&lt;td&gt;window.external.InPrivateFilteringEnabled()&lt;/td&gt;&lt;td&gt;false, true, undefined&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;&lt;td&gt;IE 8 (Win 7)&lt;/td&gt;&lt;td&gt;window.external.InPrivateFilteringEnabled()&lt;/td&gt;&lt;td&gt;false, true, undefined&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;&lt;td&gt;IE 7 (Win 7)&lt;/td&gt;&lt;td colspan=2&gt;nicht verfügbar&lt;/td&gt;&lt;/tr&gt;\n\n&lt;tr&gt;&lt;td&gt;Chrome Mobile (Android 4.3)&lt;/td&gt;&lt;td&gt;navigator.doNotTrack&lt;/td&gt;&lt;td&gt;&quot;0&quot;, &quot;1&quot;, null&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;&lt;td&gt;Safari (iOS 5 / iPad 1)&lt;/td&gt;&lt;td colspan=2&gt;nicht verfügbar&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;&lt;td&gt;Sony Tablet Browser (Android 4.0)&lt;/td&gt;&lt;td colspan=2&gt;nicht verfügbar&lt;/td&gt;&lt;/tr&gt;\n&lt;/tbody&gt;\n</code></pre>\n</table>\n\n<p><em>Die Tabelle wird nach und nach ergänzt. Input bitte an <a href=\"https://twitter.com/thomaspuppe\">@thomaspuppe</a></em></p>\n<h2 id=\"live-test-in-ihrem-browser\">Live-Test in Ihrem Browser</h2>\n<pre id=\"jsOutput\"></pre>\n\n<script>\n\nvar jsOutput = document.getElementById('jsOutput');\n\njsOutput.innerHTML+= \"// Check in normal Browsers\\n\";\nif (typeof navigator.doNotTrack !== 'undefined') {\n    jsOutput.innerHTML+= \"navigator.doNotTrack ist verfügbar.\\n\";\n    jsOutput.innerHTML+= \"navigator.doNotTrack = \" + navigator.doNotTrack + \" (\" + typeof navigator.doNotTrack + \")\\n\";\n} else {\n    jsOutput.innerHTML+= \"navigator.doNotTrack ist nicht verfügbar.\\n\";\n\n}\njsOutput.innerHTML+= \"\\n\";\n\n\njsOutput.innerHTML+= \"// Check in IE 9/10\\n\";\nif (typeof navigator.msDoNotTrack !== 'undefined') {\n    jsOutput.innerHTML+= \"navigator.msDoNotTrack ist verfügbar.\\n\";\n    jsOutput.innerHTML+= \"navigator.msDoNotTrack = \" + navigator.msDoNotTrack + \" (\" + typeof navigator.msDoNotTrack + \")\\n\";\n} else {\n    jsOutput.innerHTML+= \"navigator.msDoNotTrack ist nicht verfügbar.\\n\";\n\n}\njsOutput.innerHTML+= \"\\n\";\n\n\njsOutput.innerHTML+= \"// Check in IE 8\\n\";\nif (typeof window.external !== 'undefined' &&\n    typeof window.external.InPrivateFilteringEnabled !== 'undefined') {\n    jsOutput.innerHTML+= \"window.external.InPrivateFilteringEnabled ist verfügbar.\\n\";\n    jsOutput.innerHTML+= \"window.external.InPrivateFilteringEnabled() = \" + window.external.InPrivateFilteringEnabled() + \" (\" + typeof window.external.InPrivateFilteringEnabled() + \")\\n\";\n} else {\n    jsOutput.innerHTML+= \"window.external.InPrivateFilteringEnabled ist nicht verfügbar.\\n\";\n\n}\njsOutput.innerHTML+= \"\\n\";\n\njsOutput.innerHTML+= \"// User Agent\\n\";\njsOutput.innerHTML+= navigator.userAgent + \"\\n\";\n\n</script>\n",
            "url": "https://blog.thomaspuppe.de/do-not-track-header-crossbrowser",
            "title": "doNotTrack Browserübergreifend erkennen",
            "summary": "Der doNotTrack Flag des Browsers signalisiert, dass ein Nutzer nicht getrackt werden möchte. Diese Information lässt sich per JS auslesen &mdash; jedoch je nach browser unterschiedlch.",
            "date_modified": "2013-11-07T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/visualized-io-berlin-2013",
            "content_html": "<p>Eine grobe Zusammenfassung der Themen auf der VISUALIZED.iO Konferenz am 05. Oktober 2013 in Berlin. Es ist wenig ausformuliert, sondern eher eine Liste an Stichpunkten, Links zu den vorgestellten Projekten und einige Zitate.</p>\n<blockquote>\"Knowledge is the reason for change. Data Visualization helps spreading knowledge.\" &mdash; Moritz Stefaner</blockquote>\n\n<p><a href=\"http://this-is-maral.com/\">Maral Pourkazemi</a> (<a href=\"https://twitter.com/maralllo\">@maralllo</a>) führte wunderbar durch die Konferenz.</p>\n\n<h3>1) Cedrik Kiefer (<a href=\"https://twitter.com/CedricKiefer\">@cedrickiefer</a>), <a href=\"http://www.onformative.com/\">onformative</a></h3>\n<p>\"Sometimes data us visualized to create an emotion, not to give information.\"</p>\n<p>\"Adding data does not necessarily adding meaning.\"</p>\n<p>\"Your data might be more boring than you think.\"</p>\n\n\n<h3>2) <a href=\"http://benedikt-gross.de/\">Benedikt Groß</a> (<a href=\"https://twitter.com/bndktgrs\">@bndktgrs</a>): Reading and Writing Landscapes</h3>\n<p>Benedikt Groß stellte sein Projekt \"The Atlas of LA Pools\" vor. Interessante Einblicke in die Mühen, aus den Rohdaten (Satelliten(?)fotos) verwertbare Daten zu machen. Wochenlange Handarbeit und Outsourcing nach Indien inbegriffen. <a href=\"http://benedikt-gross.de/log/2013/06/the-big-atlas-of-la-pools/\">http://benedikt-gross.de/log/2013/06/the-big-atlas-of-la-pools/</a></p>\n<p>Zum Abschluss gab es einen Überblick über sein Projekt zum \"Agricultural Printing\", der Gestaltung von Landschaft. <a href=\"http://benedikt-gross.de/log/2013/06/avena-test-bed_agricultural-printing-and-altered-landscapes/\">http://benedikt-gross.de/log/2013/06/avena-test-bed_agricultural-printing-and-altered-landscapes/</a></p>\n\n<h3>3) <a href=\"http://christopherwarnow.com/\">Christopher Warnow</a> (<a href=\"https://twitter.com/brainSteen\">@brainSteen</a>): Sick Data - The weird cousin of Big Data.</h3>\n<p>\"It's not the petabytes. It's the question.\"</p>\n<p>Christopher Warnow stellte einige Ergebnisse seiner Visualisierung von Lobbying, Geldflüssen und der Shareholders des DAX (viele Gewinne fließen ins Ausland) vor.</p>\n\n<h3>4) <a href=\"http://www.esono.com/\">Boris Müller</a></h3>\n<p>Digitale Kuppelproduktion – <a href=\"http://www.marc-tiedemann.de/2013/05/fulldome-facebook-visualization/\">Marc Tiedemann: Datenvisualisierung im Planetarium</a>(!!!) Bei Vimeo gibt es <a href=\"http://vimeo.com/73371511\">ein schönes Video des Projekts</a>.</p>\n<p>Vorstellung des <a href=\"http://viz.ged-project.de/\">GED VIZ</a> und einiger Hintergründe beim UI Design.</p>\n<p>\"Only who is interested in the data, will be interested in the visualization.\"</p>\n<p>\"Provide a tool that allows people to tell stories. (Exploration and communication)\"</p>\n\n<h3>5) <a href=\"http://mariandoerk.de/\">Marian Doerk</a> (<a href=\"https://twitter.com/nrchtct\">@nrchtct</a>): Taking Visualization to the streets</h3>\n<p>\"The Flaneur\" als Metapher für den Informationssuchenden. Visualisierte Daten als Stadt. Und diese erkundet man nicht mit einer Karte aus Vogelperspektive, sondern durchs Spazierengehen in den Straßen. \"A navigational approach, where data elements serve as anchors for local views.\"</p>\n<p>Vorstellung zweier Projekte: <a href=\"http://mariandoerk.de/pivotpaths/\">Pivot Paths</a> und <a href=\"http://www.wordwanderer.org/\">Word Wanderer</a>.</p>\n<p>\"They are prototypes. They are meant to break.\"</p>\n\n<h3>6) <a href=\"http://sandrarendgen.wordpress.com/\">Sandra Rendgen</a> (<a href=\"https://twitter.com/srendgen\">@srendgen</a>): Storytelling in DataViz</h3>\n<p>Storytelling in movies evolved. First they've been showing whatever, because the technology was new and cool. Then they used narrative patterns from the theater. Later, own patterns evolved. The same is to be expected from storytelling via data visualization.</p>\n\n<h3>7) <a href=\"http://sebastianmeier.eu/\">Sebastian Meier</a> &amp; <a href=\"http://mphasize.de/\">Marcus Paeschke</a> (<a href=\"https://twitter.com/letsMphasize\">@letsMphasize</a>): Insights from teaching DataViz</h3>\n<p>Kurzweilige Einblicke in die Lehre von Datenvisualisierung an der Hochschule. Anfangs erwarten die Studenten IronMan-Interfaces. Doch zunächst ringen sie um Bar Charts.</p>\n<p>Vorstellung von Studentenprojekten: Visualizing Meteorites <a href=\"http://www.meteor-impact.com/\">www.meteor-impact.com/</a>, <a href=\"http://visualizing.org/visualizations/fallen-and-found-0\">visualizing.org/visualizations/fallen-and-found-0</a>, <a href=\"http://www.kimalbrecht.com/project/meteorites/\">www.kimalbrecht.com/project/meteorites/</a>) und von der weltweiten Schneedecke (spontan keine Links gefunden).</p>\n\n<h3>8) <a href=\"http://www.felix-beck.de/\">Felix Hardmood Beck</a>: Media in Space</h3>\n<p>Vorstellung des <a href=\"http://www.felix-beck.de/?/media/living-cartography/\">Living Cartography</a> Projekts und der Installation <a href=\"http://www.artcom.de/projekte/projekt/detail/river-is/\">River is...</a>.</p>\n\n<h3>9) <a href=\"http://anf.nu/\">Andreas Nicolas Fischer</a> (<a href=\"https://twitter.com/__anf\">@__anf</a>)</h3>\n<p>Andreas Nicolas Fischer erstellt Skulpturen aus Daten, Algorithmen und Musik. Einige davon stellte er vor.</p>\n\n<h3>10) <a href=\"http://ikuye.com/\">David Ikuye</a> (<a href=\"https://twitter.com/d4ve\">@d4ve</a>): Behaviour Change by Design</h3>\n<p>\"the outcome of our work changes peoples behaviour.\"</p>\n<p>Vorstelleung einiger Beispiele, wie Design und Datenvisualisierung das vehalten von Menschen ändert: die <a href=\"http://www.thefuntheory.com/speed-camera-lottery-0\">schwedische Blitzer-Lotterie</a>, Energieeinsparung durch Vergleiche des Haushaltsverbrauchs mit der Nachbarschaft, <a href=\"http://runtogether.jp/\">Run Together</a> Aktion von Nike.</p>\n<p>Danach stellte David die <a href=\"http://wecycle.cc/\">App weCycle</a> vor, die eigene Fahrradfahrten trackt und zu häufigerem Fahren ermuntern soll.</p>\n\n<h3>11) <a href=\"http://www.uhsless.de/\">Ulli Hendrik Streckenbach</a>: Why I am Visualizing Information</h3>\n<p>In einem tollen Votrag erzählte Ulli Streckenbach, wie er zur Visualisierung fand (wegen seiner Vortragsangst) und stellte zwei seiner Arbeiten vor: <a href=\"http://www.uhsless.de/?p=25\">The overfishing of the oceans</a> und <a href=\"http://www.uhsless.de/?p=963\">Let's talk about soil</a></p>\n<p>\"People are <del>busy</del> lazy.\"</p>\n\n<h3>12) <a href=\"http://www.pitchinteractive.com/\">Wesley Grubbs</a> (<a href=\"https://twitter.com/pitchinc\">@pitchinc</a>): Drones</h3>\n<p>In einem bewegenden Vortrag stellte Wesley Grubbs das <a href=\"http://drones.pitchinteractive.com/\">Out of Sight Out of Mind</a> Projekt vor, das alle bekannten Drohnenangriffe der Amerikaner auf Pakistan visualisiert.</p>\n\n<h3>13) <a href=\"http://www.oberhaeuser.info/\">Martin Oberhäuser</a> (<a href=\"https://twitter.com/oberhaeuserinfo\">@oberhaeuserinfo</a>)</h3>\n<p>\"Design is a filter for information.\"</p>\n<p>\"Do not only display data in another way, but rather become an author!\"</p>\n<p>Vorstellung der Diplomarbeit <a href=\"http://www.oberhaeuser.info/Stadtistik-City-Statistics\">Stadtistik</a> und der <a href=\"http://www.nextr.info/\">nextr iPhone App</a>.</p>\n\n<h3>14) <a href=\"http://www.nand.io/\">NAND.io</a> : Making Data Tangible</h3>\n<p>You can only see the effects of big data, coming out of a black box. Transparency is important. Make people aware of what is happening.</p>\n<p>Zwei Projekte zur Unterstützung dieser Thesen: natürliche Zufallszahlen-Generatoren (<a href=\"http://v2.nl/archive/works/the-known-unknowns\">Known Unknowns</a>) und die Täuschung von \"Smart\" Devices (<a href=\"http://www.nand.io/awareness/unreliable-machinery\">Unreliable Machinery</a>).</p>\n\n<h3>15) <a href=\"http://moritz.stefaner.eu/\">Moritz Stefaner</a> (<a href=\"https://twitter.com/moritz_stefaner\">@moritz_stefaner</a>): Mapping the real worlds</h3>\n<p>Vorstellung von drei Projekten (<a href=\"http://moritz.stefaner.eu/projects/resonet/info.html\">resonet</a>, <a href=\"http://stadt-bilder.com/\">Stadtbilder</a> und <a href=\"http://www.zeit.de/politik/deutschland/wahlland\">Wahlland</a>) und einige kluge Worte zum Zweck der Visualisierung (Data Visualization as a Macroscope. Data Visualization as a body extension and brain amplifier.)</p>\n<p>\"We are the new photojournalists.\"</p>\n\n<p>\"Knowledge is the reason for change. Data Visualization helps spreading knowledge.\"</p>\n",
            "url": "https://blog.thomaspuppe.de/visualized-io-berlin-2013",
            "title": "VISUALIZED.iO Berlin 2013",
            "summary": "Eine Zusammenfassung der Themen auf der VISUALIZED.iO Konferenz  2013 in Berlin.",
            "date_modified": "2013-10-09T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/goodbye-google-analytics-goodbye-piwik",
            "content_html": "<p>Warum ich mein Website-Tracking von Google Analytics über Piwik zu AWStats zurück entwickelte und trotzdem nichts vermisse.</p>\n<p><img src=\"/images/2013/10/tracking_graphen.png\" alt=\"Die Graphen von drei Analysetools gegenübergestellt\"></p>\n\n<p>Im Juli 2013 wurde das Besuchertracking bei Bundestwitter umgestellt von Google Analytics (mit IP-Anonymisierung) auf Piwik. Das ist ein OpenSource Tracking-Dienst den man sich selbst hosten kann. Wenn der eigene Server geschont werden soll, kann man das auch auf seinem eigenen Cloud-Rechner installieren. Eine schöne Anleitung dazu gibt es <a href=\"http://dicasdolampada.wordpress.com/2013/07/22/goodbye-google-analytics-hello-piwik/\">hier</a> und <a href=\"https://github.com/openshift/piwik-openshift-quickstart/\">hier</a>.</p>\n<p>Piwik war mir wichtig, um vom Platzhirschen Google Analytcis loszukommen. Kleiner paranoider Exkurs:</p>\n<blockquote>Man muss sich das mal auf der Zunge zergehen lassen: ich zwinge den Besucher meiner Seite, Code vom Server des profitorientierten Unternehmen Google aus den USA herunterzuladen. Dieser Code wird im Browser meines Besuchers ausgeführt und sendet dann seine Erkenntnisse an seinen Herkunftsserver: Google in den USA.</blockquote>\n\n<p>Mit der Nutzung von Google Analytics leistet man Google Beihilfe zur Erstellung von Nutzerprofilen. Mit Piwik werden die User-Daten auf dem eigenen Server gehostet. Damit klinkt man seine eigene Website aus dem Google-Netzwerk aus. (Das Gleiche gilt für die Nicht-Nutzung von Facebook- oder Twitter-Widgets.)</p>\n<p>Daher wollte ich herausfinden, ob man wirklich auf die Features von Google Analytics angewiesen ist. Sicher: das Tool ist das beste kostenlose Tracking-Tool auf dem Markt. Aber solang man auf die Integration mit Google AdWords verzichten kann, braucht man die Funktionen vielleicht nicht alle?</p>\n<p>Nachdem ich ein paar Monate völlig zufrieden war mit Piwik, entschloss ich mich, noch einen &quot;Schritt zurück&quot; zu gehen und die serverseitige Software AWStats zu testen. Die wertet die Apache Logfiles aus (welche standardmäßig sowieso angelegt werden), und stellt die Ergebnisse dar. AWStats ist bei vielen Hostings inklusive und von Anfang an installiert.</p>\n<p>Die Kernfunktionen, die ich nutze, bieten tatsächlich alle 3 Systeme:</p>\n<ul>\n<li>Besucher pro Tag, Monat</li>\n<li>Besucherquelle: Referrer-Website bzw. Suchmaschine</li>\n<li>Suchbegriffe, über die Besucher auf die Seite kamen</li>\n<li>Mobile Nutzer</li>\n<li>Verweildauer</li>\n</ul>\n<p>AWStats zeigt nicht den Anteil neuer bzw. wiederkehrender Besucher an. Google Analytics hat zudem eine &quot;Trackback&quot;-Übersicht mit Seiten, die auf Bundestwitter verlinken (auch ohne dass Besucher darüber kamen). Dafür gibt es aber auch Dienste, und die Google-Suche lässt sich entsprechend nutzen (<a href=\"https://www.google.com/search?q=link%3A+%22bundestwitter.de%22+-site%3Abundestwitter.de\">link: &quot;bundestwitter.de&quot; -site:bundestwitter.de</a> sucht Seiten, die auf bundestwitter.de verlinken und schließt dabei bundestwitter.de aus).</p>\n<p>Ein weiteres Alleinstellungsmerkmal von Google Analytics ist die Messung der Website Performance. Diese Funktion finde ich sehr stark, aber auch sie lässt sich ersetzen durch andere Dienste wie Pingdom RUM (die man auch temporär nutzen kann, und nicht ständig aktiv haben muss).</p>\n<p>Dafür bietet AWStats sogar Vorteile, die die anderen Tools nicht bieten:</p>\n<ul>\n<li>Der Client muss kein JS laden und ausführen.</li>\n<li>Ich habe die Rohdaten und kann sie herunterladen.</li>\n<li>Liste von 404 Responses. Ich sehe also, auf welche Seiten fehlerhaft verlinkt wird.</li>\n<li>Anzeige der verbrauchten Bandbreite pro Ressource. Nicht wichtig bei meinem Hosting, aber für die Performance-Optimierung nützlich.</li>\n</ul>\n<p>Interessant ist auch, dass die Anzahl der gezählten Besucher stark variiert. AWStats zeigt ca. doppelt so viele Besucher an wie Piwik (für Google Analytics habe ich keinen Vergleich, weil dies nicht parallel installiert war). Daher genieße ich die Zahlen aller Dienste mit Vorsicht, und achte eher auf Auf- und Abwärtstrends statt absolute Zahlen.</p>\n<p><strong>Fazit: für den normalen Gebrauch bietet AWStats alles, was der Website-Betreiber begehrt. Wer auf clientseitiges Tracking von Google Analytics oder Piwik verzichtet, tut seinem Besucher etwas Gutes ohne auf Besucherstatistiken verzichten zu müssen. Mit der Liste von 404 Fehlern verfügt AWStats sogar über ein nützliches Alleinstellungsmerkmal.</strong></p>\n",
            "url": "https://blog.thomaspuppe.de/goodbye-google-analytics-goodbye-piwik",
            "title": "Good bye Google Analytics! Good bye Piwik! Hallo AWStats!",
            "summary": "Warum ich mein Website-Tracking von Google Analytics über Piwik zu AWStats zurück entwickelte und trotzdem nichts vermisse.",
            "date_modified": "2013-10-22T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/twitter-verhalten-mdb-und-nds",
            "content_html": "<p>Wie viele Politiker sind auf Twitter aktiv? Wie häufig twittern sie? Was wird geschrieben? Erzeugt das Bürgernähe? Hilft es im Wahlkampf?</p><p><em>Ein Überblick über das Twitter-Verhalten der MdB und der Wahlkämpfer der niedersächsischen Landtagswahl 2013.</em></p>\n\n<p>Dieser Artiel ist die schriftliche Zusammenfassung einer <a href=\"images/2013/01/bundestwitter-mdb-verhalten/praesentation_for-public.pdf\">Präsentation</a>, die ich im Januar 2013 an der HTW Berlin hielt.</p>\n\n<h2>Wie viele Politiker twittern?</h2>\n<p>Von 619 Abgeordneten twittern 230 aktiv (im letzten halben Jahr mindestens eine Nachricht gesendet).</p>\n<table>\n<thead>\n    <tr>\n        <td></td>\n        <td>CDU/CSU</td>\n        <td>SPD</td>\n        <td>FDP</td>\n        <td>Die LINKE</td>\n        <td>Bündnis 90/Die Grünen</td>\n    </tr>\n</thead>\n<tbody>\n    <tr>\n        <td>Sitze im Bundestag</td>\n        <td>237</td>\n        <td>146</td>\n        <td>93</td>\n        <td>76</td>\n        <td>68</td>\n    </tr>\n    <tr>\n        <td>Twitter-Accounts</td>\n        <td>64</td>\n        <td>50</td>\n        <td>48</td>\n        <td>34</td>\n        <td>44</td>\n    </tr>\n    <tr>\n        <td>Verhältnis</td>\n        <td>17%</td>\n        <td>34%</td>\n        <td>52%</td>\n        <td>45%</td>\n        <td>65%</td>\n    </tr>\n</tbody>\n</table>\n\n<h2>Seit wann twittern die Politiker?</h2>\n<p>Twitter wurde 2006 gegründet. Die Twitter-Anfänge der deutschen MdB scheinen vom US-Wahlkampf 2008 inspiriert zu sein. Der erste MdB des 17. Deutschen Bundestages mit Twitter-Account war <a href=\"http://www.bundestwitter.de/mdb/johannesvogel/\">Johannes Vogel</a> von der FDP. Er eröffnete seinen Account am 28.07.2008 und twittert seitdem durchgehend aktiv (im Schnitt 1,6 Nachrichten pro Tag).</p>\n<p>Im September 2008 wurden dann viele Accounts der FDP-Fraktion angelegt (welche zum Teil aber nur zur Namenssicherung dienten und nie aktiv waren).</p>\n<figure>\n<img src=\"images/2013/01/bundestwitter-mdb-verhalten/neue-accounts-2008.png\" alt=\"neue MdB Twitter Accounts 2008\"><br />\n<img src=\"images/2013/01/bundestwitter-mdb-verhalten/neue-accounts-2009.png\" alt=\"neue MdB Twitter Accounts 2009\"><br />\n<img src=\"images/2013/01/bundestwitter-mdb-verhalten/neue-accounts-2010.png\" alt=\"neue MdB Twitter Accounts 2010\"><br />\n<img src=\"images/2013/01/bundestwitter-mdb-verhalten/neue-accounts-2011.png\" alt=\"neue MdB Twitter Accounts 2011\"><br />\n<img src=\"images/2013/01/bundestwitter-mdb-verhalten/neue-accounts-2012.png\" alt=\"neue MdB Twitter Accounts 2012\"><br />\n<figcaption>MdB-Twitter-Account Neuzugänge in den Jahren 2008 bis 2012</figcaption>\n</figure>\n<p>Die anderen Parteien begannen im August 2008 (<a href=\"http://www.bundestwitter.de/mdb/hubertus_heil/\">Hubertus Heil</a>, SPD), September 2008 (<a href=\"http://www.bundestwitter.de/mdb/Volker_Beck/\">Volker Beck</a>, Bündnis 90/Die Grünen), Dezember 2008 (<a href=\"http://www.bundestwitter.de/mdb/smuellermdb/\">Stefan Müller</a>, CDU/CSU) und Januar 2009 (<a href=\"http://www.bundestwitter.de/mdb/Halina_Waw/\">Halina Wawzyniak</a>, Die LINKE). 2009 wurden dann auch 140 weitere Accounts aller Parteien eröffnet &mdash; bevor es zur Bundestagswahl im September 2009 einen Rückgang von Neuregistrierungen gab. Seit Herbst 2012 wurden keine neuen Twitter-Accounts registriert.</p>\n\n<h2>Wie verteilen sich Accounts, Follower und Tweets auf die Parteien?</h2>\n<p>Verglichen mit der Zahl der Sitze im Bundestag sind die kleinen/jungen Parteien aktiver bei Twitter als die großen. Die FDP sticht bei Follower-Zahlen hervor, während die Grünen am meisten schreiben.</p>\n<figure>\n    <img src=\"images/2013/01/bundestwitter-mdb-verhalten/verteilung-accounts.png\" alt=\"Graph: Verteilung der Accounts\"><br />\n    <img src=\"images/2013/01/bundestwitter-mdb-verhalten/verteilung-follower.png\" alt=\"Graph: Verteilung der Follower\"><br />\n    <img src=\"images/2013/01/bundestwitter-mdb-verhalten/verteilung-tweets.png\" alt=\"Graph: Verteilung der Tweets\"><br />\n</figure>\n<p>Natürlich gibt es jeweils eine große Bandbreite. Jede Partei hat sehr aktive und sehr inaktive Twitterer. Am Aktivsten sind Folgende Abgeordnete:</p>\n<figure>\n<img src=\"images/2013/01/bundestwitter-mdb-verhalten/top-accounts.png\">\n<figcaption>(Stand: Januar 2013)</figcaption>\n</figure>\n\n\n<h2>Wer hat die meisten Follower?</h2>\n\n<table>\n    <tr>\n        <td><img src=\"images/2013/01/bundestwitter-mdb-verhalten/profile_schroeder_k.jpg\" alt=\"Profilbild Kristina Schröder\"></td>\n        <td>Dr. Kristina Schröder (<a href=\"http://www.bundestwitter.de/mdb/schroeder_k/\">@schroeder_k</a>)<br />32.757 Follower</td>\n    </tr>\n    <tr>\n        <td><img src=\"images/2013/01/bundestwitter-mdb-verhalten/profile_altmaier.jpg\" alt=\"Profilbild Peter Altmaier\"></td>\n        <td>Peter Altmaier (<a href=\"http://www.bundestwitter.de/mdb/peteraltmaier/\">@peteraltmaier</a>)<br />31.478 Follower</td>\n    </tr>\n    <tr>\n        <td><img src=\"images/2013/01/bundestwitter-mdb-verhalten/profile_Volker_Beck.jpg\" alt=\"Profilbild Volker Beck\"></td>\n        <td>Volker Beck (<a href=\"http://www.bundestwitter.de/mdb/Volker_Beck/\">@Volker_Beck</a>)<br />28.279 Follower</td>\n    </tr>\n    <tr>\n        <td><img src=\"images/2013/01/bundestwitter-mdb-verhalten/profile_FDP_Fraktion.jpeg\" alt=\"Profilbild FDP-Fraktion\"></td>\n        <td>FDP-Fraktion (<a href=\"http://www.bundestwitter.de/mdb/FDP_Fraktion/\">@FDP_Fraktion</a>)<br />25.033 Follower</td>\n    </tr>\n    <tr>\n        <td><img src=\"images/2013/01/bundestwitter-mdb-verhalten/profile_sigmargabriel.jpg\" alt=\"Profilbild Sigmar Gabriel\"></td>\n        <td>Sigmar Gabriel (<a href=\"http://www.bundestwitter.de/mdb/sigmargabriel/\">@sigmargabriel</a>)<br />18.731 Follower</td>\n    </tr>\n</table>\n<p><em>(Stand: Januar 2013)</em></p>\n\n<p>Zum Vergleich: Barack Obama hat 25.000.000 Follower, David Cameron 200.000 und sein Amtsaccount als Prime Minister, 2.000.000 Follower.</p>\n\n\n<h2>Welche Inhalte werden verschickt?</h2>\n<p>Es findet – mit 7% der Nachrichten – relativ wenig Dialog statt. (Relativ zu meiner Erwartung. Ich kenne keine Twitter-weiten Zahlen hierzu.) Umso mehr werden Links verschickt (zu Pressemitteilungen, Artikeln, Fotos) und geretweetet (was eine sehr einfache Form der \"Inhaltsgenerierung\" ist).</p>\n<figure>\n<img src=\"images/2013/01/bundestwitter-mdb-verhalten/inhaltsverteilung.png\" alt=\"Graph: Verteilung der Inhalte\">\n</figure>\n<p>Wobei zu beachten ist: aus dieser Statistik entfallen direkte Tweets an Persionen via \"@Screenname\" am Anfang des Tweets, weil diese Nachrichten nicht in der öffentlichen Timeline erscheinen und somit nicht von Bundestwitter ausgewertet werden.</p>\n\n<h1>Wahllkampf in Niedersachsen</h1>\n<p>Im Landtagswahlkampf 2013 für Niedersachsen habe ich die Accounts der amtierenden Abgeordneten sowie aller twitternden Kandidaten beobachtet. Hier einige Impressionen (die ich noch vor der Wahl beispielhaft zusammengetragen habe).</p>\n<figure>\n    <img src=\"images/2013/01/bundestwitter-mdb-verhalten/nds-tweet-mcallister.png\" alt=\"Tweets von David McAllister\">\n    <figcaption>David McAllisters Team twitterte eher hölzern.</figcaption>\n</figure>\n<figure>\n    <img src=\"images/2013/01/bundestwitter-mdb-verhalten/nds-tweets-olpen.png\" alt=\"Tweets von oliver Olpen\">\n    <figcaption>Berichte über den Wahlkampf – auch in der Provinz oder übers Plakatekleben</figcaption>\n</figure>\n<figure>\n    <img src=\"images/2013/01/bundestwitter-mdb-verhalten/nds-tweets-weil.png\" alt=\"Tweets von Stephan Weil\">\n    <figcaption>Das Team um Stephan Weil war etwas näher am Bürger.</figcaption>\n</figure>\n<figure>\n    <img src=\"images/2013/01/bundestwitter-mdb-verhalten/nds-tweet-katta.png\" alt=\"Tweets von Piraten-Politikern\">\n    <figcaption>Typisch für die Piraten: der schon länger existirende private Account wird nun für Privates und Politik genutzt.</figcaption>\n</figure>\n<figure>\n    <img src=\"images/2013/01/bundestwitter-mdb-verhalten/nds-tweet-dorisschroederk.png\" alt=\"Tweets von Doris Schröder-Köpf\">\n    <figcaption>Doris Schröder-Köpf ließ ihren Account automatisch von Facebook befüllen.</figcaption>\n</figure>\n\n\n<p>Die Beispiele zeigen, dass das Twitter-Verhalten stark variiert. Jede Partei hat \"gute\" (authentisch, dialogfreudig) und \"schlechte\" (unpersönliches Broadcasting) Twitter-Accounts. In der Tendenz war mein Eindruck, dass die FDP und CDU Twitter eher zum Verbreiten von Statements und Meldungen benutzen. Die SPD war um mehr Bürgernähe bemüht, aber das war eher selten. Die Linke war in Niedersachsen wenig aktiv (mit Ausnahme von <a href=\"http://kandidaten.niedersachsen-tweets.de/mdb/victorperli/\">Victor Perli</a>), aber authentisch und dialogfreudig. Die Grünen waren fleißig und authentisch, ebenso wie die Piraten, die natürlich in diesem Medium viel Erfahrung haben. Bei ihnen vermischen sich politische Inhalte aber stark mit privaten, sodass man beim Folgen den Privatpersonen näher kommt als den Politikern.</p>\n<p></p>\n<p>In der Nachbetrachtung – wo man immer schlauer ist – kann man sagen: CDU twitterte zu professionall (= nicht authentisch). SPD hat es hinbekommen. FDP zu passiv. Piraten nicht professionell (im klassischen Politik-Sinn) genug. Grüne aktiv und authentisch. Die Freien Wähler waren auch auf Twitter aktiv, aber fielen nicht ins Gewicht. Die Kandidaten anderer Parteien hatten keine Twitter-Accounts.</p>\n<p>Natürlich haben auch die Medien sich die Onlinekompetenz im Wahlkampf angesehen. Ein Auszug von Beiträgen:\n<ul>\n    <li><a href=\"http://www.ndr.de/regional/niedersachsen/landtagswahl_niedersachsen_2013/netzwahlkampf101.html\">&quot;Vorbild Obama? Web-Wahlkampf in Niedersachsen&quot;</a> von Birgit Reichardt, NDR.de</li>\n    <li><a href=\"http://www.ndr.de/fernsehen/sendungen/hallo_niedersachsen/media/hallonds13283.html\">&quot;Wahlkampf im Internet&quot;</a> Hallo Niedersachsen - 02.01.2013 19:30 Uhr</li>\n</ul>\n</p>\n",
            "url": "https://blog.thomaspuppe.de/twitter-verhalten-mdb-und-nds",
            "title": "Wie twittern Politiker?",
            "summary": "Ein Überblick über das Twitter-Verhalten der MdB und der Wahlkämpfer der niedersächsischen Landtagswahl 2013",
            "date_modified": "2013-01-22T00:00:00.000Z"
        },
        {
            "id": "https://blog.thomaspuppe.de/eigene-domain-google-plus-umleiten",
            "content_html": "<p>Ein Tipp für die Leute mit eigener Domain: Weiterleitung von <code>thomaspuppe.de/+</code> auf das Google-Profil via .htaccess:</p>\n<pre>RewriteEngine on\nRewriteCond %{REQUEST_URI} ^/\\+\nRewriteRule ^(.*)$ https://plus.google.com/u/0/109992889758306031081/ [R=permanent,L]</pre>\n",
            "url": "https://blog.thomaspuppe.de/eigene-domain-google-plus-umleiten",
            "title": "domain.de+ auf Google+ Profil umleiten",
            "summary": "Weiterleitung von thomaspuppe.de/+ auf das Google-Profil via .htaccess",
            "date_modified": "2013-01-17T00:00:00.000Z"
        }
    ]
}